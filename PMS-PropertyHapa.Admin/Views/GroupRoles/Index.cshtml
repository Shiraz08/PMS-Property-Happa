
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-12 col-sm-6">
                    <h3>Default</h3>
                </div>
                <div class="col-12 col-sm-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"> <a class="home-item" href="index.html"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item"> Dashboard</li>
                        <li class="breadcrumb-item active"> Default</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid default-dash">
        <div class="row">
            <div class="col-xl-12 col-md-6 dash-xl-50">
                <div class="card">
                    <div class="card-header align-items-center d-flex">
                        <h4 class="card-title mb-0 flex-grow-1"><button type="button" class="btn btn-success add-btn" data-bs-toggle="modal" id="create-btn" data-bs-target="#AddRole"><i class="ri-add-line align-bottom me-1"></i> Add Role</button></h4>
                        <div class="flex-shrink-0">
                        </div>
                    </div><!-- end card header -->
                    <div class="card-body table-responsive">
                        <table class="display" id="grouproles">
                            <thead>
                                <tr>
                                    <th scope="col">Roles Title</th>
                                    <th scope="col">Roles Key</th>
                                    <th scope="col">Roles Status</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@* Add Model*@
<div class="modal fade" id="AddRole" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light p-3">
                <h5 class="modal-title" id="exampleModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-modal"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="name">Role Title:</label>
                    <input name="RoleTitle" id="RoleTitle" class="form-control" placeholder="Enter Role Title" type="text" onkeypress="InputAlphaNoOnlyvalidation(event)"  />
                </div>
                 <div class="form-group">
                    <label for="name">Role Key:</label>
                    <input name="RoleKey" id="RoleKey" class="form-control" placeholder="Enter Role Key" type="text" onkeypress="InputAlphaNoOnlyvalidation(event)"  />
                </div>
            </div>
            <div class="modal-footer">
                <div class="hstack gap-2 justify-content-end">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success" id="addbtn" onclick="Addrole();">Add Role</button>
                </div>
            </div>
        </div>
    </div>
</div>
@*Edit Model*@
<div class="modal fade" id="EditRole" tabindex="-1" aria-labelledby="exampleModalLabels" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light p-3">
                <h5 class="modal-title" id="exampleModalLabels"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-modal"></button>
            </div>
            <div class="modal-body">
                     <input name="Ids" id="Ids" class="form-control" type="hidden" />
                <div class="form-group">
                    <label for="name">Role Title:</label>
                    <input name="RoleTitles" id="RoleTitles" class="form-control" placeholder="Enter Role Title" type="text" onkeypress="InputAlphaNoOnlyvalidation(event)"  />
                </div>
                <div class="form-group">
                    <label for="name">Role Key:</label>
                    <input name="RoleKeys" id="RoleKeys" class="form-control" placeholder="Enter Role Key" type="text" onkeypress="InputAlphaNoOnlyvalidation(event)"  disabled="disabled"/>
                </div>
            </div>
            <div class="modal-footer">
                <div class="hstack gap-2 justify-content-end">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success" id="editbtn" onclick="EditRoles();">Edit Role</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {

        getAllroles();
    });
    function CheckValidation() {
        if ($('#RoleTitle').val() == '') { $('#RoleTitle').css('border-color', 'red'); var Toast = Swal.mixin({ toast: true, position: 'top-end', showConfirmButton: false, progressBar: true, timer: 3000 }); Toast.fire({ icon: 'error', title: 'Required Fields are Mandatory...!' }); } else { $('#RoleTitle').css('border-color', '#ced4da') }
        if ($('#RoleKey').val() == '') { $('#RoleKey').css('border-color', 'red'); var Toast = Swal.mixin({ toast: true, position: 'top-end', showConfirmButton: false, progressBar: true, timer: 3000 }); Toast.fire({ icon: 'error', title: 'Required Fields are Mandatory...!' }); } else { $('#RoleKey').css('border-color', '#ced4da') }
        if ($('#RoleTitle').val() == '' || $('#RoleKey').val() == '')
        {
            return false;
        }
        else
        {
           return true;
        }
    }
    function CheckEditValidation() {
        if ($('#RoleTitles').val() == '') { $('#RoleTitles').css('border-color', 'red'); var Toast = Swal.mixin({ toast: true, position: 'top-end', showConfirmButton: false, progressBar: true, timer: 3000 }); Toast.fire({ icon: 'error', title: 'Required Fields are Mandatory...!' }); } else { $('#RoleTitles').css('border-color', '#ced4da') }
        if ($('#RoleKeys').val() == '') { $('#RoleKeys').css('border-color', 'red'); var Toast = Swal.mixin({ toast: true, position: 'top-end', showConfirmButton: false, progressBar: true, timer: 3000 }); Toast.fire({ icon: 'error', title: 'Required Fields are Mandatory...!' }); } else { $('#RoleKeys').css('border-color', '#ced4da') }
        if ($('#RoleTitles').val() == '' || $('#RoleKeys').val() == '') {
            return false;
        }
        else {
            return true;
        }
    }
    function Addrole() {
        var result = CheckValidation();
        if (result == true) 
        {
            var RoleTitle = $('#RoleTitle').val(); 
            var RoleKey = $('#RoleKey').val();
            $.ajax({
                type: 'POST',
                url: '/GroupRoles/Create',
                data: {  "RoleTitle": RoleTitle, "RoleKey": RoleKey, },
                success: function (response) {
                    var Toast = Swal.mixin({ toast: true, position: 'top-end', showConfirmButton: false, progressBar: true, timer: 3000 });
                    Toast.fire({ icon: 'success', title: 'Role Create Successfully..!' });
                    $("#RoleTitle").val('');
                    $("#RoleKey").val('');
                    $('#AddRole').modal('hide');
                    getAllroles();
                }, 
                failure: function (response) {
                    $('#result').html(response);
                }
            });
        }
    }
    function getAllroles() 
    {
        $.ajax({
            type: 'GET',
            url: '/GroupRoles/GetRoles',
            processData: false,
            contentType: false,
            success: function (response) {
                debugger
                var op = '';
                $.each(response, function (key, item) {
                    debugger
                    op += '<tr>';
                    op += '<td class="name">' + item.RoleTitle + '</td>';
                    op += '<td class="name">' + item.RoleKey + '</td>';
                    if (item.RoleActive == true)
                    {
                        op += '<td style="color:green">Active</td>';
                        op += '<td><div class="d-flex gap-2"><div class="edit"><button class="btn btn-sm btn-success edit-item-btn" data-bs-toggle="modal" data-bs-target="#EditRole" onclick="EditRole(\'' + item.Id + '\',\'' + item.GroupName + '\',\'' + item.RoleTitle + '\',\'' + item.RoleKey + '\')">Edit Role</button></div><div class="remove"></div><button class="btn btn-sm btn-danger remove-item-btn" onclick="DeleteInactive(\'' + item.Id + '\')">In-Active Role</button><button class="btn btn-sm btn-danger remove-item-btn" onclick="DeleteR(\'' + item.Id + '\')">Delete Role</button> </div></td>';
                    }
                    else
                    {
                op += '<td style="color:red">In-Active</td>';
                        op += '<td><div class="d-flex gap-2"><div class="edit"><button class="btn btn-sm btn-success edit-item-btn" data-bs-toggle="modal" data-bs-target="#EditRole" onclick="EditRole(\'' + item.Id + '\',\'' + item.GroupName + '\',\'' + item.RoleTitle + '\',\'' + item.RoleKey + '\')">Edit Role</button></div><div class="remove"></div><button class="btn btn-sm btn-info remove-item-btn" onclick="DeleteRoleactive(\'' + item.Id + '\')">Active Role</button><button class="btn btn-sm btn-danger remove-item-btn" onclick="DeleteR(\'' + item.Id + '\')">Delete Role</button>  </div></td>';
                    }
                    op += '</tr>';
                });
                op = op.replace(/^\s*|\s*$/g, '');
                op = op.replace(/\\r\\n/gm, '');
                var expr = "</tr>\\s*<tr";
                var regEx = new RegExp(expr, "gm");
                var newRows = op.replace(regEx, "</tr><tr");
                $("#grouproles").DataTable().clear().rows.add($(newRows)).draw();
            },
            failure: function (response) {
                $('#result').html(response);
            }
        });
    }
    function EditRole(Id, GroupName, RoleTitle, RoleKey) {
        debugger
        $('#Ids').val(Id);
        $('#GroupNames').val(GroupName);
        $('#RoleTitles').val(RoleTitle);
        $('#RoleKeys').val(RoleKey);
    }
        function EditRoles()
        {
          var result = CheckEditValidation(); 
           if (result == true) 
           {
            $.ajax({
                type: 'POST',
                url: '/GroupRoles/Edit',
                data: { "Id": $('#Ids').val(), "RoleTitle": $('#RoleTitles').val(), "RoleKey": $('#RoleKeys').val() },
                success: function (response) {
                    $('#EditRole').modal('hide');
                    var Toast = Swal.mixin({ toast: true, position: 'top-end', showConfirmButton: false, progressBar: true, timer: 3000 });
                    Toast.fire({ icon: 'success', title: 'Role Update Successfully..!' });
                    getAllroles();
                },
                failure: function (response) {
                    $('#result').html(response);
                }
            });
           }
    }
    function DeleteInactive(Id) {
        debugger;
        Swal.fire({
            title: 'Are you sure?',
            text: "You want to In-Active this Role Again..!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: 'POST',
                    url: '/GroupRoles/InActivrrole',
                    data: {
                        "Id": Id
                    },
                    success: function (response) {
                        var Toast = Swal.mixin({ toast: true, position: 'top-end', showConfirmButton: false, progressBar: true, timer: 3000 });
                        Toast.fire({ icon: 'success', title: 'Role In-Active Successfully..!' });
                        getAllroles();
                    },
                    failure: function (response) {
                        $('#result').html(response);
                    }
                });
            }
        })
    }
    function DeleteRoleactive(Id) {
        debugger;
        Swal.fire({
            title: 'Are you sure?',
            text: "You want to Active this Role Again..!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: 'POST',
                    url: '/GroupRoles/Reactivrrole',
                    data: {
                        "Id": Id
                    },
                    success: function (response) {
                        var Toast = Swal.mixin({ toast: true, position: 'top-end', showConfirmButton: false, progressBar: true, timer: 3000 });
                        Toast.fire({ icon: 'success', title: 'Role Active Successfully..!' });
                        getAllroles();
                    },
                    failure: function (response) {
                        $('#result').html(response);
                    }
                });
            }
        })
    }

    function DeleteR(Id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to Delete this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: 'POST',
                    url: '/GroupRoles/Delete',
                    data: {
                        "Id": Id
                    },
                    success: function (response) {
                        var Toast = Swal.mixin({ toast: true, position: 'top-end', showConfirmButton: false, progressBar: true, timer: 3000 });
                        Toast.fire({ icon: 'success', title: 'Role Delete Successfully..!' });
                          getAllroles();
                    },
                    failure: function (response) {
                        $('#result').html(response);
                    }
                });
            }
        })
    }
</script>



