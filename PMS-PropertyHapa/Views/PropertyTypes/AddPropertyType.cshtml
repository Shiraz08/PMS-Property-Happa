@model PMS_PropertyHapa.Models.DTO.PropertyTypeDto

@{
    ViewData["Title"] = "Add/Edit PropertyType";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-12 col-sm-6">
                    <h3>@(Model?.PropertyTypeId == null ? "Add Property Type" : "Edit Property Type")</h3>
                </div>
                <div class="col-12 col-sm-6">
                    <ol class="breadcrumb">
                        @if (Model?.PropertyTypeId == null)
                        {
                            <li class="breadcrumb-item"><a href="@Url.Action("Create", "PropertyTypes")"><i data-feather="home"></i></a></li>

                        }
                        else
                        {
                            <li class="breadcrumb-item"><a href="@Url.Action("Update", "PropertyTypes")"><i data-feather="home"></i></a></li>
                        }
                        <li class="breadcrumb-item">PropertyType</li>
                        <li class="breadcrumb-item active">@(Model?.PropertyTypeId == null ? "Add PropertyType" : "Edit PropertyType")</li>
                    </ol>
                </div>
            </div>
        </div>

        <div class="edit-profile">
            <div class="row">
                <form id="propertyTypeForm">
                    <div class="col-xl-12">
                        <div class="card">
                            <div class="card-header pb-0">
                                <h4 class="card-title mb-0">Property Type Information</h4>
                                <div class="card-options"><a class="card-options-collapse" href="#" data-bs-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a><a class="card-options-remove" href="#" data-bs-toggle="card-remove"><i class="fe fe-x"></i></a></div>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    @if (Model != null)
                                    {
                                        <input type="hidden" id="PropertyTypeId" name="PropertyTypeId" value="@Model.PropertyTypeId" />
                                        <!-- Property Type Name -->
                                        <div class="col-sm-6">
                                            <div class="mb-3">
                                                <label for="PropertyTypeName" class="form-label">Property Type Name</label>
                                                <select class="form-control" id="PropertyTypeName" name="PropertyTypeName" required>
                                                    <option value="" disabled selected hidden>Select Property Type</option>
                                                    <option value="A">A</option>
                                                    <option value="B">B</option>
                                                    <option value="C">C</option>
                                                    <option value="D">D</option>
                                                    <option value="E">E</option>
                                                </select>
                                            </div>
                                        </div>
                                        <!-- Icon String -->
                                        <div class="col-sm-6">
                                            <div class="mb-3">
                                                <label for="Icon_String" class="form-label">Icon String</label>
                                                <input type="text" class="form-control" id="Icon_String" name="Icon_String" value="@Model.Icon_String" />
                                            </div>
                                        </div>
                                        <!-- Icon SVG -->
                                        <div class="col-sm-6">
                                            <div class="mb-3">
                                                <label for="Icon_SVG" class="form-label">Icon SVG</label>
                                                <input type="text" class="form-control" id="Icon_SVG" name="Icon_SVG" value="@Model.Icon_SVG" />
                                            </div>
                                        </div>
                                        <!-- Status -->
                                        <div class="col-sm-6">
                                            <div class="mb-3">
                                                <label for="Status" class="form-label">Status</label>
                                                <select class="form-control" id="Status" name="Status" required>
                                                    <option value="" disabled selected hidden>Select Status</option>
                                                    <option value="true">Active</option>
                                                    <option value="false">Inactive</option>
                                                </select>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="card-footer text-end">
                            <button type="button" id="submitBtn" onclick="submitPropertyTypeForm()" class="btn btn-primary">@((Model?.PropertyTypeId == null || Model?.PropertyTypeId == 0) ? "Add" : "Edit") Property Type</button>

                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    function submitPropertyTypeForm() {
        var propertyTypeData = {
            PropertyTypeId: $('#PropertyTypeId').val(),
            PropertyTypeName: $('#PropertyTypeName').val(),
            Icon_String: $('#Icon_String').val(),
            Icon_SVG: $('#Icon_SVG').val(),
            Status: $('#Status').val() === "true"
        };

        var userId = localStorage.getItem('userId');
        var userName = localStorage.getItem('userName');

        if (@(Model != null && Model.PropertyTypeId == 0 ? "true" : "false")) {
            propertyTypeData.AddedBy = userName;
            var addedDate = new Date().toISOString().slice(0, 10);
            propertyTypeData.AddedDate = addedDate;
            propertyTypeData.TenantId = userId;
        } else {
            propertyTypeData.ModifiedBy = userName;
            var modifiedDate = new Date().toISOString().slice(0, 10);
            propertyTypeData.ModifiedDate = modifiedDate;
            propertyTypeData.TenantId = userId;
            propertyTypeData.AddedDate = propertyTypeData.AddedDate;
        }


        var ajaxUrl = '';
        var method = '';

        if (@(Model?.PropertyTypeId == null || Model?.PropertyTypeId == 0 ? "true" : "false")) {
            ajaxUrl = '/PropertyTypes/Create';
            method = 'POST';
        } else {
            ajaxUrl = '/PropertyTypes/Update';
            method = 'POST';
        }


        $.ajax({
            url: ajaxUrl,
            type: method,
            contentType: 'application/json',
            data: JSON.stringify(propertyTypeData),
            success: function (response) {
                if (response.success) {
                    window.location.href = '/PropertyTypes/Index';
                    toastr.success(response.message);
                } else {
                    toastr.error(response.message);
                }
            },
            error: function (xhr, status, error) {
                toastr.error("Error occurred while processing the request.");
            }
        });
    }

    $(document).ready(function () {
        var userId = localStorage.getItem('userId');
        var userName = localStorage.getItem('userName');

        if (@(Model != null && Model.PropertyTypeId == 0 ? "true" : "false")) {
            var addedDate = new Date().toISOString().slice(0, 10);
            $('#AddedDate').val(addedDate);
            $('#AddedBy').val(userName);
            $('#TenantId').val(userId);
        } else {
            var modifiedDate = new Date().toISOString().slice(0, 10);
            $('#ModifiedDate').val(modifiedDate);
            $('#ModifiedBy').val(userName);
            $('#TenantId').val(userId);
        }
    });


    $(document).ready(function () {
        // Set selected value for PropertyTypeName
        var propertyTypeName = "@(Model?.PropertyTypeName)";
        if (propertyTypeName) {
            $("#PropertyTypeName").val(propertyTypeName);
        }

        // Set selected value for Status
        var status = "@(Model?.Status)";
        if (status !== "") {
            $("#Status").val(status);
        }
    });
</script>
