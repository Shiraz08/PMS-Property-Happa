@* @model PMS_PropertyHapa.Models.DTO.RegisterationRequestDTO *@
@{
    ViewData["Title"] = "Registration";
    Layout = "~/Views/Shared/_IdentityLayout.cshtml";
}

<style>
    .input-group {
        position: relative;
    }

    .show-hide {
        position: absolute;
        right: 35px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<style>

    .switch-container {
        display: flex;
        align-items: center;
    }

    .switch-label {
        margin-left: 10px; /* Adjust as needed */
    }

</style>

<div class="col-auto p-0">
    <form class="f1" >
        <div class="f1-steps">
            <div class="f1-progress">
                <div class="f1-progress-line" data-now-value="16.66" data-number-of-steps="2"></div>
            </div>
            <div class="f1-step active">
                <div class="f1-step-icon"><i class="fa fa-user"></i></div>
                <p>User Information</p>
            </div>
            <div class="f1-step">
                <div class="f1-step-icon"><i class="fa fa-key"></i></div>
                <p>Plan Selection</p>
            </div>
        </div>
        <fieldset>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="firstName">First Name</label>
                    <input class="form-control" id="firstName" type="text" name="firstName" placeholder="First Name">
                </div>
                <div class="form-group col-md-6">
                    <label for="lastName">Last Name</label>
                    <input class="form-control" id="lastName" type="text" name="lastName" placeholder="Last Name">
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="emailAddress">Email Address</label>
                    <div class="input-group">
                        <input class="form-control" id="emailAddress" type="email" name="emailAddress" placeholder="Email Address">
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary verify-email" onclick="sendEmailOtp()" type="button">Verify</button>
                        </div>
                    </div>
                    <input class="form-control mt-2" id="otpEmail" type="number" required name="otpEmail" placeholder="Enter OTP" style="display: none;" >
                </div>
                <div class="form-group col-md-6">
                    <label for="companyName">Company Name</label>
                    <input class="form-control" id="companyName" type="text" name="companyName" placeholder="Company Name">
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="phoneNumber">Phone Number</label>
                    <div class="input-group">
                        <input class="form-control" id="phoneNumber" type="tel" name="phoneNumber" placeholder="Phone Number">
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary verify-phone" onclick="sendPhoneOtp()" type="button">Verify</button>
                        </div>
                    </div>
                    <input class="form-control mt-2" id="otpPhone" type="number" name="otpPhone" placeholder="Enter OTP"  style="display: none;" >
                </div>
                <div class="form-group col-md-6">
                    <label for="country">Country Name</label>
                    <input class="form-control" id="country" type="text" name="country" placeholder="Country Name">
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="propertyType">Property Type</label>
                    <select class="form-control select2" id="propertyType" name="propertyType">
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <label for="units">Number of Units</label>
                    <input class="form-control" id="units" type="number" name="units" placeholder="Number of Units">
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="leadGeneration">SEO Lead Generation</label>
                    <select class="form-control" id="leadGeneration" name="leadGeneration">
                        <option value="">Select</option>
                        <option value="Content Marketing">Content Marketing</option>
                        <option value="Search Engine Optimization (SEO)">Search Engine Optimization (SEO)</option>
                        <option value="Social Media Marketing">Social Media Marketing</option>
                        <option value="Email Marketing">Email Marketing</option>
                        <option value="Paid Advertising">Paid Advertising</option>
                        <option value="Lead Magnets">Lead Magnets</option>
                        <option value="Webinars and Events">Webinars and Events</option>
                        <option value="Referral Programs">Referral Programs</option>
                        <option value="Networking">Networking</option>
                        <option value="Content Syndication">Content Syndication</option>
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <label for="currency" class="form-label">Currency</label>
                    <select class="form-control" id="currency">
                        <option value="" selected disabled hidden>Select Currency</option>
                        <option value="USD">USD - United States Dollar ($)</option>
                        <option value="EUR">EUR - Euro (€)</option>
                        <option value="GBP">GBP - British Pound (£)</option>
                        <option value="JPY">JPY - Japanese Yen (¥)</option>
                        <option value="INR">INR - Indian Rupee (₹)</option>
                    </select>
                </div>
                
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="password">Password</label>
                    <input class="form-control" id="password" type="password" name="password" placeholder="Password">
                </div>
                <div class="form-group col-md-6">
                    <label for="confirmPassword">Confirm Password</label>
                    <input class="form-control" id="confirmPassword" type="password" name="confirmPassword" placeholder="Confirm Password">
                </div>
            </div>
            <div class="f1-buttons">
                <button class="btn btn-primary btn-next" type="button">Next</button>
            </div>
        </fieldset>
        <fieldset>
            <div class="media">
                <label class="col-form-label">Number of Units</label>
                <input class="form-control" id="unitsFinal" value="1" type="number" name="unitsFinal" placeholder="Number of Units">
                <div class="media-body text-center">
                    <div class="switch-container">
                        <span class="switch-label">Monthly</span>
                        <label class="switch">
                            <input type="checkbox" id="planSelection"><span class="switch-state"></span>
                        </label>
                        <span class="switch-label">Yearly</span>
                    </div>
                </div>
            </div>
            <div class="container-fluid">
                <div class="row justify-content-center" id="monthly-container">
                    <!-- Monthly Subscription blocks will be dynamically inserted here -->
                </div>
                <div class="row justify-content-center d-none" id="yearly-container">
                    <!-- Yearly Subscription blocks will be dynamically inserted here -->
                </div>
            </div>
            <div class="bank-account-form d-none">
                <div class="row">
                    <div class="form-group col-md-6">
                        <label for="cardholderName">Cardholder Name</label>
                        <input type="text" class="form-control" id="cardholderName" placeholder="Cardholder Name" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="cardNumber">Card Number</label>
                        <input type="text" class="form-control" id="cardNumber" placeholder="Card Number" required>
                    </div>

                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label for="expiryDate">Expiration Date</label>
                        <input type="date" class="form-control" id="expiryDate" placeholder="MM/YYYY" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="cvv">CVV</label>
                        <input type="text" class="form-control" id="cvv" placeholder="CVV" required>
                    </div>
                </div>
                <div class="form-group mb-2">
                    <label for="streetAddress">Billing Address</label>
                    <input type="text" class="form-control" id="streetAddress" placeholder="Street Address" required>
                </div>
                <div class="row mb-2">
                    <div class="form-group col-md-6">

                        <input type="text" class="form-control" id="city" placeholder="City" required>
                    </div>
                    <div class="form-group col-md-6">

                        <input type="text" class="form-control" id="state" placeholder="State" required>
                    </div>
                </div>
            </div>
            <div class="f1-buttons">
                <button class="btn btn-primary btn-previous" type="button">Previous</button>
                <button class="btn btn-primary btn-submit d-none btn-register" onclick="registerUser()" type="button">Register</button>
                <input type="hidden" value="" id="subscriptionId" />
                <input type="hidden" value="" id="subscriptionName" />
                <input type="hidden" value="" id="subscriptionPrice" />
            </div>
        </fieldset>
    </form>
</div>



<script src="https://js.stripe.com/v3/"></script>

<script>

    var isNotFree = false;
    var isEmailVerified = false;
    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("GetAllPropertyTypesDll", "Auth")',
            type: 'Get',
            dataType: 'json',
            success: function (data) {
                var propertiesDropdown = document.getElementById('propertyType');
                //propertiesDropdown.innerHTML = '';
                data.forEach(function (item) {
                    var option = new Option(item.PropertyTypeName, item.PropertyTypeId);
                    propertiesDropdown.appendChild(option);
                });
            }
        });

        function updateUnitsFinal() {
            var unitsValue = $('#units').val();
            $('#unitsFinal').val(unitsValue).trigger("input")
        }

        $('#units').on('input', updateUnitsFinal);

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };

        $('#planSelection').change(function () {
            if ($(this).prop('checked')) {
                $('#monthly-container').addClass('d-none');
                $('#yearly-container').removeClass('d-none');
            } else {
                $('#monthly-container').removeClass('d-none');
                $('#yearly-container').addClass('d-none');
            }
        });

        loadSubscriptions();


        $("#unitsFinal").on("input", function () {
            handleUnitsChange();
        });

    });



    function handleUnitsChange() {
        const units = $('#unitsFinal').val();
        $('.pricing-block').each(function () {
            const priceElement = $(this).find('.price-box h4');
            const basePrice = parseFloat(priceElement.data('basePrice'));
            let newPrice = basePrice * units;

            const subscriptionName = $(this).find('h2').text().trim();
            if (subscriptionName === 'Basic') {
                newPrice *= 1;
            } else if (subscriptionName === 'Plus') {
                newPrice *= 0.75;
            } else if (subscriptionName === 'Premium') {
                newPrice *= 0.5;
            }

            priceElement.text('$' + newPrice.toFixed(2));

            const unitsElement = $(this).find('.unitsBlock');
            unitsElement.text(units);
        });
    }


    function loadSubscriptions() {
        $.ajax({
            url: '@Url.Action("GetAllSubscriptionBlocks", "Subscription")',
            type: 'Post',
            success: function (response) {
                if (response.success && Array.isArray(response.data)) {
                    const monthlyContainer = $('#monthly-container');
                    const yearlyContainer = $('#yearly-container');

                    response.data.forEach(sub => {
                        const subscriptionBlock = createSubscriptionBlock(sub);
                        if (sub.SubscriptionType === 'Monthly') {
                            monthlyContainer.append(subscriptionBlock);
                        } else if (sub.SubscriptionType === 'Yearly') {
                            yearlyContainer.append(subscriptionBlock);
                        }
                    });
                } else {
                    console.error('Failed to load subscriptions:', response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error('An error occurred while fetching subscriptions:', error);
            }
        });
    }

    function createSubscriptionBlock(subscription) {
        return `
                        <div class="col-auto">
                            <div class="pricing-block card text-center">
                                <div class="pricing-header">
                                    <h2>${subscription.SubscriptionName}</h2>
                                    <div class="price-box">
                                        <div>
                                                <h4 class="text-white" data-base-price="${subscription.Price.toFixed(2)}">$${subscription.Price.toFixed(2)} ${subscription.Currency}</h4>
                                            <p>/ ${subscription.SubscriptionType}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="pricing-list">
                                    <ul class="pricing-inner">
                                        <li>
                                                <h6><span class="unitsBlock">${subscription.NoOfUnits}</span> Units</h6>
                                        </li>
                                        <li>
                                            <h6>${subscription.SmallDescription}</h6>
                                        </li>
                                        <li>
                                            <h6>${subscription.Tax}%
                                                <span> Tax</span></h6>
                                        </li>
                                    </ul>
                                    <button
                                        class="btn btn-primary btn-lg"
                                        onclick="handleSubscriptionClick(${subscription.Price}, '${subscription.Id}', '${subscription.SubscriptionName}', '${subscription.NoOfUnits}')"
                                        type="button">
                                        ${subscription.SubscriptionName === 'Free' ? 'Trial' : 'Subscribe'}
                                    </button>
                                </div>
                            </div>
        </div>`;
    }


    function handleSubscriptionClick(price, id, name, units) {
        $("#subscriptionId").val(id);
        $("#subscriptionName").val(name);
        $("#subscriptionPrice").val(price);
        $('.bank-account-form').addClass('d-none');

        if (price === 0) {
            isNotFree = false;
            $('.btn-register').removeClass('d-none');
        } else {
            isNotFree = true;
            $('.btn-register').removeClass('d-none');
              $('.bank-account-form').removeClass('d-none');
        }
        

    }


    function registerUser() {
        var email = $("#emailAddress").val();
        var otpEmail = $("#otpEmail").val();
        var password = $("#password").val();
        var confirmPassword = $("#confirmPassword").val();


        if (!email || isEmailVerified == false) {
            toastr.error("Please make email verified.");
            return;
        }
        
        if (password !== confirmPassword) {
            toastr.error("Password and Confirm Password do not match.");
            return;
        }

        if (isNotFree) {
            var cardholderName = $("#cardholderName").val();
            var cardNumber = $("#cardNumber").val();
            var expiryDate = $("#expiryDate").val();
            var cvv = $("#cvv").val();
            var streetAddress = $("#streetAddress").val();
            var city = $("#city").val();
            var state = $("#state").val();
            var isvalid = true;
            if (!cardholderName) {
                toastr.error("Cardholder Name is required.");
                isvalid = false;
            }
            if (!cardNumber) {
                toastr.error("Card Number is required.");
                isvalid = false;
            }
            if (!expiryDate) {
                toastr.error("Expiration Date is required.");
                isvalid = false;
            }
            if (!cvv) {
                toastr.error("CVV is required.");
                isvalid = false;
            }
            if (!streetAddress) {
                toastr.error("Street Address is required.");
                isvalid = false;
            }
            if (!city) {
                toastr.error("City is required.");
                isvalid = false;
            }
            if (!state) {
                toastr.error("State is required.");
                isvalid = false;
            }
            if (!isvalid) {
                return;
            }
        }

        var data = {
            UserName: $("#firstName").val(),
            FirstName: $("#firstName").val(),
            LastName: $("#lastName").val(),
            Password: $("#password").val(),
            Email: $("#emailAddress").val(),
            UserName: $("#emailAddress").val(),
            PhoneNumber: $("#phoneNumber").val(),
            CompanyName: $("#companyName").val(),
            Country: $("#country").val(),
            PropertyTypeId: $("#propertyType").val(),
            Units: $("#unitsFinal").val(),
            LeadGenration: $("#leadGeneration").val(),
            Currency: $("#currency").val(),
            SubscriptionName: $("#subscriptionName").val(),
            SubscriptionId: $("#subscriptionId").val(),
            Price: $("#subscriptionPrice").val(),
            IsYearly: $("#planSelection").is(":checked"),
            IsTrial: $("#subscriptionName").val() == "Free" ? true : false
        };

        if (isNotFree) {
            $.extend(data, {
                CardholderName: $("#cardholderName").val(),
                CardNumber: $("#cardNumber").val(),
                ExpirationDate: $("#expiryDate").val(),
                CVV: $("#cvv").val(),
                StreetAdress: $("#streetAddress").val(),
                City: $("#city").val(),
                State: $("#state").val()
            });
        }

        $.blockUI({ message: '<h1>Loading...</h1>' });
        $.ajax({
            url: '@Url.Action("Register", "Auth")',
            type: 'POST',
            data: data,
            success: function (response) {
                console.log("response")
                console.log(response)
                $.unblockUI();
                if (response.success) {
                    var stripe = Stripe(response.PubKey);
                    stripe.redirectToCheckout({ sessionId: response.SessionId })
                        .then(function (result) {
                            if (result.error) {
                                alert(result.error.message);
                            }
                        });
                    //window.location.href = "/Auth/ConfirmEmailPage";
                } else {
                    alert("Error Message");
                    toastr.error(response.message);
                }
            },
            error: function (xhr, status, error) {
                $.unblockUI();
                toastr.error("Error in registering.");
            }
        });
    }

    function sendEmailOtp() {
        let email = $("#emailAddress").val().trim();
        let emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
        if (email !== "") {
            if (emailRegex.test(email)) {
                $.blockUI({ message: '<h1>Loading...</h1>' });
                $.ajax({
                    url: '@Url.Action("SendEmailOTP", "Auth")',
                    type: 'GET',
                    data: { email: email },
                    success: function (response) {
                        $.unblockUI();
                        if (response.success) {
                            toastr.success(response.message);
                            $('#otpEmail').show();
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        $.unblockUI();
                        toastr.error("Error in verifying email.");
                    }
                });
            } else {
                toastr.error("Invalid email format.");
            }
        } else {
            toastr.error("Email is Required.");
        }
    }

    $('#otpEmail').on('input', function () {
        var otpValue = $('#otpEmail').val();
        let email = $("#emailAddress").val().trim();
        if (otpValue.length >= 6) {
            $.blockUI({ message: '<h1>Loading...</h1>' });
            $("#otpEmail").prop('disabled', true);
            $.ajax({
                url: '@Url.Action("VerifyEmailOTP", "Auth")',
                type: 'POST',
                data: { email: email, code: otpValue },
                success: function (response) {
                    $.unblockUI();
                    if (response.success) {
                        toastr.success(response.message);
                        isEmailVerified = true
                        $("#emailAddress").attr("readOnly", true)
                        $('#otpEmail').hide();
                    } else {
                        toastr.error(response.message);
                        $("#otpEmail").prop('disabled', false);
                    }
                },
                error: function (xhr, status, error) {
                    $.unblockUI();
                    toastr.error("Error in verifying email.");
                }
            });
        }
    });

    function sendPhoneOtp() {
        let phone = $("#phoneNumber").val().trim();
        if (phone !== "") {
            $.blockUI({ message: '<h1>Loading...</h1>' });
            $.ajax({
                url: '@Url.Action("SendPhoneOTP", "Auth")',
                type: 'GET',
                data: { phoneNumber: phone },
                success: function (response) {
                    $.unblockUI();
                    if (response.success) {
                        toastr.success(response.message);
                        $('#otpPhone').show();
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    $.unblockUI();
                    toastr.error("Error in verifying phone.");
                }
            });
        } else {
            toastr.error("Phone Number is Required.");
        }
    }

    $('#otpPhone').on('input', function () {
        var otpValue = $("#otpPhone").val();
        let phone = $("#phoneNumber").val().trim();
        if (otpValue.length >= 6) {
            $.blockUI({ message: '<h1>Loading...</h1>' });
            $("#otpPhone").prop('disabled', true);
            $.ajax({
                url: '@Url.Action("VerifyPhoneOTP", "Auth")',
                type: 'POST',
                data: { phoneNumber: phone, code: otpValue },
                success: function (response) {
                    $.unblockUI();
                    if (response.success) {
                        toastr.success(response.message);
                        $("#phoneNumber").attr("readOnly", true)
                        $('#otpPhone').hide();

                    } else {
                        toastr.error(response.message);
                        $("#otpPhone").prop('disabled', false);
                    }
                },
                error: function (xhr, status, error) {
                    $.unblockUI();
                    toastr.error("Error in verifying phone.");
                }
            });
        }
    });

</script>


@*
<head>
    <!-- Include Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Include Bootstrap JavaScript and its dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body style="background-color:#f9f3e9">
    <div class="container py-5 mt-5">
        <div class="row justify-content-center">
            <div class="col-lg-8 col-md-10 col-sm-12">
                <div class="card shadow-lg">
                    <div class="card-header bg-primary text-white">
                        <h5 class="card-title mt-3">Register</h5>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(ViewBag.Error))
                        {
                            <div class="alert alert-danger" role="alert">
                                @ViewBag.Error
                            </div>
                        }
                        <form asp-action="Register">
                            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                            <div class="mb-3">
                                <label asp-for="UserName" class="form-label">Username</label>
                                <input asp-for="UserName" class="form-control" placeholder="Enter your username">
                            </div>

                            <div class="mb-3">
                                <label asp-for="Email" class="form-label">Email Address</label>
                                <input asp-for="Email" type="email" class="form-control" placeholder="Enter your email">
                            </div>

                            <div class="mb-3">
                                <label asp-for="Password" class="form-label">Password</label>
                                <input asp-for="Password" type="password" class="form-control" placeholder="Create a password">
                            </div>

                            <input type="hidden" asp-for="SubscriptionName" value="@subscriptionType">
                            <input type="hidden" asp-for="SubscriptionId" value="@subscriptionId">

                            <button type="submit" class="btn btn-primary">Register</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
 *@