@* @model PMS_PropertyHapa.Models.DTO.RegisterationRequestDTO *@
@{
    ViewData["Title"] = "Registration";
    Layout = "~/Views/Shared/_IdentityLayout.cshtml";
}
<style>

    :root {
        --light-grey: #F6F9FC;
        --dark-terminal-color: #0A2540;
        --accent-color: #635BFF;
        --radius: 3px;
    }

    /*body {
          padding: 20px;
          font-family: 'Raleway';
          display: flex;
          justify-content: center;
          font-size: 1.2em;
          color: var(--dark-terminal-color);
        }

        main {
          width: 480px;
        }
         */
    form > * {
        margin: 10px 0;
    }

    button {
        background-color: var(--accent-color);
    }

    button {
        background: var(--accent-color);
        border-radius: var(--radius);
        color: white;
        border: 0;
        padding: 12px 16px;
        margin-top: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        display: block;
    }

        button:hover {
            filter: contrast(115%);
        }

        button:active {
            transform: translateY(0px) scale(0.98);
            filter: brightness(0.9);
        }

        button:disabled {
            opacity: 0.5;
            cursor: none;
        }

    input, select {
        display: block;
        font-size: 1.1em;
        width: 100%;
        margin-bottom: 10px;
    }

    label {
        display: block;
    }

    a {
        color: var(--accent-color);
        font-weight: 900;
    }

    small {
        font-size: .6em;
    }

    fieldset, input, select {
        border: 1px solid #efefef;
    }

    #payment-form {
        border: #F6F9FC solid 1px;
        border-radius: var(--radius);
        padding: 20px;
        margin: 20px 0;
        box-shadow: 0 30px 50px -20px rgb(50 50 93 / 25%), 0 30px 60px -30px rgb(0 0 0 / 30%);
    }

    #messages {
        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New';
        display: none; /* hide initially, then show once the first message arrives */
        background-color: #0A253C;
        color: #00D924;
        padding: 20px;
        margin: 20px 0;
        border-radius: var(--radius);
        font-size: 0.7em;
        overflow: scroll;
    }

</style>


<script src="~/js/jscontroller/utils.js"></script>
<style>
    .input-group {
        position: relative;
    }

    .show-hide {
        position: absolute;
        right: 35px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<style>

    .switch-container {
        display: flex;
        align-items: center;
    }

    .switch-label {
        margin-left: 10px; /* Adjust as needed */
    }

</style>

<div class="col-auto p-0">
    <form class="f1" >
        <div class="f1-steps">
            <div class="f1-progress">
                <div class="f1-progress-line" data-now-value="16.66" data-number-of-steps="2"></div>
            </div>
            <div class="f1-step active">
                <div class="f1-step-icon"><i class="fa fa-user"></i></div>
                <p>User Information</p>
            </div>
            <div class="f1-step">
                <div class="f1-step-icon"><i class="fa fa-key"></i></div>
                <p>Plan Selection</p>
            </div>
        </div>
        <fieldset>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="firstName">First Name</label>
                    <input class="form-control" id="firstName" type="text" name="firstName" placeholder="First Name">
                </div>
                <div class="form-group col-md-6">
                    <label for="lastName">Last Name</label>
                    <input class="form-control" id="lastName" type="text" name="lastName" placeholder="Last Name">
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="emailAddress">Email Address</label>
                    <div class="input-group">
                        <input class="form-control" id="emailAddress" type="email" name="emailAddress" placeholder="Email Address">
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary verify-email mt-0" onclick="sendEmailOtp()" type="button">Verify</button>
                        </div>
                    </div>
                    <input class="form-control mt-2" id="otpEmail" type="number" required name="otpEmail" placeholder="Enter OTP" style="display: none;">
                </div>
                <div class="form-group col-md-6">
                    <label for="companyName">Company Name</label>
                    <input class="form-control" id="companyName" type="text" name="companyName" placeholder="Company Name">
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="phoneNumber">Phone Number</label>
                    <div class="input-group">
                        <input class="form-control" id="phoneNumber" type="tel" name="phoneNumber" placeholder="Phone Number">
                        <div class="input-group-append">
                            <button class="btn btn-outline-secondary verify-phone mt-0" onclick="sendPhoneOtp()" type="button">Verify</button>
                        </div>
                    </div>
                    <input class="form-control mt-2" id="otpPhone" type="number" name="otpPhone" placeholder="Enter OTP"  style="display: none;" >
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label class=" mb-1" for="countryCode">Code</label>
                    @Html.DropDownList("CountryCode", new List<SelectListItem>
                    {
                    new SelectListItem { Text ="Please Select Country Code", Value = "" },
                    new SelectListItem { Text ="Afghanistan (+93)", Value = "+93" },
                    new SelectListItem { Text ="Albania (+335)", Value = "+335" },
                    new SelectListItem { Text ="Algeria (+213)", Value = "+213" },
                    new SelectListItem { Text ="Andorra (+376)", Value = "+376" },
                    new SelectListItem { Text ="Angola (+244)", Value = "+244" },
                    new SelectListItem { Text ="Anguilla (+1264)", Value = "+1264" },
                    new SelectListItem { Text ="Antigua & Barbuda (+1268)", Value = "+1268" },
                    new SelectListItem { Text ="Argentina (+54)", Value = "+54" },
                    new SelectListItem { Text ="Armenia (+374)", Value = "+374" },
                    new SelectListItem { Text ="Aruba (+297)", Value = "+297" },
                    new SelectListItem { Text ="Ascension Island (+247)", Value = "+247" },
                    new SelectListItem { Text ="Australia (+61)", Value = "+61" },
                    new SelectListItem { Text ="Austria (+43)", Value = "+43" },
                    new SelectListItem { Text ="Azerbaijan (+994)", Value = "+994" },
                    new SelectListItem { Text ="Bahamas (+1242)", Value = "+1242" },
                    new SelectListItem { Text ="Bahrain (+973)", Value = "+973" },
                    new SelectListItem { Text ="Bangladesh (+880)", Value = "+880" },
                    new SelectListItem { Text ="Barbados (+1246)", Value = "+1246" },
                    new SelectListItem { Text ="Belarus (+375)", Value = "+375" },
                    new SelectListItem { Text ="Belgium (+32)", Value = "+32" },
                    new SelectListItem { Text ="Belize (+501)", Value = "+501" },
                    new SelectListItem { Text ="Benin (+229)", Value = "+229" },
                    new SelectListItem { Text ="Bermuda (+1441)", Value = "+1441" },
                    new SelectListItem { Text ="Bhutan (+975)", Value = "+975" },
                    new SelectListItem { Text ="Bolivia (+591)", Value = "+591" },
                    new SelectListItem { Text ="Bonaire, Saba and Sint Eustatius (+599)", Value = "+599" },
                    new SelectListItem { Text ="Bosnia Herzegovina (+387)", Value = "+387" },
                    new SelectListItem { Text ="Botswana (+267)", Value = "+267" },
                    new SelectListItem { Text ="Brazil (+55)", Value = "+55" },
                    new SelectListItem { Text ="British Indian Ocean Territory (+246)", Value = "+246" },
                    new SelectListItem { Text ="Brunei (+673)", Value = "+673" },
                    new SelectListItem { Text ="Bulgaria (+359)", Value = "+359" },
                    new SelectListItem { Text ="Burkina Faso (+226)", Value = "+226" },
                    new SelectListItem { Text ="Burundi (+257)", Value = "+257" },
                    new SelectListItem { Text ="Cambodia (+855)", Value = "+855" },
                    new SelectListItem { Text ="Cameroon (+237)", Value = "+237" },
                    new SelectListItem { Text ="Canada (+1)", Value = "+1" },
                    new SelectListItem { Text ="Cape Verde Islands (+238)", Value = "+238" },
                    new SelectListItem { Text ="Cayman Islands (+1345)", Value = "+1345" },
                    new SelectListItem { Text ="Central African Republic (+236)", Value = "+236" },
                    new SelectListItem { Text ="Chad (+235)", Value = "+235" },
                    new SelectListItem { Text ="Chile (+56)", Value = "+56" },
                    new SelectListItem { Text ="China (+86)", Value = "+86" },
                    new SelectListItem { Text ="Colombia (+57)", Value = "+57" },
                    new SelectListItem { Text ="Comoros (+269)", Value = "+269" },
                    new SelectListItem { Text ="Congo (+242)", Value = "+242" },
                    new SelectListItem { Text ="Congo, Democratic Republic of the (+243)", Value = "+243" },
                    new SelectListItem { Text ="Cook Islands (+682)", Value = "+682" },
                    new SelectListItem { Text ="Costa Rica (+506)", Value = "+506" },
                    new SelectListItem { Text ="Croatia (+385)", Value = "+385" },
                    new SelectListItem { Text ="Cuba (+53)", Value = "+53" },
                    new SelectListItem { Text ="Curaçao (+5999)", Value = "+5999" },
                    new SelectListItem { Text ="Cyprus (+357)", Value = "+357" },
                    new SelectListItem { Text ="Czech Republic (+420)", Value = "+420" },
                    new SelectListItem { Text ="Denmark (+45)", Value = "+45" },
                    new SelectListItem { Text ="Djibouti (+253)", Value = "+253" },
                    new SelectListItem { Text ="Dominica (+1767)", Value = "+1767" },
                    new SelectListItem { Text ="Dominican Republic (+1809)", Value = "+1809" },
                    new SelectListItem { Text ="East Timor (+670)", Value = "+670" },
                    new SelectListItem { Text ="Ecuador (+593)", Value = "+593" },
                    new SelectListItem { Text ="Egypt (+20)", Value = "+20" },
                    new SelectListItem { Text ="El Salvador (+503)", Value = "+503" },
                    new SelectListItem { Text ="Equatorial Guinea (+240)", Value = "+240" },
                    new SelectListItem { Text ="Eritrea (+291)", Value = "+291" },
                    new SelectListItem { Text ="Estonia (+372)", Value = "+372" },
                    new SelectListItem { Text ="Eswatini (+268)", Value = "+268" },
                    new SelectListItem { Text ="Ethiopia (+251)", Value = "+251" },
                    new SelectListItem { Text ="Falkland Islands (+500)", Value = "+500" },
                    new SelectListItem { Text ="Faroe Islands (+298)", Value = "+298" },
                    new SelectListItem { Text ="Fiji (+679)", Value = "+679" },
                    new SelectListItem { Text ="Finland (+358)", Value = "+358" },
                    new SelectListItem { Text ="France (+33)", Value = "+33" },
                    new SelectListItem { Text ="French Guiana (+594)", Value = "+594" },
                    new SelectListItem { Text ="French Polynesia (+689)", Value = "+689" },
                    new SelectListItem { Text ="Gabon (+241)", Value = "+241" },
                    new SelectListItem { Text ="Gambia (+220)", Value = "+220" },
                    new SelectListItem { Text ="Georgia (+995)", Value = "+995" },
                    new SelectListItem { Text ="Germany (+49)", Value = "+49" },
                    new SelectListItem { Text ="Ghana (+233)", Value = "+233" },
                    new SelectListItem { Text ="Gibraltar (+350)", Value = "+350" },
                    new SelectListItem { Text ="Greece (+30)", Value = "+30" },
                    new SelectListItem { Text ="Greenland (+299)", Value = "+299" },
                    new SelectListItem { Text ="Grenada (+1473)", Value = "+1473" },
                    new SelectListItem { Text ="Guadeloupe (+590)", Value = "+590" },
                    new SelectListItem { Text ="Guam (+1671)", Value = "+1671" },
                    new SelectListItem { Text ="Guatemala (+502)", Value = "+502" },
                    new SelectListItem { Text ="Guinea (+224)", Value = "+224" },
                    new SelectListItem { Text ="Guinea-Bissau (+245)", Value = "+245" },
                    new SelectListItem { Text ="Guyana (+592)", Value = "+592" },
                    new SelectListItem { Text ="Haiti (+509)", Value = "+509" },
                    new SelectListItem { Text ="Honduras (+504)", Value = "+504" },
                    new SelectListItem { Text ="Hong Kong (+852)", Value = "+852" },
                    new SelectListItem { Text ="Hungary (+36)", Value = "+36" },
                    new SelectListItem { Text ="Iceland (+354)", Value = "+354" },
                    new SelectListItem { Text ="India (+91)", Value = "+91" },
                    new SelectListItem { Text ="Indonesia (+62)", Value = "+62" },
                    new SelectListItem { Text ="Iran (+98)", Value = "+98" },
                    new SelectListItem { Text ="Iraq (+964)", Value = "+964" },
                    new SelectListItem { Text ="Ireland (+353)", Value = "+353" },
                    new SelectListItem { Text ="Israel (+972)", Value = "+972" },
                    new SelectListItem { Text ="Italy (+39)", Value = "+39" },
                    new SelectListItem { Text ="Ivory Coast (+225)", Value = "+225" },
                    new SelectListItem { Text ="amaica (+1876)", Value = "+1876" },
                    new SelectListItem { Text ="Japan (+81)", Value = "+81" },
                    new SelectListItem { Text ="Jordan (+962)", Value = "+962" },
                    new SelectListItem { Text ="Kazakhstan (+7)", Value = "+7" },
                    new SelectListItem { Text ="Kenya (+254)", Value = "+254" },
                    new SelectListItem { Text ="Kiribati (+686)", Value = "+686" },
                    new SelectListItem { Text ="Korea North (+850)", Value = "+850" },
                    new SelectListItem { Text ="Korea South (+82)", Value = "+82" },
                    new SelectListItem { Text ="Kosovo (+383)", Value = "+383" },
                    new SelectListItem { Text ="Kuwait (+965)", Value = "+965" },
                    new SelectListItem { Text ="Kyrgyzstan (+996)", Value = "+996" },
                    new SelectListItem { Text ="Laos (+856)", Value = "+856" },
                    new SelectListItem { Text ="Latvia (+371)", Value = "+371" },
                    new SelectListItem { Text ="Lebanon (+961)", Value = "+961" },
                    new SelectListItem { Text ="Lesotho (+266)", Value = "+266" },
                    new SelectListItem { Text ="Liberia (+231)", Value = "+231" },
                    new SelectListItem { Text ="Libya (+218)", Value = "+218" },
                    new SelectListItem { Text ="Liechtenstein (+423)", Value = "+423" },
                    new SelectListItem { Text ="Lithuania (+370)", Value = "+370" },
                    new SelectListItem { Text ="Luxembourg (+352)", Value = "+352" },
                    new SelectListItem { Text ="Macao (+853)", Value = "+853" },
                    new SelectListItem { Text ="Macedonia (+389)", Value = "+389" },
                    new SelectListItem { Text ="Madagascar (+261)", Value = "+261" },
                    new SelectListItem { Text ="Malawi (+265)", Value = "+265" },
                    new SelectListItem { Text ="Malaysia (+60)", Value = "+60" },
                    new SelectListItem { Text ="Maldives (+960)", Value = "+960" },
                    new SelectListItem { Text ="Mali (+223)", Value = "+223" },
                    new SelectListItem { Text ="Malta (+356)", Value = "+356" },
                    new SelectListItem { Text ="Marshall Islands (+692)", Value = "+692" },
                    new SelectListItem { Text ="Martinique (+596)", Value = "+596" },
                    new SelectListItem { Text ="Mauritania (+222)", Value = "+222" },
                    new SelectListItem { Text ="Mauritius (+230)", Value = "+230" },
                    new SelectListItem { Text ="Mayotte (+262)", Value = "+262" },
                    new SelectListItem { Text ="Mexico (+52)", Value = "+52" },
                    new SelectListItem { Text ="Micronesia (+691)", Value = "+691" },
                    new SelectListItem { Text ="Moldova (+373)", Value = "+373" },
                    new SelectListItem { Text ="Monaco (+377)", Value = "+377" },
                    new SelectListItem { Text ="Mongolia (+976)", Value = "+976" },
                    new SelectListItem { Text ="Montenegro (+382)", Value = "+382" },
                    new SelectListItem { Text ="Montserrat (+1664)", Value = "+1664" },
                    new SelectListItem { Text ="Morocco (+212)", Value = "+212" },
                    new SelectListItem { Text ="Mozambique (+258)", Value = "+258" },
                    new SelectListItem { Text ="Myanmar (+95)", Value = "+95" },
                    new SelectListItem { Text ="Namibia (+264)", Value = "+264" },
                    new SelectListItem { Text ="Nauru (+674)", Value = "+674" },
                    new SelectListItem { Text ="Nepal (+977)", Value = "+977" },
                    new SelectListItem { Text ="Netherlands (+31)", Value = "+31" },
                    new SelectListItem { Text ="New Caledonia (+687)", Value = "+687" },
                    new SelectListItem { Text ="New Zealand (+64)", Value = "+64" },
                    new SelectListItem { Text ="Nicaragua (+505)", Value = "+505" },
                    new SelectListItem { Text ="Niger (+227)", Value = "+227" },
                    new SelectListItem { Text ="Nigeria (+234)", Value = "+234" },
                    new SelectListItem { Text ="Niue (+683)", Value = "+683" },
                    new SelectListItem { Text ="Norfolk Islands (+672)", Value = "+672" },
                    new SelectListItem { Text ="Northern Mariana Islands (+1670)", Value = "+1670" },
                    new SelectListItem { Text ="Norway (+47)", Value = "+47" },
                    new SelectListItem { Text ="Oman (+968)", Value = "+968" },
                    new SelectListItem { Text ="Pakistan (+92)", Value = "+92" },
                    new SelectListItem { Text ="Palau (+680)", Value = "+680" },
                    new SelectListItem { Text ="Palestine (+970)", Value = "+970" },
                    new SelectListItem { Text ="Panama (+507)", Value = "+507" },
                    new SelectListItem { Text ="Papua New Guinea (+675)", Value = "+675" },
                    new SelectListItem { Text ="Paraguay (+595)", Value = "+595" },
                    new SelectListItem { Text ="Peru (+51)", Value = "+51" },
                    new SelectListItem { Text ="Philippines (+63)", Value = "+63" },
                    new SelectListItem { Text ="Poland (+48)", Value = "+48" },
                    new SelectListItem { Text ="Portugal (+351)", Value = "+351" },
                    new SelectListItem { Text ="Puerto Rico (+1787)", Value = "+1787" },
                    new SelectListItem { Text ="Qatar (+974)", Value = "+974" },
                    new SelectListItem { Text ="Réunion (+262)", Value = "+262" },
                    new SelectListItem { Text ="Romania (+40)", Value = "+40" },
                    new SelectListItem { Text ="Russia (+7)", Value = "+7" },
                    new SelectListItem { Text ="Rwanda (+250)", Value = "+250" },
                    new SelectListItem { Text ="Samoa (+685)", Value = "+685" },
                    new SelectListItem { Text ="San Marino (+378)", Value = "+378" },
                    new SelectListItem { Text ="São Tomé & Principe (+239)", Value = "+239" },
                    new SelectListItem { Text ="Saudi Arabia (+966)", Value = "+966" },
                    new SelectListItem { Text ="Senegal (+221)", Value = "+221" },
                    new SelectListItem { Text ="Serbia (+381)", Value = "+381" },
                    new SelectListItem { Text ="Seychelles (+248)", Value = "+248" },
                    new SelectListItem { Text ="Sierra Leone (+232)", Value = "+232" },
                    new SelectListItem { Text ="Singapore (+65)", Value = "+65" },
                    new SelectListItem { Text ="Slovakia (+421)", Value = "+421" },
                    new SelectListItem { Text ="Slovenia (+386)", Value = "+386" },
                    new SelectListItem { Text ="Solomon Islands (+677)", Value = "+677" },
                    new SelectListItem { Text ="Somalia (+252)", Value = "+252" },
                    new SelectListItem { Text ="South Africa (+27)", Value = "+27" },
                    new SelectListItem { Text ="South Sudan (+211)", Value = "+211" },
                    new SelectListItem { Text ="Spain (+34)", Value = "+34" },
                    new SelectListItem { Text ="Sri Lanka (+94)", Value = "+94" },
                    new SelectListItem { Text ="St. Helena (+290)", Value = "+290" },
                    new SelectListItem { Text ="St. Kitts and Nevis (+1869)", Value = "+1869" },
                    new SelectListItem { Text ="St. Lucia (+1758)", Value = "+1758" },
                    new SelectListItem { Text ="St. Pierre and Miquelon (+508)", Value = "+508" },
                    new SelectListItem { Text ="Sudan (+249)", Value = "+249" },
                    new SelectListItem { Text ="Suriname (+597)", Value = "+597" },
                    new SelectListItem { Text ="Sweden (+46)", Value = "+46" },
                    new SelectListItem { Text ="Switzerland (+41)", Value = "+41" },
                    new SelectListItem { Text ="Syria (+963)", Value = "+963" },
                    new SelectListItem { Text ="Taiwan (+886)", Value = "+886" },
                    new SelectListItem { Text ="Tajikistan (+992)", Value = "+992" },
                    new SelectListItem { Text ="Tanzania (+255)", Value = "+255" },
                    new SelectListItem { Text ="Thailand (+66)", Value = "+66" },
                    new SelectListItem { Text ="Togo (+228)", Value = "+228" },
                    new SelectListItem { Text ="Tokelau (+690)", Value = "+690" },
                    new SelectListItem { Text ="Tonga (+676)", Value = "+676" },
                    new SelectListItem { Text ="Trinidad & Tobago (+1868)", Value = "+1868" },
                    new SelectListItem { Text ="Tunisia (+216)", Value = "+216" },
                    new SelectListItem { Text ="Turkey (+90)", Value = "+90" },
                    new SelectListItem { Text ="Turkmenistan (+993)", Value = "+993" },
                    new SelectListItem { Text ="Turks & Caicos Islands (+1649)", Value = "+1649" },
                    new SelectListItem { Text ="Tuvalu (+688)", Value = "+688" },
                    new SelectListItem { Text ="Uganda (+256)", Value = "+256" },
                    new SelectListItem { Text ="Ukraine (+380)", Value = "+380" },
                    new SelectListItem { Text ="United Arab Emirates (+971)", Value = "+971" },
                    new SelectListItem { Text ="United Kingdom (+44)", Value = "+44" },
                    new SelectListItem { Text ="United States of America (+1)", Value = "+1" },
                    new SelectListItem { Text ="Uruguay (+598)", Value = "+598" },
                    new SelectListItem { Text ="Uzbekistan (+998)", Value = "+998" },
                    new SelectListItem { Text ="Vanuatu (+678)", Value = "+678" },
                    new SelectListItem { Text ="Vatican City (+39)", Value = "+39" },
                    new SelectListItem { Text ="Venezuela (+58)", Value = "+58" },
                    new SelectListItem { Text ="Vietnam (+84)", Value = "+84" },
                    new SelectListItem { Text ="Virgin Islands - British (+1284)", Value = "+1284" },
                    new SelectListItem { Text ="Virgin Islands - US (+1340)", Value = "+1340" },
                    new SelectListItem { Text ="Wallis & Futuna (+681)", Value = "+681" },
                    new SelectListItem { Text ="Western Sahara (+212)", Value = "+212" },
                    new SelectListItem { Text ="Yemen (+967)", Value = "+967" },
                    new SelectListItem { Text ="Zambia (+260)", Value = "+260" },
                    new SelectListItem { Text ="Zimbabwe (+263)", Value = "+263" }
                    }, new { @class = "form-control dropdownheight", @id = "countryCode" })
                </div>
                <div class="form-group col-md-6">
                    <label class=" mb-1">Country</label>
                    @Html.DropDownList("country", new List<SelectListItem>
                    {
                    new SelectListItem { Text = "Please Select Country", Value = "" },
                    new SelectListItem { Text = "Afghanistan", Value = "Afghanistan" },
                    new SelectListItem { Text = "Albania", Value = "Albania" },
                    new SelectListItem { Text = "Algeria", Value = "Algeria" },
                    new SelectListItem { Text = "American Samoa", Value = "American Samoa" },
                    new SelectListItem { Text = "Andorra", Value = "Andorra" },
                    new SelectListItem { Text = "Angola", Value = "Angola" },
                    new SelectListItem { Text = "Anguilla", Value = "Anguilla" },
                    new SelectListItem { Text = "Antarctica", Value = "Antarctica" },
                    new SelectListItem { Text = "Antigua and Barbuda", Value = "Antigua and Barbuda" },
                    new SelectListItem { Text = "Argentina", Value = "Argentina" },
                    new SelectListItem { Text = "Armenia", Value = "Armenia" },
                    new SelectListItem { Text = "Aruba", Value = "Aruba" },
                    new SelectListItem { Text = "Australia", Value = "Australia" },
                    new SelectListItem { Text = "Austria", Value = "Austria" },
                    new SelectListItem { Text = "Azerbaijan", Value = "Azerbaijan" },
                    new SelectListItem { Text = "Bahamas", Value = "Bahamas" },
                    new SelectListItem { Text = "Bahrain", Value = "Bahrain" },
                    new SelectListItem { Text = "Bangladesh", Value = "Bangladesh" },
                    new SelectListItem { Text = "Barbados", Value = "Barbados" },
                    new SelectListItem { Text = "Belarus", Value = "Belarus" },
                    new SelectListItem { Text = "Belgium", Value = "Belgium" },
                    new SelectListItem { Text = "Belize", Value = "Belize" },
                    new SelectListItem { Text = "Benin", Value = "Benin" },
                    new SelectListItem { Text = "Bermuda", Value = "Bermuda" },
                    new SelectListItem { Text = "Bhutan", Value = "Bhutan" },
                    new SelectListItem { Text = "Bolivia", Value = "Bolivia" },
                    new SelectListItem { Text = "Bosnia and Herzegovina", Value = "Bosnia and Herzegovina" },
                    new SelectListItem { Text = "Botswana", Value = "Botswana" },
                    new SelectListItem { Text = "Bouvet Island", Value = "Bouvet Island" },
                    new SelectListItem { Text = "Brazil", Value = "Brazil" },
                    new SelectListItem { Text = "British Indian Ocean Territory", Value = "British Indian Ocean Territory" },
                    new SelectListItem { Text = "Brunei Darussalam", Value = "Brunei Darussalam" },
                    new SelectListItem { Text = "Bulgaria", Value = "Bulgaria" },
                    new SelectListItem { Text = "Burkina Faso", Value = "Burkina Faso" },
                    new SelectListItem { Text = "Burundi", Value = "Burundi" },
                    new SelectListItem { Text = "Cambodia", Value = "Cambodia" },
                    new SelectListItem { Text = "Cameroon", Value = "Cameroon" },
                    new SelectListItem { Text = "Canada", Value = "Canada" },
                    new SelectListItem { Text = "Cape Verde", Value = "Cape Verde" },
                    new SelectListItem { Text = "Cayman Islands", Value = "Cayman Islands" },
                    new SelectListItem { Text = "Central African Republic", Value = "Central African Republic" },
                    new SelectListItem { Text = "Chad", Value = "Chad" },
                    new SelectListItem { Text = "Chile", Value = "Chile" },
                    new SelectListItem { Text = "China", Value = "China" },
                    new SelectListItem { Text = "Christmas Island", Value = "Christmas Island" },
                    new SelectListItem { Text = "Cocos (Keeling) Islands", Value = "Cocos (Keeling) Islands" },
                    new SelectListItem { Text = "Colombia", Value = "Colombia" },
                    new SelectListItem { Text = "Comoros", Value = "Comoros" },
                    new SelectListItem { Text = "Congo", Value = "Congo" },
                    new SelectListItem { Text = "Congo, the Democratic Republic of the", Value = "Congo, the Democratic Republic of the" },
                    new SelectListItem { Text = "Cook Islands", Value = "Cook Islands" },
                    new SelectListItem { Text = "Costa Rica", Value = "Costa Rica" },
                    new SelectListItem { Text = "Cote D'Ivoire", Value = "Cote D'Ivoire" },
                    new SelectListItem { Text = "Croatia", Value = "Croatia" },
                    new SelectListItem { Text = "Cuba", Value = "Cuba" },
                    new SelectListItem { Text = "Cyprus", Value = "Cyprus" },
                    new SelectListItem { Text = "Czech Republic", Value = "Czech Republic" },
                    new SelectListItem { Text = "Denmark", Value = "Denmark" },
                    new SelectListItem { Text = "Djibouti", Value = "Djibouti" },
                    new SelectListItem { Text = "Dominica", Value = "Dominica" },
                    new SelectListItem { Text = "Dominican Republic", Value = "Dominican Republic" },
                    new SelectListItem { Text = "Ecuador", Value = "Ecuador" },
                    new SelectListItem { Text = "Egypt", Value = "Egypt" },
                    new SelectListItem { Text = "El Salvador", Value = "El Salvador" },
                    new SelectListItem { Text = "Equatorial Guinea", Value = "Equatorial Guinea" },
                    new SelectListItem { Text = "Eritrea", Value = "Eritrea" },
                    new SelectListItem { Text = "España", Value = "España" },
                    new SelectListItem { Text = "Estonia", Value = "Estonia" },
                    new SelectListItem { Text = "Ethiopia", Value = "Ethiopia" },
                    new SelectListItem { Text = "Falkland Islands (Malvinas)", Value = "Falkland Islands (Malvinas)" },
                    new SelectListItem { Text = "Faroe Islands", Value = "Faroe Islands" },
                    new SelectListItem { Text = "Fiji", Value = "Fiji" },
                    new SelectListItem { Text = "Finland", Value = "Finland" },
                    new SelectListItem { Text = "France", Value = "France" },
                    new SelectListItem { Text = "French Guiana", Value = "French Guiana" },
                    new SelectListItem { Text = "French Polynesia", Value = "French Polynesia" },
                    new SelectListItem { Text = "French Southern Territories", Value = "French Southern Territories" },
                    new SelectListItem { Text = "Gabon", Value = "Gabon" },
                    new SelectListItem { Text = "Gambia", Value = "Gambia" },
                    new SelectListItem { Text = "Georgia", Value = "Georgia" },
                    new SelectListItem { Text = "Germany", Value = "Germany" },
                    new SelectListItem { Text = "Ghana", Value = "Ghana" },
                    new SelectListItem { Text = "Gibraltar", Value = "Gibraltar" },
                    new SelectListItem { Text = "Greece", Value = "Greece" },
                    new SelectListItem { Text = "Greenland", Value = "Greenland" },
                    new SelectListItem { Text = "Grenada", Value = "Grenada" },
                    new SelectListItem { Text = "Guadeloupe", Value = "Guadeloupe" },
                    new SelectListItem { Text = "Guam", Value = "Guam" },
                    new SelectListItem { Text = "Guatemala", Value = "Guatemala" },
                    new SelectListItem { Text = "Gerona", Value = "Gerona" },
                    new SelectListItem { Text = "Guinea", Value = "Guinea" },
                    new SelectListItem { Text = "Guinea-Bissau", Value = "Guinea-Bissau" },
                    new SelectListItem { Text = "Guyana", Value = "Guyana" },
                    new SelectListItem { Text = "Haiti", Value = "Haiti" },
                    new SelectListItem { Text = "Heard Island and Mcdonald Islands", Value = "Heard Island and Mcdonald Islands" },
                    new SelectListItem { Text = "Holy See (Vatican City State)", Value = "Holy See (Vatican City State)" },
                    new SelectListItem { Text = "Honduras", Value = "Honduras" },
                    new SelectListItem { Text = "Hong Kong", Value = "Hong Kong" },
                    new SelectListItem { Text = "Hungary", Value = "Hungary" },
                    new SelectListItem { Text = "Iceland", Value = "Iceland" },
                    new SelectListItem { Text = "India", Value = "India" },
                    new SelectListItem { Text = "Indonesia", Value = "Indonesia" },
                    new SelectListItem { Text = "Iran, Islamic Republic of", Value = "Iran, Islamic Republic of" },
                    new SelectListItem { Text = "Iraq", Value = "Iraq" },
                    new SelectListItem { Text = "Ireland", Value = "Ireland" },
                    new SelectListItem { Text = "Israel", Value = "Israel" },
                    new SelectListItem { Text = "Italy", Value = "Italy" },
                    new SelectListItem { Text = "Jamaica", Value = "Jamaica" },
                    new SelectListItem { Text = "Japan", Value = "Japan" },
                    new SelectListItem { Text = "Jordan", Value = "Jordan" },
                    new SelectListItem { Text = "Kazakhstan", Value = "Kazakhstan" },
                    new SelectListItem { Text = "Kenya", Value = "Kenya" },
                    new SelectListItem { Text = "Kiribati", Value = "Kiribati" },
                    new SelectListItem { Text = "Korea, Democratic People's Republic of", Value = "Korea, Democratic People's Republic of" },
                    new SelectListItem { Text = "Korea, Republic of", Value = "Korea, Republic of" },
                    new SelectListItem { Text = "Kuwait", Value = "Kuwait" },
                    new SelectListItem { Text = "Kyrgyzstan", Value = "Kyrgyzstan" },
                    new SelectListItem { Text = "Lao People's Democratic Republic", Value = "Lao People's Democratic Republic" },
                    new SelectListItem { Text = "Latvia", Value = "Latvia" },
                    new SelectListItem { Text = "Lebanon", Value = "Lebanon" },
                    new SelectListItem { Text = "Lesotho", Value = "Lesotho" },
                    new SelectListItem { Text = "Liberia", Value = "Liberia" },
                    new SelectListItem { Text = "Libyan Arab Jamahiriya", Value = "Libyan Arab Jamahiriya" },
                    new SelectListItem { Text = "Liechtenstein", Value = "Liechtenstein" },
                    new SelectListItem { Text = "Lithuania", Value = "Lithuania" },
                    new SelectListItem { Text = "Luxembourg", Value = "Luxembourg" },
                    new SelectListItem { Text = "Macao", Value = "Macao" },
                    new SelectListItem { Text = "Macedonia, the Former Yugoslav Republic of", Value = "Macedonia, the Former Yugoslav Republic of" },
                    new SelectListItem { Text = "Madagascar", Value = "Madagascar" },
                    new SelectListItem { Text = "Malawi", Value = "Malawi" },
                    new SelectListItem { Text = "Malaysia", Value = "Malaysia" },
                    new SelectListItem { Text = "Maldives", Value = "Maldives" },
                    new SelectListItem { Text = "Mali", Value = "Mali" },
                    new SelectListItem { Text = "Malta", Value = "Malta" },
                    new SelectListItem { Text = "Marshall Islands", Value = "Marshall Islands" },
                    new SelectListItem { Text = "Martinique", Value = "Martinique" },
                    new SelectListItem { Text = "Mauritania", Value = "Mauritania" },
                    new SelectListItem { Text = "Mauritius", Value = "Mauritius" },
                    new SelectListItem { Text = "Mayotte", Value = "Mayotte" },
                    new SelectListItem { Text = "Mexico", Value = "Mexico" },
                    new SelectListItem { Text = "Micronesia, Federated States of", Value = "Micronesia, Federated States of" },
                    new SelectListItem { Text = "Moldova, Republic of", Value = "Moldova, Republic of" },
                    new SelectListItem { Text = "Monaco", Value = "Monaco" },
                    new SelectListItem { Text = "Mongolia", Value = "Mongolia" },
                    new SelectListItem { Text = "Montenegro", Value = "Montenegro" },
                    new SelectListItem { Text = "Montserrat", Value = "Montserrat" },
                    new SelectListItem { Text = "Morocco", Value = "Morocco" },
                    new SelectListItem { Text = "Mozambique", Value = "Mozambique" },
                    new SelectListItem { Text = "Myanmar", Value = "Myanmar" },
                    new SelectListItem { Text = "Namibia", Value = "Namibia" },
                    new SelectListItem { Text = "Nauru", Value = "Nauru" },
                    new SelectListItem { Text = "Nepal", Value = "Nepal" },
                    new SelectListItem { Text = "Netherlands", Value = "Netherlands" },
                    new SelectListItem { Text = "Netherlands Antilles", Value = "Netherlands Antilles" },
                    new SelectListItem { Text = "New Caledonia", Value = "New Caledonia" },
                    new SelectListItem { Text = "New Zealand", Value = "New Zealand" },
                    new SelectListItem { Text = "Nicaragua", Value = "Nicaragua" },
                    new SelectListItem { Text = "Niger", Value = "Niger" },
                    new SelectListItem { Text = "Nigeria", Value = "Nigeria" },
                    new SelectListItem { Text = "Niue", Value = "Niue" },
                    new SelectListItem { Text = "Norfolk Island", Value = "Norfolk Island" },
                    new SelectListItem { Text = "Northern Mariana Islands", Value = "Northern Mariana Islands" },
                    new SelectListItem { Text = "Norway", Value = "Norway" },
                    new SelectListItem { Text = "Oman", Value = "Oman" },
                    new SelectListItem { Text = "Pakistan", Value = "Pakistan" },
                    new SelectListItem { Text = "Palau", Value = "Palau" },
                    new SelectListItem { Text = "Palestinian Territory, Occupied", Value = "Palestinian Territory, Occupied" },
                    new SelectListItem { Text = "Panama", Value = "Panama" },
                    new SelectListItem { Text = "Papua New Guinea", Value = "Papua New Guinea" },
                    new SelectListItem { Text = "Paraguay", Value = "Paraguay" },
                    new SelectListItem { Text = "Peru", Value = "Peru" },
                    new SelectListItem { Text = "Philippines", Value = "Philippines" },
                    new SelectListItem { Text = "Pitcairn", Value = "Pitcairn" },
                    new SelectListItem { Text = "Poland", Value = "Poland" },
                    new SelectListItem { Text = "Portugal", Value = "Portugal" },
                    new SelectListItem { Text = "Puerto Rico", Value = "Puerto Rico" },
                    new SelectListItem { Text = "Qatar", Value = "Qatar" },
                    new SelectListItem { Text = "Reunion", Value = "Reunion" },
                    new SelectListItem { Text = "Romania", Value = "Romania" },
                    new SelectListItem { Text = "Russian Federation", Value = "Russian Federation" },
                    new SelectListItem { Text = "Rwanda", Value = "Rwanda" },
                    new SelectListItem { Text = "Saint Helena", Value = "Saint Helena" },
                    new SelectListItem { Text = "Saint Kitts and Nevis", Value = "Saint Kitts and Nevis" },
                    new SelectListItem { Text = "Saint Lucia", Value = "Saint Lucia" },
                    new SelectListItem { Text = "Saint Pierre and Miquelon", Value = "Saint Pierre and Miquelon" },
                    new SelectListItem { Text = "Saint Vincent and the Grenadines", Value = "Saint Vincent and the Grenadines" },
                    new SelectListItem { Text = "Samoa", Value = "Samoa" },
                    new SelectListItem { Text = "San Marino", Value = "San Marino" },
                    new SelectListItem { Text = "Sao Tome and Principe", Value = "Sao Tome and Principe" },
                    new SelectListItem { Text = "Saudi Arabia", Value = "Saudi Arabia" },
                    new SelectListItem { Text = "Senegal", Value = "Senegal" },
                    new SelectListItem { Text = "Serbia", Value = "Serbia" },
                    new SelectListItem { Text = "Seychelles", Value = "Seychelles" },
                    new SelectListItem { Text = "Sierra Leone", Value = "Sierra Leone" },
                    new SelectListItem { Text = "Singapore", Value = "Singapore" },
                    new SelectListItem { Text = "Slovakia", Value = "Slovakia" },
                    new SelectListItem { Text = "Slovenia", Value = "Slovenia" },
                    new SelectListItem { Text = "Solomon Islands", Value = "Solomon Islands" },
                    new SelectListItem { Text = "Somalia", Value = "Somalia" },
                    new SelectListItem { Text = "South Africa", Value = "South Africa" },
                    new SelectListItem { Text = "South Georgia and the South Sandwich Islands", Value = "South Georgia and the South Sandwich Islands" },
                    new SelectListItem { Text = "Sri Lanka", Value = "Sri Lanka" },
                    new SelectListItem { Text = "Sudan", Value = "Sudan" },
                    new SelectListItem { Text = "Suriname", Value = "Suriname" },
                    new SelectListItem { Text = "Svalbard and Jan Mayen", Value = "Svalbard and Jan Mayen" },
                    new SelectListItem { Text = "Swaziland", Value = "Swaziland" },
                    new SelectListItem { Text = "Sweden", Value = "Sweden" },
                    new SelectListItem { Text = "Switzerland", Value = "Switzerland" },
                    new SelectListItem { Text = "Syrian Arab Republic", Value = "Syrian Arab Republic" },
                    new SelectListItem { Text = "Taiwan, Province of China", Value = "Taiwan, Province of China" },
                    new SelectListItem { Text = "Tajikistan", Value = "Tajikistan" },
                    new SelectListItem { Text = "Tanzania, United Republic of", Value = "Tanzania, United Republic of" },
                    new SelectListItem { Text = "Thailand", Value = "Thailand" },
                    new SelectListItem { Text = "Timor-Leste", Value = "Timor-Leste" },
                    new SelectListItem { Text = "Togo", Value = "Togo" },
                    new SelectListItem { Text = "Tokelau", Value = "Tokelau" },
                    new SelectListItem { Text = "Tonga", Value = "Tonga" },
                    new SelectListItem { Text = "Trinidad and Tobago", Value = "Trinidad and Tobago" },
                    new SelectListItem { Text = "Tunisia", Value = "Tunisia" },
                    new SelectListItem { Text = "Turkey", Value = "Turkey" },
                    new SelectListItem { Text = "Turkmenistan", Value = "Turkmenistan" },
                    new SelectListItem { Text = "Turks and Caicos Islands", Value = "Turks and Caicos Islands" },
                    new SelectListItem { Text = "Tuvalu", Value = "Tuvalu" },
                    new SelectListItem { Text = "Uganda", Value = "Uganda" },
                    new SelectListItem { Text = "Ukraine", Value = "Ukraine" },
                    new SelectListItem { Text = "United Arab Emirates", Value = "United Arab Emirates" },
                    new SelectListItem { Text = "United Kingdom", Value = "United Kingdom" },
                    new SelectListItem { Text = "United States", Value = "United States" },
                    new SelectListItem { Text = "United States Minor Outlying Islands", Value = "United States Minor Outlying Islands" },
                    new SelectListItem { Text = "Uruguay", Value = "Uruguay" },
                    new SelectListItem { Text = "Uzbekistan", Value = "Uzbekistan" },
                    new SelectListItem { Text = "Vanuatu", Value = "Vanuatu" },
                    new SelectListItem { Text = "Venezuela", Value = "Venezuela" },
                    new SelectListItem { Text = "Viet Nam", Value = "Viet Nam" },
                    new SelectListItem { Text = "Virgin Islands, British", Value = "Virgin Islands, British" },
                    new SelectListItem { Text = "Virgin Islands, U.S.", Value = "Virgin Islands, U.S." },
                    new SelectListItem { Text = "Wallis and Futuna", Value = "Wallis and Futuna" },
                    new SelectListItem { Text = "Western Sahara", Value = "Western Sahara" },
                    new SelectListItem { Text = "Yemen", Value = "Yemen" },
                    new SelectListItem { Text = "Zambia", Value = "Zambia" },
                    new SelectListItem { Text = "Zimbabwe", Value = "Zimbabwe" }
                    }, new { @class = "form-control dropdownheight", @id = "country" })
                    
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="propertyType">Property Type</label>
                    <select class="form-control select2" id="propertyType" name="propertyType">
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <label for="units">Number of Units</label>
                    <input class="form-control" id="units" type="number" name="units" placeholder="Number of Units">
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="leadGeneration">SEO Lead Generation</label>
                    <select class="form-control" id="leadGeneration" name="leadGeneration">
                        <option value="">Select</option>
                        <option value="Content Marketing">Content Marketing</option>
                        <option value="Search Engine Optimization (SEO)">Search Engine Optimization (SEO)</option>
                        <option value="Social Media Marketing">Social Media Marketing</option>
                        <option value="Email Marketing">Email Marketing</option>
                        <option value="Paid Advertising">Paid Advertising</option>
                        <option value="Lead Magnets">Lead Magnets</option>
                        <option value="Webinars and Events">Webinars and Events</option>
                        <option value="Referral Programs">Referral Programs</option>
                        <option value="Networking">Networking</option>
                        <option value="Content Syndication">Content Syndication</option>
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <label for="currency" class="form-label">Currency</label>
                    <select class="form-control" id="currency">
                        <option value="" selected disabled hidden>Select Currency</option>
                        <option value="USD">USD - United States Dollar ($)</option>
                        <option value="EUR">EUR - Euro (€)</option>
                        <option value="GBP">GBP - British Pound (£)</option>
                        <option value="JPY">JPY - Japanese Yen (¥)</option>
                        <option value="INR">INR - Indian Rupee (₹)</option>
                    </select>
                </div>
                
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="password">Password</label>
                    <input class="form-control" id="password" type="password" name="password" placeholder="Password">
                </div>
                <div class="form-group col-md-6">
                    <label for="confirmPassword">Confirm Password</label>
                    <input class="form-control" id="confirmPassword" type="password" name="confirmPassword" placeholder="Confirm Password">
                </div>
            </div>
            <div class="f1-buttons">
                <button class="btn btn-primary btn-next" type="button">Next</button>
            </div>
        </fieldset>
        <fieldset>
            <div class="media">
                <label class="col-form-label">Number of Units</label>
                <input class="form-control" id="unitsFinal" value="1" type="number" name="unitsFinal" placeholder="Number of Units">
                <div class="media-body text-center">
                    <div class="switch-container">
                        <span class="switch-label">Monthly</span>
                        <label class="switch">
                            <input type="checkbox" id="planSelection"><span class="switch-state"></span>
                        </label>
                        <span class="switch-label">Yearly</span>
                    </div>
                </div>
            </div>
            <div class="container-fluid">
                <div class="row justify-content-center" id="monthly-container">
                    <!-- Monthly Subscription blocks will be dynamically inserted here -->
                </div>
                <div class="row justify-content-center d-none" id="yearly-container">
                    <!-- Yearly Subscription blocks will be dynamically inserted here -->
                </div>
            </div>
@*             <div class="bank-account-form d-none">
                <div class="row">
                    <div class="form-group col-md-6">
                        <label for="cardholderName">Cardholder Name</label>
                        <input type="text" class="form-control" id="cardholderName" placeholder="Cardholder Name" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="cardNumber">Card Number</label>
                        <input type="text" class="form-control" id="cardNumber" placeholder="Card Number" required>
                    </div>

                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label for="expiryDate">Expiration Date</label>
                        <input type="date" class="form-control" id="expiryDate" placeholder="MM/YYYY" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="cvv">CVV</label>
                        <input type="text" class="form-control" id="cvv" placeholder="CVV" required>
                    </div>
                </div>
                <div class="form-group mb-2">
                    <label for="streetAddress">Billing Address</label>
                    <input type="text" class="form-control" id="streetAddress" placeholder="Street Address" required>
                </div>
                <div class="row mb-2">
                    <div class="form-group col-md-6">

                        <input type="text" class="form-control" id="city" placeholder="City" required>
                    </div>
                    <div class="form-group col-md-6">

                        <input type="text" class="form-control" id="state" placeholder="State" required>
                    </div>
                </div>
            </div> *@
            <div class="f1-buttons">
                <button class="btn btn-primary btn-previous" type="button">Previous</button>
                <button class="btn btn-primary btn-submit d-none btn-register" onclick="registerUser()" type="button">Register</button>
                <input type="hidden" value="" id="subscriptionId" />
                <input type="hidden" value="" id="subscriptionName" />
                <input type="hidden" value="" id="subscriptionPrice" />
            </div>
        </fieldset>
    </form>
</div>


<!-- Modal HTML -->
<div class="modal fade" id="stripeModal" tabindex="-1" aria-labelledby="stripeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="stripeModalLabel">Checkout</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="payment-form">
                <p class="d-none" id="product-Id"></p>
                <label for="name">Name</label>
                <input id="name" placeholder="Jenny Rosen" value="Jenny Rosen" required />

                <label for="card-element">Card</label>
                <div id="card-element"></div> <!-- Stripe Element will be mounted here -->
                <div id="card-errors" role="alert"></div> <!-- Display errors -->

                <div id="product-details">
                    <h6 id="product-title"></h6>
                    <p id="product-description"></p>
                    <div id="price-section">
                        <img id="price-image" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRG_TUukNvS-0E486weXLkJDpTubsAcdHdmKw&usqp=CAU" alt="Price Image" />
                        <p class="d-none" id="product-price"></p>
                        <p id="product-priceText"></p>
                    </div>
                </div>

                <button id="submit">Pay</button>
            </form>

            <div id="messages" role="alert" style="display: none;"></div>
        </div>
    </div>
</div>



<script src="https://js.stripe.com/v3/"></script>

<script>

    var isNotFree = false;
    var isEmailVerified = false;

    document.addEventListener('DOMContentLoaded', async () => {
        const stripe = Stripe('pk_test_51PATV6AezidaMUD1niwSxJ42oxgtI2vZLXEQo8lEMybnjmzaLF3JRV099zwzJ6HWb4cWVzqlvJSaLP7IiMn8YuXM00cA7HPhEH');

        const elements = stripe.elements();
        const cardElement = document.getElementById('card-element');
        const card = elements.create('card');

        if (cardElement) {
            card.mount(cardElement); // Mount the Card Element
        } else {
            console.error('Card Element container not found.');
        }

        let submitted = false;

        // $('#payment-form').on('submit', async function (event) {
        //     event.preventDefault();

        //     if (submitted) return;
        //     submitted = true;
        //     $(this).find('button').prop('disabled', true);

        //     var email = $("#emailAddress").val();
        //     var otpEmail = $("#otpEmail").val();
        //     var password = $("#password").val();
        //     var confirmPassword = $("#confirmPassword").val();

        //     if (!email || isEmailVerified == false) {
        //         toastr.error("Please make email verified.");
        //         return;
        //     }

        //     if (password !== confirmPassword) {
        //         toastr.error("Password and Confirm Password do not match.");
        //         return;
        //     }

        //     try {
       

        //             // if (isNotFree) {
        //             //     var cardholderName = $("#cardholderName").val();
        //             //     var cardNumber = $("#cardNumber").val();
        //             //     var expiryDate = $("#expiryDate").val();
        //             //     var cvv = $("#cvv").val();
        //             //     var streetAddress = $("#streetAddress").val();
        //             //     var city = $("#city").val();
        //             //     var state = $("#state").val();
        //             //     var isvalid = true;
        //             //     if (!cardholderName) {
        //             //         toastr.error("Cardholder Name is required.");
        //             //         isvalid = false;
        //             //     }
        //             //     if (!cardNumber) {
        //             //         toastr.error("Card Number is required.");
        //             //         isvalid = false;
        //             //     }
        //             //     if (!expiryDate) {
        //             //         toastr.error("Expiration Date is required.");
        //             //         isvalid = false;
        //             //     }
        //             //     if (!cvv) {
        //             //         toastr.error("CVV is required.");
        //             //         isvalid = false;
        //             //     }
        //             //     if (!streetAddress) {
        //             //         toastr.error("Street Address is required.");
        //             //         isvalid = false;
        //             //     }
        //             //     if (!city) {
        //             //         toastr.error("City is required.");
        //             //         isvalid = false;
        //             //     }
        //             //     if (!state) {
        //             //         toastr.error("State is required.");
        //             //         isvalid = false;
        //             //     }
        //             //     if (!isvalid) {
        //             //         return;
        //             //     }
        //             // }

        //             var data = {
        //                 UserName: $("#firstName").val(),
        //                 FirstName: $("#firstName").val(),
        //                 LastName: $("#lastName").val(),
        //                 Password: $("#password").val(),
        //                 Email: $("#emailAddress").val(),
        //                 UserName: $("#emailAddress").val(),
        //                 PhoneNumber: $("#phoneNumber").val(),
        //                 CompanyName: $("#companyName").val(),
        //                 //CountryCode: $("#countryCode").val(),
        //                 Country: $("#country").val(),
        //                 PropertyTypeId: $("#propertyType").val(),
        //                 Units: $("#unitsFinal").val(),
        //                 LeadGenration: $("#leadGeneration").val(),
        //                 Currency: $("#currency").val(),
        //                 SubscriptionName: $("#subscriptionName").val(),
        //                 SubscriptionId: $("#subscriptionId").val(),
        //                 Price: $("#subscriptionPrice").val(),
        //                 IsYearly: $("#planSelection").is(":checked"),
        //                 IsTrial: $("#subscriptionName").val() == "Free" ? true : false
        //             };

        //             // if (isNotFree) {
        //             //     $.extend(data, {
        //             //         CardholderName: $("#cardholderName").val(),
        //             //         CardNumber: $("#cardNumber").val(),
        //             //         ExpirationDate: $("#expiryDate").val(),
        //             //         CVV: $("#cvv").val(),
        //             //         StreetAdress: $("#streetAddress").val(),
        //             //         City: $("#city").val(),
        //             //         State: $("#state").val()
        //             //     });
        //             // }

        //            // $.blockui({ message: '<h1>loading...</h1>' });
        //             // $.ajax({
        //             //    
        //             //     type: 'post',
        //             //     data: data,
        //             //     success: function (response) {
        //             //         console.log("response")
        //             //         console.log(response)
        //             //         $.unblockui();
        //             //         if (response.success) {
        //             //             var stripe = stripe(response.pubkey);
        //             //             stripe.redirecttocheckout({ sessionid: response.sessionid })
        //             //                 .then(function (result) {
        //             //                     if (result.error) {
        //             //                         alert(result.error.message);
        //             //                     }
        //             //                 });
        //             //             //window.location.href = "/auth/confirmemailpage";
        //             //         } else {
        //             //             alert("error message");
        //             //             toastr.error(response.message);
        //             //         }
        //             //     },
        //             //     error: function (xhr, status, error) {
        //             //         $.unblockui();
        //             //         toastr.error("error in registering.");
        //             //     }
        //             // });




        //         // const response = await fetch('/Auth/Register', {
        //         //     method: 'POST',
        //         //     data: data,
        //         // });
        //         // const checkoutOrder = await response.json();

        //         // const { error, setupIntent } = await stripe.confirmCardSetup(
        //         //     checkoutOrder.ClientSecret,
        //         //     {
        //         //         payment_method: {
        //         //             card: card,
        //         //             billing_details: {
        //         //                 name: nameInput,
        //         //             },
        //         //         },
        //         //     }
        //         // );

        //         async function registerAndCheckout(data) {
        //             try {
        //                 const params = new URLSearchParams();
        //                 for (const key in data) {
        //                     if (data.hasOwnProperty(key)) {
        //                         params.append(key, data[key]);
        //                     }
        //                 }

        //                 $.ajax({
                        
        //                     type: 'post',
        //                     data: data,
        //                     success: function (response) {
        //                         console.log("response")
        //                         console.log(response)
        //                         $.unblockui();
        //                         if (response.success) {
        //                             if (!response.ok) {
        //                                 throw new Error('Error in registering.');
        //                             }

        //                             const checkoutOrder = await response.json();

        //                             if (checkoutOrder.success) {
        //                                 var stripe = Stripe(checkoutOrder.PubKey);
        //                                 stripe.redirectToCheckout({ sessionId: checkoutOrder.SessionId })
        //                                     .then(function (result) {
        //                                         if (result.error) {
        //                                             alert(result.error.message);
        //                                         }
        //                                     });
        //                             } else {
        //                                 alert("Error Message");
        //                                 toastr.error(checkoutOrder.message);
        //                             }
        //                             //window.location.href = "/auth/confirmemailpage";
        //                         } else {
        //                             alert("error message");
        //                             toastr.error(response.message);
        //                         }
        //                     },
        //                     error: function (xhr, status, error) {
        //                         $.unblockui();
        //                         toastr.error("error in registering.");
        //                     }
        //                 });

        //                 // const response = await fetch('/Auth/Register', {
        //                 //     method: 'POST',
        //                 //     headers: {
        //                 //         'Content-Type': 'application/x-www-form-urlencoded',
        //                 //     },
        //                 //     body: params.toString(),
        //                 // });

                       
        //             } catch (error) {
        //                 toastr.error(error.message || "Error in registering.");
        //             } finally {
        //                 $.unblockUI();
        //             }
        //         }

                
        //         //registerAndCheckout(data);


        //         if (error) {
        //             console.error(error.message);
        //         } else {
        //             console.log('Setup successful! Creating subscription...');

        //             const subscriptionResponse = await fetch('/Auth/CreateSubscription', {
        //                 method: 'POST',
        //                 headers: {
        //                     'Content-Type': 'application/json',
        //                 },
        //                 body: JSON.stringify({
        //                     customerId: checkoutOrder.CustomerId,
        //                     priceId: checkoutOrder.PriceId,
        //                     paymentMethodId: setupIntent.payment_method,
        //                 }),
        //             });

        //             const subscriptionResult = await subscriptionResponse.json();
        //             if (subscriptionResult.error) {
        //                 console.error('Subscription creation failed:', subscriptionResult.error);
        //             } else {
        //                 console.log('Subscription created successfully!');
        //             }
        //         }
        //     } catch (error) {
        //         console.error('Backend Error:', error);
        //         alert('An error occurred while processing your subscription.');
        //     } finally {
        //         $('#submit').prop('disabled', false);
        //         submitted = false;
        //     }
        // });

        $('#payment-form').on('submit', async function (event) {
            event.preventDefault();

            if (submitted) return;
            submitted = true;
            $(this).find('button').prop('disabled', true);

            var email = $("#emailAddress").val();
            var otpEmail = $("#otpEmail").val();
            var password = $("#password").val();
            var confirmPassword = $("#confirmPassword").val();

            if (!email || isEmailVerified == false) {
                toastr.error("Please make email verified.");
                submitted = false;
                $(this).find('button').prop('disabled', false);
                return;
            }

            if (password !== confirmPassword) {
                toastr.error("Password and Confirm Password do not match.");
                submitted = false;
                $(this).find('button').prop('disabled', false);
                return;
            }

            try {
                var data = {
                    UserName: $("#firstName").val(),
                    FirstName: $("#firstName").val(),
                    LastName: $("#lastName").val(),
                    Password: $("#password").val(),
                    Email: $("#emailAddress").val(),
                    UserName: $("#emailAddress").val(),
                    PhoneNumber: $("#phoneNumber").val(),
                    CompanyName: $("#companyName").val(),
                    CountryCode: $("#countryCode").val(),
                    Country: $("#country").val(),
                    PropertyTypeId: $("#propertyType").val(),
                    Units: $("#unitsFinal").val(),
                    LeadGenration: $("#leadGeneration").val(),
                    Currency: $("#currency").val(),
                    SubscriptionName: $("#subscriptionName").val(),
                    SubscriptionId: $("#subscriptionId").val(),
                    Price: $("#subscriptionPrice").val(),
                    IsYearly: $("#planSelection").is(":checked"),
                    IsTrial: $("#subscriptionName").val() == "Free" ? true : false
                };

                async function registerAndCheckout(data) {
                    try {
                        const params = new URLSearchParams();
                        for (const key in data) {
                            if (data.hasOwnProperty(key)) {
                                params.append(key, data[key]);
                            }
                        }

                        const response = await fetch('/Auth/Register', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            body: params.toString(),
                        });

                        const checkoutOrder = await response.json();
                        const nameInput = $('#name').val();

                        console.log("sdfsdf")
                        console.log(checkoutOrder)
                        console.log(nameInput)

                        const { error, setupIntent } = await stripe.confirmCardSetup(
                            checkoutOrder.ClientSecret,
                            {
                                payment_method: {
                                    card: card,
                                    billing_details: {
                                        name: nameInput,
                                    },
                                },
                            }
                        );

                        if (error) {
                            console.error(error.message);
                        } else {
                            console.log('Setup successful! Creating subscription...');

                            const subscriptionResponse = await fetch('/Subscriptions/CreateSubscription', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({
                                    customerId: checkoutOrder.CustomerId,
                                    priceId: checkoutOrder.PriceId,
                                    paymentMethodId: setupIntent.payment_method,
                                }),
                            });

                            const subscriptionResult = await subscriptionResponse.json();
                            if (subscriptionResult.error) {
                                console.error('Subscription creation failed:', subscriptionResult.error);
                            } else {
                                console.log('Subscription created successfully!');
                                location.reload();
                            }
                        }
                    } catch (error) {
                        toastr.error(error.message || "Error in registering.");
                    } finally {
                        $.unblockUI();
                    }
                }

                await registerAndCheckout(data);

            } catch (error) {
                console.error('Backend Error:', error);
                alert('An error occurred while processing your subscription.');
            } finally {
                $('#submit').prop('disabled', false);
                submitted = false;
            }
        });

    });

    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("GetAllPropertyTypesDll", "Auth")',
            type: 'Get',
            dataType: 'json',
            success: function (data) {
                var propertiesDropdown = document.getElementById('propertyType');
                //propertiesDropdown.innerHTML = '';
                data.forEach(function (item) {
                    var option = new Option(item.PropertyTypeName, item.PropertyTypeId);
                    propertiesDropdown.appendChild(option);
                });
            }
        });

        function updateUnitsFinal() {
            var unitsValue = $('#units').val();
            $('#unitsFinal').val(unitsValue).trigger("input")
        }

        $('#units').on('input', updateUnitsFinal);

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };

        $('#planSelection').change(function () {
            if ($(this).prop('checked')) {
                $('#monthly-container').addClass('d-none');
                $('#yearly-container').removeClass('d-none');
            } else {
                $('#monthly-container').removeClass('d-none');
                $('#yearly-container').addClass('d-none');
            }
        });

        loadSubscriptions();


        $("#unitsFinal").on("input", function () {
            handleUnitsChange();
        });

    });



    function handleUnitsChange() {
        const units = $('#unitsFinal').val();
        $('.pricing-block').each(function () {
            const priceElement = $(this).find('.price-box h4');
            const basePrice = parseFloat(priceElement.data('basePrice'));
            let newPrice = basePrice * units;

            const subscriptionName = $(this).find('h2').text().trim();
            if (subscriptionName === 'Basic') {
                newPrice *= 1;
            } else if (subscriptionName === 'Plus') {
                newPrice *= 0.75;
            } else if (subscriptionName === 'Premium') {
                newPrice *= 0.5;
            }

            priceElement.text('$' + newPrice.toFixed(2));

            const unitsElement = $(this).find('.unitsBlock');
            unitsElement.text(units);
        });
    }


    function loadSubscriptions() {
        $.ajax({
            url: '@Url.Action("GetAllSubscriptionBlocks", "Subscription")',
            type: 'Post',
            success: function (response) {
                if (response.success && Array.isArray(response.data)) {
                    const monthlyContainer = $('#monthly-container');
                    const yearlyContainer = $('#yearly-container');

                    response.data.forEach(sub => {
                        const subscriptionBlock = createSubscriptionBlock(sub);
                        if (sub.SubscriptionType === 'Monthly') {
                            monthlyContainer.append(subscriptionBlock);
                        } else if (sub.SubscriptionType === 'Yearly') {
                            yearlyContainer.append(subscriptionBlock);
                        }
                    });
                } else {
                    console.error('Failed to load subscriptions:', response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error('An error occurred while fetching subscriptions:', error);
            }
        });
    }

    function createSubscriptionBlock(subscription) {
        return `
                        <div class="col-auto">
                            <div class="pricing-block card text-center">
                                <div class="pricing-header">
                                    <h2>${subscription.SubscriptionName}</h2>
                                    <div class="price-box">
                                        <div>
                                                <h4 class="text-white" data-base-price="${subscription.Price.toFixed(2)}">$${subscription.Price.toFixed(2)} ${subscription.Currency}</h4>
                                            <p>/ ${subscription.SubscriptionType}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="pricing-list">
                                    <ul class="pricing-inner">
                                        <li>
                                                <h6><span class="unitsBlock">${subscription.NoOfUnits}</span> Units</h6>
                                        </li>
                                        <li>
                                            <h6>${subscription.SmallDescription}</h6>
                                        </li>
                                        <li>
                                            <h6>${subscription.Tax}%
                                                <span> Tax</span></h6>
                                        </li>
                                    </ul>
                                    <button
                                        class="btn btn-primary btn-lg"
                                            onclick="handleSubscriptionClick(${subscription.Price.toFixed(2)}, '${subscription.Id}', '${subscription.SubscriptionName}', '${subscription.NoOfUnits}')"
                                        type="button">
                                        ${subscription.SubscriptionName === 'Free' ? 'Trial' : 'Subscribe'}
                                    </button>
                                </div>
                            </div>
        </div>`;
    }


    function handleSubscriptionClick(price, id, name, units) {
        $("#subscriptionId").val(id);
        $("#subscriptionName").val(name);
        $("#subscriptionPrice").val(price);

        $('#product-Id').text(id);
        $('#product-title').text(name);
        $('#product-description').text($("#unitsFinal").val() + " Units");
        $('#product-price').text(price);
        $('#product-priceText').text(`Price: $${price.toFixed(2)}`);

        $("#stripeModal").modal("show");
        // $('.bank-account-form').addClass('d-none');

        if (price === 0) {
            isNotFree = false;
            $('.btn-register').removeClass('d-none');
        } else {
            isNotFree = true;
            $('.btn-register').removeClass('d-none');
            //$('.bank-account-form').removeClass('d-none');
        }
        

    }


    // function registerUser() {
    //     var email = $("#emailAddress").val();
    //     var otpEmail = $("#otpEmail").val();
    //     var password = $("#password").val();
    //     var confirmPassword = $("#confirmPassword").val();


    //     if (!email || isEmailVerified == false) {
    //         toastr.error("Please make email verified.");
    //         return;
    //     }
        
    //     if (password !== confirmPassword) {
    //         toastr.error("Password and Confirm Password do not match.");
    //         return;
    //     }

    //     // if (isNotFree) {
    //     //     var cardholderName = $("#cardholderName").val();
    //     //     var cardNumber = $("#cardNumber").val();
    //     //     var expiryDate = $("#expiryDate").val();
    //     //     var cvv = $("#cvv").val();
    //     //     var streetAddress = $("#streetAddress").val();
    //     //     var city = $("#city").val();
    //     //     var state = $("#state").val();
    //     //     var isvalid = true;
    //     //     if (!cardholderName) {
    //     //         toastr.error("Cardholder Name is required.");
    //     //         isvalid = false;
    //     //     }
    //     //     if (!cardNumber) {
    //     //         toastr.error("Card Number is required.");
    //     //         isvalid = false;
    //     //     }
    //     //     if (!expiryDate) {
    //     //         toastr.error("Expiration Date is required.");
    //     //         isvalid = false;
    //     //     }
    //     //     if (!cvv) {
    //     //         toastr.error("CVV is required.");
    //     //         isvalid = false;
    //     //     }
    //     //     if (!streetAddress) {
    //     //         toastr.error("Street Address is required.");
    //     //         isvalid = false;
    //     //     }
    //     //     if (!city) {
    //     //         toastr.error("City is required.");
    //     //         isvalid = false;
    //     //     }
    //     //     if (!state) {
    //     //         toastr.error("State is required.");
    //     //         isvalid = false;
    //     //     }
    //     //     if (!isvalid) {
    //     //         return;
    //     //     }
    //     // }

    //     var data = {
    //         UserName: $("#firstName").val(),
    //         FirstName: $("#firstName").val(),
    //         LastName: $("#lastName").val(),
    //         Password: $("#password").val(),
    //         Email: $("#emailAddress").val(),
    //         UserName: $("#emailAddress").val(),
    //         PhoneNumber: $("#phoneNumber").val(),
    //         CompanyName: $("#companyName").val(),
    //         Country: $("#country").val(),
    //         PropertyTypeId: $("#propertyType").val(),
    //         Units: $("#unitsFinal").val(),
    //         LeadGenration: $("#leadGeneration").val(),
    //         Currency: $("#currency").val(),
    //         SubscriptionName: $("#subscriptionName").val(),
    //         SubscriptionId: $("#subscriptionId").val(),
    //         Price: $("#subscriptionPrice").val(),
    //         IsYearly: $("#planSelection").is(":checked"),
    //         IsTrial: $("#subscriptionName").val() == "Free" ? true : false
    //     };

    //     // if (isNotFree) {
    //     //     $.extend(data, {
    //     //         CardholderName: $("#cardholderName").val(),
    //     //         CardNumber: $("#cardNumber").val(),
    //     //         ExpirationDate: $("#expiryDate").val(),
    //     //         CVV: $("#cvv").val(),
    //     //         StreetAdress: $("#streetAddress").val(),
    //     //         City: $("#city").val(),
    //     //         State: $("#state").val()
    //     //     });
    //     // }

    //     $.blockUI({ message: '<h1>Loading...</h1>' });
    //     $.ajax({
    //         url: '@Url.Action("Register", "Auth")',
    //         type: 'POST',
    //         data: data,
    //         success: function (response) {
    //             console.log("response")
    //             console.log(response)
    //             $.unblockUI();
    //             if (response.success) {
    //                 var stripe = Stripe(response.PubKey);
    //                 stripe.redirectToCheckout({ sessionId: response.SessionId })
    //                     .then(function (result) {
    //                         if (result.error) {
    //                             alert(result.error.message);
    //                         }
    //                     });
    //                 //window.location.href = "/Auth/ConfirmEmailPage";
    //             } else {
    //                 alert("Error Message");
    //                 toastr.error(response.message);
    //             }
    //         },
    //         error: function (xhr, status, error) {
    //             $.unblockUI();
    //             toastr.error("Error in registering.");
    //         }
    //     });
    // }

    function sendEmailOtp() {
        let email = $("#emailAddress").val().trim();
        let emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
        if (email !== "") {
            if (emailRegex.test(email)) {
                $.blockUI({ message: '<h1>Loading...</h1>' });
                $.ajax({
                    url: '@Url.Action("SendEmailOTP", "Auth")',
                    type: 'GET',
                    data: { email: email },
                    success: function (response) {
                        $.unblockUI();
                        if (response.success) {
                            toastr.success(response.message);
                            $('#otpEmail').show();
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        $.unblockUI();
                        toastr.error("Error in verifying email.");
                    }
                });
            } else {
                toastr.error("Invalid email format.");
            }
        } else {
            toastr.error("Email is Required.");
        }
    }

    $('#otpEmail').on('input', function () {
        var otpValue = $('#otpEmail').val();
        let email = $("#emailAddress").val().trim();
        if (otpValue.length >= 6) {
            $.blockUI({ message: '<h1>Loading...</h1>' });
            $("#otpEmail").prop('disabled', true);
            $.ajax({
                url: '@Url.Action("VerifyEmailOTP", "Auth")',
                type: 'POST',
                data: { email: email, code: otpValue },
                success: function (response) {
                    $.unblockUI();
                    if (response.success) {
                        toastr.success(response.message);
                        isEmailVerified = true
                        $("#emailAddress").attr("readOnly", true)
                        $('#otpEmail').hide();
                    } else {
                        toastr.error(response.message);
                        $("#otpEmail").prop('disabled', false);
                    }
                },
                error: function (xhr, status, error) {
                    $.unblockUI();
                    toastr.error("Error in verifying email.");
                }
            });
        }
    });

    function sendPhoneOtp() {
        let phone = $("#phoneNumber").val().trim();
        if (phone !== "") {
            $.blockUI({ message: '<h1>Loading...</h1>' });
            $.ajax({
                url: '@Url.Action("SendPhoneOTP", "Auth")',
                type: 'GET',
                data: { phoneNumber: phone },
                success: function (response) {
                    $.unblockUI();
                    if (response.success) {
                        toastr.success(response.message);
                        $('#otpPhone').show();
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    $.unblockUI();
                    toastr.error("Error in verifying phone.");
                }
            });
        } else {
            toastr.error("Phone Number is Required.");
        }
    }

    $('#otpPhone').on('input', function () {
        var otpValue = $("#otpPhone").val();
        let phone = $("#phoneNumber").val().trim();
        if (otpValue.length >= 6) {
            $.blockUI({ message: '<h1>Loading...</h1>' });
            $("#otpPhone").prop('disabled', true);
            $.ajax({
                url: '@Url.Action("VerifyPhoneOTP", "Auth")',
                type: 'POST',
                data: { phoneNumber: phone, code: otpValue },
                success: function (response) {
                    $.unblockUI();
                    if (response.success) {
                        toastr.success(response.message);
                        $("#phoneNumber").attr("readOnly", true)
                        $('#otpPhone').hide();

                    } else {
                        toastr.error(response.message);
                        $("#otpPhone").prop('disabled', false);
                    }
                },
                error: function (xhr, status, error) {
                    $.unblockUI();
                    toastr.error("Error in verifying phone.");
                }
            });
        }
    });

</script>

