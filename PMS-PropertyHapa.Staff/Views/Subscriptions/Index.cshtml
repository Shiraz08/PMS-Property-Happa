@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

    :root {
        --light-grey: #F6F9FC;
        --dark-terminal-color: #0A2540;
        --accent-color: #635BFF;
        --radius: 3px;
    }

    /*body {
      padding: 20px;
      font-family: 'Raleway';
      display: flex;
      justify-content: center;
      font-size: 1.2em;
      color: var(--dark-terminal-color);
    }

    main {
      width: 480px;
    }
     */
    form > * {
        margin: 10px 0;
    }

    button {
        background-color: var(--accent-color);
    }

    button {
        background: var(--accent-color);
        border-radius: var(--radius);
        color: white;
        border: 0;
        padding: 12px 16px;
        margin-top: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        display: block;
    }

        button:hover {
            filter: contrast(115%);
        }

        button:active {
            transform: translateY(0px) scale(0.98);
            filter: brightness(0.9);
        }

        button:disabled {
            opacity: 0.5;
            cursor: none;
        }

    input, select {
        display: block;
        font-size: 1.1em;
        width: 100%;
        margin-bottom: 10px;
    }

    label {
        display: block;
    }

    a {
        color: var(--accent-color);
        font-weight: 900;
    }

    small {
        font-size: .6em;
    }

    fieldset, input, select {
        border: 1px solid #efefef;
    }

    #payment-form {
        border: #F6F9FC solid 1px;
        border-radius: var(--radius);
        padding: 20px;
        margin: 20px 0;
        box-shadow: 0 30px 50px -20px rgb(50 50 93 / 25%), 0 30px 60px -30px rgb(0 0 0 / 30%);
    }

    #messages {
        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New';
        display: none; /* hide initially, then show once the first message arrives */
        background-color: #0A253C;
        color: #00D924;
        padding: 20px;
        margin: 20px 0;
        border-radius: var(--radius);
        font-size: 0.7em;
        overflow: scroll;
    }

</style>


<script src="~/js/jscontroller/utils.js"></script>
<div class="page-body py-4">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-3">
                <label class="form-label" for="unitsFinal">Number of Units</label>
                <input class="form-control" id="unitsFinal" value="1" type="number" name="unitsFinal" placeholder="Number of Units">
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-12 d-flex justify-content-center">
                <div class="switch-container">
                    <span class="switch-label">Monthly</span>
                    <label class="switch">
                        <input type="checkbox" id="planSelection"><span class="switch-state"></span>
                    </label>
                    <span class="switch-label">Yearly</span>
                </div>
            </div>
        </div>
        <div class="row justify-content-center" id="monthly-container">
            <!-- Monthly Subscription blocks will be dynamically inserted here -->
        </div>
        <div class="row justify-content-center d-none" id="yearly-container">
            <!-- Yearly Subscription blocks will be dynamically inserted here -->
        </div>
    </div>
</div>

<!-- Modal HTML -->
<div class="modal fade" id="stripeModal" tabindex="-1" aria-labelledby="stripeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white border-0">
                <h5 class="modal-title" id="stripeModalLabel">Checkout</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="payment-form" class="m-0 p-0" style="box-shadow: none;">
                <div class="modal-body">
                    <div class="mb-3">
                        <input type="hidden" id="product-Id">
                        <label for="name" class="form-label">Name</label>
                        <input id="name" class="form-control" placeholder="Enter Name" required />
                    </div>

                    <div class="mb-3">
                        <label for="card-element" class="form-label">Card</label>
                        <div id="card-element" class="form-control"></div>
                        <div id="card-errors" class="text-danger mt-2" role="alert"></div>
                    </div>

                    <div id="product-details" class="mb-4">
                        <div class="row">
                            <div class="col-md-6">
                                <h4 id="product-title" class="fw-bold mb-2"></h4>
                                <p id="product-description" class="text-muted mb-3"></p>
                            </div>
                            <div class="col-md-6 text-md-end">
                                <p class="d-none" id="product-price"></p>
                                <div id="free-trial-description" class="d-none mb-3">
                                    <p class="text-success fw-bold">10-day free trial</p>
                                </div>
                                <h4 id="product-priceText" class="mb-0 text-primary fw-bold"></h4>
                            </div>
                        </div>
                    </div>

                    <div id="price-section" class="d-flex justify-content-center mb-4">
                        <img id="price-image" class="img-fluid" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRG_TUukNvS-0E486weXLkJDpTubsAcdHdmKw&usqp=CAU" alt="Price Image" style="max-width: 100%; height: auto;" />
                    </div>

                </div>

                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button class="btn btn-primary" id="submit">Pay</button>
                </div>

            </form>

            <div id="messages" class="alert alert-danger mt-3 d-none" role="alert"></div>
        </div>
    </div>
</div>



@* <div class="modal fade" id="stripeModal" tabindex="-1" aria-labelledby="stripeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="stripeModalLabel">Checkout</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="payment-form">
                <div class="mb-3">
                    <p class="d-none" id="product-Id"></p>
                    <label for="name" class="form-label">Name</label>
                    <input id="name" class="form-control" placeholder="Enter Name" required />
                </div>
                
                 <div class="mb-3">
                    <label for="card-element" class="form-label">Card</label>
                    <div id="card-element" class="form-control"></div>
                    <div id="card-errors" class="text-danger mt-2" role="alert"></div> 
                </div>

                <div id="product-details" class="mb-3">
                    <div class="row">
                        <div class="col-md-6">
                            <h4 id="product-title"></h4>
                            <p id="product-description"></p>
                        </div>
                        <div class="col-md-6 text-md-right">
                            <p class="d-none" id="product-price"></p>
                            <div id="free-trial-description" class="d-none mb-3">
                                <p><strong>10-days free trial</strong></p>
                            </div>
                            <h4 id="product-priceText" class="mb-0"></h4>
                        </div>
                    </div>
                    <div id="free-trial-description" class="d-none mb-3">
                        <p>10-day free trial</p>
                    </div>

                    <div id="price-section" class="d-flex justify-content-center">
                        <img id="price-image" class="me-4" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRG_TUukNvS-0E486weXLkJDpTubsAcdHdmKw&usqp=CAU" alt="Price Image" style="width: 50%; height: 50%;" />
                    </div>
                </div>

                <div class="d-flex justify-content-end">
                    <button class="btn btn-primary" id="submit">Pay</button>
                </div>
                
            </form>

            <div id="messages" role="alert" style="display: none;"></div>
        </div>
    </div>
</div>  *@

<script src="https://js.stripe.com/v3/"></script>
<script>
    let updatedPrice = 0;
    document.addEventListener('DOMContentLoaded', async () => {
        const stripe = Stripe('pk_test_51PATV6AezidaMUD1niwSxJ42oxgtI2vZLXEQo8lEMybnjmzaLF3JRV099zwzJ6HWb4cWVzqlvJSaLP7IiMn8YuXM00cA7HPhEH');
        const elements = stripe.elements();
        const cardElement = document.getElementById('card-element');
        const card = elements.create('card');

        if (cardElement) {
            card.mount(cardElement); // Mount the Card Element
        } else {
            console.error('Card Element container not found.');
        }

        let submitted = false;

        $('#payment-form').on('submit', async function (event) {
            event.preventDefault();

            if (submitted) return;
            submitted = true;
            $(this).find('button').prop('disabled', true);

            const id = $('#product-Id').text();
            const nameInput = $('#name').val();
            const title = $('#product-title').text();
            const description = $('#product-description').text();
            //const price = parseFloat($('#product-price').text());

            const formData = {
                Id: id,
                Title: title,
                Description: description,
                Price: updatedPrice,
                Name: nameInput,
                IsYearly: $("#planSelection").is(":checked"),
                IsTrial: title == "Free" ? true : false,
                Units: $("#unitsFinal").val()
            };

            try {
                const response = await fetch('/Subscriptions/SavePayment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData),
                });
                const checkoutOrder = await response.json();

                const { error, setupIntent } = await stripe.confirmCardSetup(
                    checkoutOrder.ClientSecret,
                    {
                        payment_method: {
                            card: card,
                            billing_details: {
                                name: nameInput,
                            },
                        },
                    }
                );

                if (error) {
                    console.error(error.message);
                } else {
                    console.log('Setup successful! Creating subscription...');

                    const subscriptionResponse = await fetch('/Subscriptions/CreateSubscription', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            customerId: checkoutOrder.CustomerId,
                            priceId: checkoutOrder.PriceId,
                            paymentMethodId: setupIntent.payment_method,
                        }),
                    });

                    const subscriptionResult = await subscriptionResponse.json();
                    if (subscriptionResult.error) {
                        console.error('Subscription creation failed:', subscriptionResult.error);
                    } else {
                        console.log('Subscription created successfully!');
                        window.location = '/Subscriptions/Success';
                    }
                }
            } catch (error) {
                console.error('Backend Error:', error);
                alert('An error occurred while processing your subscription.');
                $('#stripeModal').modal('hide');
            } finally {
                $('#submit').prop('disabled', false);
                submitted = false;
            }
        });
    });

    $(document).ready(function () {
        $('#planSelection').change(function () {
            if ($(this).prop('checked')) {
                $('#monthly-container').addClass('d-none');
                $('#yearly-container').removeClass('d-none');
            } else {
                $('#monthly-container').removeClass('d-none');
                $('#yearly-container').addClass('d-none');
            }
        });

        loadSubscriptions();

        $("#unitsFinal").on("input", function () {
            handleUnitsChange();
        });
    });

    function handleUnitsChange() {
        const units = $('#unitsFinal').val();
        $('.pricing-block').each(function () {
            const priceElement = $(this).find('.price-box h4');
            const basePrice = parseFloat(priceElement.data('basePrice'));
            let newPrice = basePrice * units;

            const subscriptionName = $(this).find('h2').text().trim();
            if (subscriptionName === 'Basic') {
                newPrice *= 1;
            } else if (subscriptionName === 'Plus') {
                newPrice *= 0.75;
            } else if (subscriptionName === 'Premium') {
                newPrice *= 0.5;
            }

            priceElement.text('$' + newPrice.toFixed(2));

            const unitsElement = $(this).find('.unitsBlock');
            unitsElement.text(units);
        });

        updateModalPrice(units);
    }

    function updateModalPrice(units) {
        const modalPriceElement = $('#product-priceText');
        const basePrice = parseFloat($('#product-price').text());
        const subscriptionName = $('#product-title').text().trim();
        let newPrice = basePrice * units;

        if (subscriptionName === 'Basic') {
            newPrice *= 1;
        } else if (subscriptionName === 'Plus') {
            newPrice *= 0.75;
        } else if (subscriptionName === 'Premium') {
            newPrice *= 0.5;
        }

        updatedPrice = newPrice; 
        modalPriceElement.text('Price: $' + newPrice.toFixed(2));
    }

    function loadSubscriptions() {
        $.ajax({
            url: '/Subscriptions/GetAllSubscriptions',
            type: 'GET',
            dataType: 'json',
            success: function (response) {
                if (response.success && Array.isArray(response.data)) {
                    const monthlyContainer = $('#monthly-container');
                    const yearlyContainer = $('#yearly-container');

                    response.data.forEach(sub => {
                        const subscriptionBlock = createSubscriptionBlock(sub);
                        if (sub.SubscriptionType === 'Monthly') {
                            monthlyContainer.append(subscriptionBlock);
                        } else if (sub.SubscriptionType === 'Yearly') {
                            yearlyContainer.append(subscriptionBlock);
                        }
                    });
                } else {
                    console.error('Failed to load subscriptions:', response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error('An error occurred while fetching subscriptions:', error);
            }
        });
    }

    function createSubscriptionBlock(subscription) {
        return `
            <div class="col-auto">
                <div class="pricing-block card text-center">
                    <div class="pricing-header">
                        <h2>${subscription.SubscriptionName}</h2>
                        <div class="price-box">
                            <div>
                                <h4 class="text-white" data-base-price="${subscription.Price.toFixed(2)}">$${subscription.Price.toFixed(2)} ${subscription.Currency}</h4>
                                <p>/ ${subscription.SubscriptionType}</p>
                            </div>
                        </div>
                    </div>
                    <div class="pricing-list">
                        <ul class="pricing-inner">
                            <li>
                                <h6><span class="unitsBlock">${subscription.NoOfUnits}</span> Units</h6>
                            </li>
                            <li>
                                <h6>${subscription.SmallDescription}</h6>
                            </li>
                            ${subscription.SubscriptionType === 'Yearly' ? '<li><h6>10% discount</h6></li>' : ''}
                            <li>
                                <h6>${subscription.Tax}%<span> Tax</span></h6>
                            </li>
                        </ul>
                        <button class="btn btn-primary btn-lg" onclick="handleSubscriptionClick(${subscription.Price.toFixed(2)}, '${subscription.Id}', '${subscription.SubscriptionName}')" type="button">Subscribe</button>
                    </div>
                </div>
            </div>`;
    }

    function handleSubscriptionClick(price, id, name) {
        $('#product-Id').text(id);
        $('#product-title').text(name);
        $('#product-description').text($("#unitsFinal").val() + " Units");
        $('#product-price').text(price);
        $('#product-priceText').text(`Price: $${price.toFixed(2)}`);

        if (name === "Free") {
            $('#free-trial-description').removeClass('d-none');
        } else {
            $('#free-trial-description').addClass('d-none');
        }

        $("#stripeModal").modal("show");

        const units = $('#unitsFinal').val();
        updateModalPrice(units);
    }

</script>
