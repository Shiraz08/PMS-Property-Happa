@model IEnumerable<PMS_PropertyHapa.Models.DTO.AssetDTO>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .card-title {
        font-size: 1.25rem;
        font-weight: bold;
    }

    .card-subtitle {
        font-size: 1rem;
    }

    .card-text {
        font-size: 1rem;
    }

    .badge {
        font-size: 0.85rem;
        padding: 0.5em 0.75em;
    }

    .property-img {
        width: 100px;
        height: 100px;
        object-fit: cover;
    }

    .card-actions {
        position: absolute;
        bottom: 0;
        right: 0;
    }

        .card-actions button {
            margin-left: 5px;
        }
</style>

<!-- Page Sidebar Ends-->
<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row mb-3">
                <div class="col-12 col-sm-8 d-flex align-items-center">
                    <h3 class="mb-0">Assets</h3>
                </div>
                <div class="col-12 col-sm-2 mb-3 mb-sm-0">
                    <a class="btn btn-success w-100 d-flex align-items-center justify-content-center" href="@Url.Action("AddAssest","Assests")">
                        <div class="plusCircle me-2">
                            +
                        </div>
                        New Property
                    </a>
                </div>
                <div class="col-12 col-sm-2">
                    <ol class="breadcrumb bg-transparent p-0">
                        <li class="breadcrumb-item"><a href="/Home/Index"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item">Assets</li>
                        <li class="breadcrumb-item active">List</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                @{
                                    if (!string.IsNullOrEmpty(item.Image))
                                    {
                                        <img class="img-fluid rounded-1 property-img" src="@item.Image" alt="Property Image">
                                    }
                                    else
                                    {
                                        <img class="img-fluid rounded-1 property-img" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRG_TUukNvS-0E486weXLkJDpTubsAcdHdmKw&usqp=CAU" alt="Default Image">
                                    }
                                }
                                <div class="ms-3">
                                    <h5 class="card-title">@item.BuildingNo- @item.BuildingName</h5>
                                    <p class="card-text mb-0">@item.SelectedPropertyType</p>
                                    <p class="card-text">@item.SelectedSubtype</p>
                                </div>
                            </div>
                            
                            <p class="card-text"><strong>Units:</strong> @item.Units.ToList().Count()</p>
                            @if (item.Units.Any())
                            {
                                <p class="card-text"><strong>Unit Names:</strong> @string.Join(", ", item.Units.Select(u => u.UnitName))</p>
                            }

                            <p class="card-text"><strong>Address:</strong> @item.Street1, @item.State, @item.City, @item.Country</p>
                            @if (item?.OwnerData != null)
                            {
                                <p class="card-text"><strong>Owner Name:</strong> @(string.IsNullOrEmpty(item.OwnerData.FirstName) && string.IsNullOrEmpty(item.OwnerData.LastName) ? "N/A" : $"{item.OwnerData.FirstName} {item.OwnerData.LastName}")</p>
                                <p class="card-text"><strong>Email:</strong> @(string.IsNullOrEmpty(item.OwnerData.EmailAddress) ? "N/A" : item.OwnerData.EmailAddress)</p>
                            }
                        </div>
                        <div class="card-actions pb-2">
                            <button type="button" class="btn btn-success" style="cursor: pointer;" onclick="openUnitsModal(@item.AssetId)">
                                <i class="fa fa-info-circle fa-lg"></i> Unit Detail
                            </button>
                            <button type="button" class="btn btn-success" style="cursor: pointer;" onclick="editAsset(@item.AssetId)">
                                <i class="fa fa-pencil fa-lg"></i> Edit
                            </button>
                            <button type="button" class="btn btn-danger mr-3" style="cursor: pointer;" onclick="deleteAsset(@item.AssetId)">
                                <i class="fa fa-trash fa-lg"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="unitDetailModal" tabindex="-1" aria-labelledby="detailModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailModalLabel">Unit Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table display" id="unitsTable">
                        <thead>
                            <tr>
                                <th>Unit Name</th>
                                <th>Bath</th>
                                <th>Beds</th>
                                <th>Rent</th>
                                <th>Size</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    $(document).ready(function () {
        $("#searchInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

    function openUnitsModal(assetId) {
        $.ajax({
            url: '@Url.Action("GetUnitsDetail", "Assests")',
            type: 'POST',
            data: { assetId: assetId },
            success: function (res) {
                if ($.fn.DataTable.isDataTable('#unitsTable')) {
                    $('#unitsTable').DataTable().destroy();
                }
                console.log(res)
                $('#unitsTable tbody').empty();
                res.forEach(function (item) {
                    $('#unitsTable tbody').append(`
                        <tr>
                                <td>${item.UnitName}</td>
                                <td>${item.Bath}</td>
                                <td>${item.Beds}</td>
                                <td>${item.Rent}</td>
                                <td>${item.Size}</td>
                        </tr>
                    `);
                });

                $('#unitsTable').DataTable();
                $('#unitDetailModal').modal('show');
            },
            error: function (xhr, status, error) {
                console.error('Error:', error);
                alert('Failed to retrieve data');
            },
        });
    }

    function editAsset(assetId) {
        window.location.href = `/Assests/EditAsset?assetId=${assetId}`;
    }
    
    function deleteAsset(id) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'You will not be able to recover this Asset!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteAsset", "Assests")',
                    type: 'POST',
                    data: { assetId: id },
                    success: function (task) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Asset deleted successfully',
                            showConfirmButton: false,
                            timer: 1500
                        });
                        location.reload()
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong!'
                        });
                    },
                });
            }
        });
    }
</script>

