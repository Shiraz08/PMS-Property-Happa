@using Newtonsoft.Json
@using PMS_PropertyHapa.Models.DTO
@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-12 col-sm-6">
                    <h3>Dashboard</h3>
                </div>
                <div class="col-12 col-sm-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"> <a class="home-item" href="@Url.Action("Index","Dashboard")"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item"> Dashboard</li>
                        <li class="breadcrumb-item active">Index</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid default-dash">
        <div class="row">
            <div class="col-xl-6 col-md-6 dash-xl-50">
                <div class="card profile-greeting">
                    <div class="card-body">
                        <div class="media">
                            <div class="media-body">
                                <div class="greeting-user">
                                    <h1>Hello, ,.....</h1>
                                    <p>Welcome back, your dashboard is ready!</p>
                                </div>
                            </div>
                        </div>
                        <div class="cartoon-img"><img class="img-fluid" src="~/Dashboard/assets/images/images.svg" alt=""></div>
                    </div>
                </div>
            </div>
            <div class="col-xl-6 col-md-6 dash-xl-50">
                <div class="card pb-0 o-hidden earning-card">
                    <div class="card-header earning-back"></div>
                    <div class="card-body p-0">
                        <div class="earning-content">
                            <img class="img-fluid" src="~/Dashboard/assets/images/avatar.jpg" alt=""><a href="blog-single.html">
                                <h4>Today's Earning</h4>
                            </a><span>(Mon 15 - Sun 21)</span>
                            <h6>$573.67</h6>
                            <div id="earning-chart"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header">
                <h2>Porfolio Overview</h2>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-xl-3 col-md-6">
                        <div class="card border">
                            <a href="@Url.Action("Index","Landlord")">
                                <h2 class="ml-5 mt-4 fs-3 fw-bold">@ViewBag.totalLandlords</h2>
                                @* <span class="d-flex flex-row-reverse mr-5 fa-stack fa-4x">
                                    <i class="fa fa-circle fa-stack-2x icon-background"></i>
                                    <i class="fa fa-user fa-stack-1x"></i>
                                </span> *@
                                <span class="d-flex flex-row-reverse mr-5" style="font-size: 3em; color: lightgreen;">
                                    <i class="fa fa-user fx-5"></i>
                                </span>
                                <p class="ml-5 mb-4 text-secondary fs-3">Total Landlord</p>
                            </a>
                        </div>
                    </div>
                    <div class="col-xl-3 col-md-6">
                        <div class="card border">
                            <a href="@Url.Action("Index","Tenant")">
                                <div class="card-block-small">
                                    <h2 class="ml-5 mt-4 fs-3 fw-bold">@ViewBag.totalTenants</h2>
                                    <span class="d-flex flex-row-reverse mr-5" style="font-size: 3em; color: orange;">
                                        <i class="fa fa-home fx-5"></i>
                                    </span>
                                    <p class="ml-5 mb-4 text-secondary fs-3">Total Tenant</p>
                                </div>
                            </a>
                        </div>
                    </div>
                    <div class="col-xl-3 col-md-6">
                        <div class="card border">
                            <a href="@Url.Action("Index","Assests")">
                                <div class="card-block-small">
                                    <h2 class="ml-5 mt-4 fs-3 fw-bold">@ViewBag.totalAssets</h2>
                                    <span class="d-flex flex-row-reverse mr-5" style="font-size: 3em; color: darkblue;">
                                        <i class="fa fa-building-o fx-5"></i>
                                    </span>
                                    <p class="ml-5 mb-4 text-secondary fs-3">Total Assets</p>
                                </div>
                            </a>
                        </div>
                    </div>
                    <div class="col-xl-3 col-md-6">
                        <div class="card border">
                            <a href="@Url.Action("Index","Lease")">
                                <div class="card-block-small">
                                    <h2 class="ml-5 mt-4 fs-3 fw-bold">@ViewBag.totalInvoices</h2>
                                    <span class="d-flex flex-row-reverse mr-5" style="font-size: 3em; color: lightblue;">
                                        <i class="icofont icofont-files fx-5"></i>
                                    </span>
                                    <p class="ml-5 mb-4 text-secondary fs-3">Total Invoices</p>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        @*  <div class="row">
            <div class="col-xl-3 col-md-6">
                <div class="card">
                    <a href="@Url.Action("Index","Application")">
        
                        <span style="font-size: 3em; color: lightgreen;">
                            <i class="fa fa-user fx-5"></i>
                        </span>
                        <span class="text-secondary fs-3">Total Applications</span>
                        <h2 class="text-center">@ViewBag.totalApplications</h2>
        
                    </a>
                </div>
            </div>
            <div class="col-xl-3 col-md-6">
                <div class="card">
                    <a href="@Url.Action("Index","Tenant")">
                        <div class="card-block-small">
                            <span style="font-size: 3em; color: lightgreen;">
                                <i class="fa fa-home fx-5"></i>
                            </span>
                            <span class="text-secondary fs-3">Total Tenant</span>
                            <h2 class="text-center">@ViewBag.totalTaskRequests</h2>
                        </div>
                    </a>
                </div>
            </div>
            <div class="col-xl-3 col-md-6">
                <div class="card">
                    <a href="@Url.Action("Index","Assests")">
                        <div class="card-block-small">
                            <span style="font-size: 3em; color: lightgreen;">
                                <i class="fa fa-home fx-5"></i>
                            </span>
                            <span class="text-secondary fs-3">Total Assets</span>
                            <h2 class="text-center">@ViewBag.totalAssets</h2>
                        </div>
                    </a>
                </div>
            </div>
            <div class="col-xl-3 col-md-6">
                <div class="card">
                    <a href="@Url.Action("Index","Landlord")">
                        <div class="card-block-small">
                            <span style="font-size: 3em; color: lightgreen;">
                                <i class="fa fa-home fx-5"></i>
                            </span>
                            <span class="text-secondary fs-3">Total Invoices</span>
                            <h2 class="text-center">@ViewBag.totalInvoices</h2>
                        </div>
                    </a>
                </div>
            </div>
        </div>*@
    @*  <div class="col-xl-6 col-md-6 dash-xl-50">
            <div class="card our-activities">
                <div class="card-header card-no-border"></div>
                <div class="card-body pt-0">
                    <div id="chartTaskRequestByMonthContainer" style="height: 300px; width: 100%;"></div>
                </div>
            </div>
        </div>
        <div class="col-xl-6 col-md-6 dash-xl-50">
            <div class="card revenue-category">
                <div class="card-header card-no-border"></div> 
                <div class="card-body">
                    <div id="chartContainer" style="height: 300px; width: 100%;"></div>
                </div>
            </div>
        </div> *@
        
        @* <div class="col-xl-6 col-md-6 dash-xl-50">
            <div class="card revenue-category">
                <div class="card-header card-no-border"></div>
                <div class="card-body">
                    <div id="chartInvoiceContainer" style="height: 300px; width: 100%;"></div>
                </div>
            </div>
        </div> *@
        <div class="row">
            <div class="col-xl-4 col-md-4 dash-xl-50">
                <div class="card">
                    <div class="card-header pb-0">
                        <h5 class="text-center">Cash Flow </h5>
                    </div>
                    <div class="card-body">
                        <div id="cashFlowContainer" style="height: 300px; width: 100%;"></div>
                    </div>
                </div>
            </div>
            <div class="col-xl-4 col-md-4 dash-xl-50">
                <div class="card revenue-category">
                    <div class="card-header card-no-border">
                        <h5 class="text-center">Revenue Vs. Expense</h5>
                    </div>
                    <div class="card-body">
                        <div id="revenueExpenseContainer" style="height: 300px; width: 100%;"></div>
                    </div>
                </div>
            </div>
            <div class="col-xl-4 col-md-4 dash-xl-50">
                <div class="card revenue-category">
                    <div class="card-header card-no-border">
                        <h5 class="text-center">Occupancy/Vacancy Rates</h5>
                    </div>
                    <div class="card-body">
                        <div id="occupancyRateContainer" style="height: 300px; width: 100%;"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            
            <div class="col-xl-6 col-md-6 dash-xl-50">
                <div class="card news-update h-80">
                    <div class="card-header card-no-border">
                        <div class="header-top">
                            <h5 class="m-0">News &amp; Update</h5>
                            @*<div class="icon-box onhover-dropdown">
                            <i data-feather="more-horizontal"></i>
                            <div class="icon-box-show onhover-show-div">
                            <ul>
                            <li><a>Today</a></li>
                            <li><a>Yesterday</a></li>
                            <li><a>Tomorrow</a></li>
                            </ul>
                            </div>
                            </div> *@
                        </div>
                    </div>
                    <div class="card-body pt-0 overflow-auto" data-simplebar style="max-height: 335px;">
                        <div class="table-responsive custom-scrollbar">
                            <table class="table table-bordernone">
                                <tbody>
                                    <!-- Task Requests -->
                                    @if (ViewBag.taskRequest != null)
                                    {
                                        @foreach (var task in ViewBag.taskRequest)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="media">
                                                        @if (!string.IsNullOrEmpty(task.TaskRequestFile))
                                                        {
                                                            <img class="img-50 img-fluid m-r-20 rounded-circle update_img_0" src="@task.TaskRequestFile" alt="">
                                                        }
                                                        else
                                                        {
                                                            <img class="img-fluid me-3 b-r-5" src="~/Dashboard/assets/images/dashboard/rectangle-26.jpg" alt="">
                                                        }
                                                        <div class="media-body">
                                                            <a href="#">
                                                                <h4>@task.Type</h4>
                                                                <h5>@task.Subject</h5>
                                                            </a>
                                                            <p>@task.Description</p>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td><span class="badge badge-light-theme-light font-theme-light">@task.AddedDate?.ToString("yyyy-MM-dd")</span></td>
                                            </tr>
                                        }
                                    }
                                    @* <!-- Landlord Requests -->
                                    @if (ViewBag.landlords != null)
                                    {
                                    @foreach (var landlord in ViewBag.landlords)
                                    {
                                    <tr>
                                    <td>
                                    <div class="media">
                                    @if (!string.IsNullOrEmpty(landlord.Picture))
                                    {
                                    <img class="img-50 img-fluid m-r-20 rounded-circle update_img_0" src="@landlord.Picture" alt="">
                                    }
                                    else
                                    {
                                    <img class="img-fluid me-3 b-r-5" src="~/Dashboard/assets/images/dashboard/rectangle-26.jpg" alt="">
                                    }
                                    <div class="media-body">
                                    <a href="#">
                                    <h5>@landlord.FirstName  @landlord.LastName</h5>
                                    </a>
                                    <p>@landlord.EmailAddress</p>
                                    </div>
                                    </div>
                                    </td>
                                    <td><span class="badge badge-light-theme-light font-theme-light">@landlord.AddedDate?.ToString("yyyy-MM-dd")</span></td>
                                    </tr>
                                    }
                                    }
                                    <!-- Tenant Requests -->
                                    @if (ViewBag.tenants != null)
                                    {
                                    @foreach (var tenant in ViewBag.tenants)
                                    {
                                    <tr>
                                    <td>
                                    <div class="media">
                                    @if (!string.IsNullOrEmpty(tenant.Picture))
                                    {
                                    <img class="img-50 img-fluid m-r-20 rounded-circle update_img_0" src="@tenant.Picture" alt="">
                                    }
                                    else
                                    {
                                    <img class="img-fluid me-3 b-r-5" src="~/Dashboard/assets/images/dashboard/rectangle-26.jpg" alt="">
                                    }
                                    <div class="media-body">
                                    <a href="#">
                                    <h5>@tenant.FirstName  @tenant.LastName</h5>
                                    </a>
                                    <p>@tenant.EmailAddress</p>
                                    </div>
                                    </div>
                                    </td>
                                    <td><span class="badge badge-light-theme-light font-theme-light">@tenant.AddedDate?.ToString("yyyy-MM-dd")</span></td>
                                    </tr>
                                    }
                                    }
                                    <!-- Asset Requests -->
                                    @if (ViewBag.assets != null)
                                    {
                                    @foreach (var asset in ViewBag.assets)
                                    {
                                    <tr>
                                    <td>
                                    <div class="media">
                                    @if (!string.IsNullOrEmpty(asset.Image))
                                    {
                                    <img class="img-50 img-fluid m-r-20 rounded-circle update_img_0" src="@asset.Image" alt="">
                                    }
                                    else
                                    {
                                    <img class="img-fluid me-3 b-r-5" src="~/Dashboard/assets/images/dashboard/rectangle-26.jpg" alt="">
                                    }
                                    <div class="media-body">
                                    <a href="#">
                                    <h5>@asset.BuildingName</h5>
                                    </a>
                                    <p>@asset.OwnerFirstName  @asset.OwnerLastName</p>
                                    </div>
                                    </div>
                                    </td>
                                    <td><span class="badge badge-light-theme-light font-theme-light">@asset.AddedDate?.ToString("yyyy-MM-dd")</span></td>
                                    </tr>
                                    }
                                    } *@
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-6 col-md-6 dash-xl-50">
                <div class="card weekly-column">
                    <div class="card-header card-no-border">
                        <h5 class="text-center">Rent Collection Status</h5>
                    </div>
                    <div class="card-body">
                        <div id="rentStatusContainer" style="height: 300px; width: 100%;"> </div>
                    </div>
                </div>
            </div>
        </div>
        
       
        
        <div class="col-12 colorfull-kanban">
            <div class="card">
                <div class="card-header pb-0 text-center">
                    <h5>Custom Board</h5>
                    <p class="mb-0">| colors, gutter, click on board's item and restricting which boards to drag items to</p>
                </div>
                <div class="card-body pb-0">
                    <div class="kanban-block">
                        <div class="kanban-block" id="workOrderTasks"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Dashboard/assets/js/jquery-3.5.1.min.js"></script>
<script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>
<script>
    $(document).ready(function () {
      
        // window.onload = function () {
        //     // renderTaskStatusChart();
        //     // renderInvoicesHistoryChart();
        //     // renderAllTaskRequests();
        // };

        // // Function to render Task Status chart
        // function renderTaskStatusChart() {
        //     var taskStatusChart = new CanvasJS.Chart("chartContainer", {
        //         theme: "light2",
        //         exportEnabled: true,
        //         animationEnabled: true,
        //         title: {
        //             text: "Task Status"
        //         },
        //         data: [{
        //             type: "pie",
        //             startAngle: 180,
        //             toolTipContent: "<b>{label}</b>: {y}",
        //             showInLegend: true,
        //             legendText: "{label}",
        //             indexLabel: "{label} - {y}",
        //             dataPoints: @Html.Raw(ViewBag.DataPoints) 
        //             }]
        //     });
        //     taskStatusChart.render();
        // }

        // // Function to render Invoices History chart
        // function renderInvoicesHistoryChart() {
        //     var invoicesHistoryChart = new CanvasJS.Chart("chartInvoiceContainer", {
        //         theme: "light2", 
        //         exportEnabled: true,
        //         animationEnabled: true,
        //         title: {
        //             text: "Invoices Status"
        //         },
        //         data: [{
        //             type: "pie",
        //             startAngle: 180,
        //             toolTipContent: "<b>{label}</b>: {y}",
        //             showInLegend: true,
        //             legendText: "{label}",
        //             indexLabel: "{label} - {y}",
        //             dataPoints: @Html.Raw(ViewBag.invoiceStatus) 
        //         }]
        //     });
        //     invoicesHistoryChart.render();
        // }

        // function renderAllTaskRequests() {
        //     var chart = new CanvasJS.Chart("chartTaskRequestByMonthContainer", {
        //         theme: "light2", // Choose your theme
        //         exportEnabled: true,
        //         animationEnabled: true,
        //         title: {
        //             text: "Task Requests by Month"
        //         },
        //         axisX: {
        //             title: "Month"
        //         },
        //         axisY: {
        //             title: "Task Requests Count"
        //         },
        //         data: 
        //         [{
        //             type: "line", // Change chart type to line
        //             name: "Task Requests",
        //             showInLegend: true,
        //             dataPoints: @Html.Raw(ViewBag.DataPoints1)
        //         }]
        //     });
        //     chart.render();
        // }

        var cashFlowOptions = {
            chart: {
                height: 350,
                type: 'area',
                zoom: {
                    enabled: false
                },
                toolbar: {
                    show: false
                }
            },
            dataLabels: {
                enabled: false
            },
            stroke: {
                curve: 'straight'
            },
            series: [],
            title: {
                text: '',
                align: 'left'
            },
            subtitle: {
                text: '',
                align: 'left'
            },
            labels: [],
            xaxis: {
                type: 'datetime',
            },
            yaxis: {
                opposite: true
            },
            legend: {
                horizontalAlign: 'left'
            },
            colors: ['#775dd0']
        };

        var cashFlowChart = new ApexCharts(
            document.querySelector("#cashFlowContainer"),
            cashFlowOptions
        );

        cashFlowChart.render();

        $.ajax({
            url: '/Home/GetCashFlowData',
            dataType: 'json',
            success: function (data) {
                console.log("GetCashFlowData")
                console.log(data)
                cashFlowChart.updateOptions({
                    series: [{
                        name: "Monthly Revenue",
                        data: data.Series
                    }],
                    labels: data.Labels
                });
            },
            error: function (xhr, status, error) {
                console.error('Error fetching data:', error);
            }
        });


        // RevenuExpense Start
        var RevenueExpenseOptions = {
            chart: {
                height: 350,
                type: 'bar',
                toolbar: {
                    show: false
                }
            },
            plotOptions: {
                bar: {
                    horizontal: false,
                    endingShape: 'rounded',
                    columnWidth: '55%',
                },
            },
            dataLabels: {
                enabled: false
            },
            stroke: {
                show: true,
                width: 2,
                colors: ['transparent']
            },
            series: [], 
            xaxis: {
                categories: [], 
            },
            yaxis: {
                title: {
                    text: '$'
                }
            },
            fill: {
                opacity: 1
            },
            tooltip: {
                y: {
                    formatter: function (val) {
                        return "$ " + val 
                    }
                }
            },
            colors: ['#00E396', '#FEB019']
        };

        var RevenueExpenseChart = new ApexCharts(
            document.querySelector("#revenueExpenseContainer"),
            RevenueExpenseOptions
        );

        RevenueExpenseChart.render();

        $.ajax({
            url: '/Home/GetRevenueExpense',
            dataType: 'json',
            success: function (data) {
                console.log("data")
                console.log(data)
                var seriesData = data.Series.map(function (series) {
                    console.log("series")
                    console.log(series)
                    return { name: series.Name, data: series.Data };
                });
                RevenueExpenseChart.updateOptions({
                    series: seriesData,
                    xaxis: {
                        categories: data.Categories
                    }
                });
            },
            error: function (xhr, status, error) {
                console.error('Error fetching data:', error);
            }
        });
        // RevenuExpense ENd

        //Occupancy Chart start
        //Occupancy Chart start
        var occupancyRateOptions = {
            chart: {
                height: 350,
                type: 'radialBar',
            },
            plotOptions: {
                radialBar: {
                    dataLabels: {
                        name: {
                            fontSize: '22px',
                        },
                        value: {
                            fontSize: '16px',
                        },
                        total: {
                            show: true,
                            label: 'Total',
                            formatter: function (w) {
                                return w.globals.seriesTotals.reduce((a, b) => a + b, 0);
                            }
                        }
                    }
                }
            },
            series: [],
            labels: [],
            colors: ['#ff4560', '#775dd0']
        };

        var occupancyChart = new ApexCharts(
            document.querySelector("#occupancyRateContainer"),
            occupancyRateOptions
        );
        occupancyChart.render();
        
        $.ajax({
            url: '/Home/GetOccupancyRate',
            dataType: 'json',
            success: function (data) {
                console.log("occ")
                console.log(data)
                occupancyChart.updateOptions({
                    series: data.Series,
                    labels: data.Labels,
                    plotOptions: {
                        radialBar: {
                            dataLabels: {
                                total: {
                                    show: true,
                                    label: 'Total',
                                    formatter: function () {
                                        return data.Total;
                                    }
                                }
                            }
                        }
                    }
                });
            },
            error: function (xhr, status, error) {
                console.error('Error fetching data:', error);
            }
        });
        //Occupancy Chart End
        //Occupancy Chart End


        //Rent Status Start
        //Rent Status Start

        // var rentStatusOptions = {
        //     series: [],
        //     chart: {
        //         type: 'bar',
        //         height: 350,
        //         stacked: true,
        //         stackType: '100%',
        //         toolbar: {
        //             show: false,
        //         }
        //     },
        //     plotOptions: {
        //         bar: {
        //             horizontal: false,
        //             columnWidth: '20px',
        //             borderRadius: 5,
        //         },
        //     },
        //     grid: {
        //         show: false,
        //         xaxis: {
        //             lines: {
        //                 show: false
        //             }
        //         }
        //     },
        //     dataLabels: {
        //         enabled: false,
        //     },
        //     fill: {
        //         opacity: 1
        //     },
        //     legend: {
        //         show: false
        //     },
        //     states: {
        //         hover: {
        //             filter: {
        //                 type: 'darken',
        //                 value: 1,
        //             }
        //         }
        //     },
        //     colors: ['#008FFB', '#00E396'],
        //     yaxis: {
        //         tickAmount: 3,
        //         min: 0,
        //         max: 800,
        //         axisBorder: {
        //             show: false,
        //         },
        //         axisTicks: {
        //             show: false,
        //         },
        //     },
        //     xaxis: {
        //         categories: [],
        //         axisBorder: {
        //             show: false,
        //         },
        //         axisTicks: {
        //             show: false,
        //         },
        //     },
        //     responsive: [
        //         {
        //             breakpoint: 1661,
        //             options: {
        //                 chart: {
        //                     height: 420,
        //                 }
        //             }
        //         },
        //         {
        //             breakpoint: 1366,
        //             options: {
        //                 chart: {
        //                     height: 435,
        //                 }
        //             }
        //         },
        //         {
        //             breakpoint: 1101,
        //             options: {
        //                 chart: {
        //                     height: 250,
        //                 }
        //             }
        //         },
        //         {
        //             breakpoint: 1007,
        //             options: {
        //                 chart: {
        //                     height: 435,
        //                 }
        //             }
        //         }
        //     ]
        // };

        // var rentStatusChart = new ApexCharts(document.querySelector("#rentStatusContainer"), rentStatusOptions);
        // rentStatusChart.render();

        // $.ajax({
        //     url: '/Home/GetRentStatus',
        //     dataType: 'json',
        //     success: function (data) {
        //         rentStatusChart.updateOptions({
        //             series: data.Series,
        //             xaxis: {
        //                 categories: data.Categories
        //             }
        //         });
        //     },
        //     error: function (xhr, status, error) {
        //         console.error('Error fetching data:', error);
        //     }
        // });



        var rentStatusOptions = {
            series: [],
            chart: {
                type: 'bar',
                height: 350,
                stacked: true,
                stackType: '100%',
                toolbar: {
                    show: false,
                }
            },
            plotOptions: {
                bar: {
                    horizontal: false,
                    columnWidth: '20px',
                    borderRadius: 5,
                },
            },
            grid: {
                show: false,
                xaxis: {
                    lines: {
                        show: false
                    }
                }
            },
            dataLabels: {
                enabled: false,
            },
            fill: {
                opacity: 1
            },
            legend: {
                show: false
            },
            states: {
                hover: {
                    filter: {
                        type: 'darken',
                        value: 1,
                    }
                }
            },
            colors: ['#008FFB', '#00E396'],
            yaxis: {
                tickAmount: 3,
                min: 0,
                max: 800,
                axisBorder: {
                    show: false,
                },
                axisTicks: {
                    show: false,
                },
            },
            xaxis: {
                categories: [],
                axisBorder: {
                    show: false,
                },
                axisTicks: {
                    show: false,
                },
            },
            responsive: [
                {
                    breakpoint: 1661,
                    options: {
                        chart: {
                            height: 420,
                        }
                    }
                },
                {
                    breakpoint: 1366,
                    options: {
                        chart: {
                            height: 435,
                        }
                    }
                },
                {
                    breakpoint: 1101,
                    options: {
                        chart: {
                            height: 250,
                        }
                    }
                },
                {
                    breakpoint: 1007,
                    options: {
                        chart: {
                            height: 435,
                        }
                    }
                }
            ]
        };

        var rentStatusChart = new ApexCharts(document.querySelector("#rentStatusContainer"), rentStatusOptions);
        rentStatusChart.render();

        // Fetch data from server and update the chart
        $.ajax({
            url: '/Home/GetRentStatus',
            dataType: 'json',
            success: function (data) {
                // Update chart with new data
                rentStatusChart.updateOptions({
                    series: data.Series,
                    xaxis: {
                        categories: data.Categories
                    }
                });
            },
            error: function (xhr, status, error) {
                console.error('Error fetching data:', error);
            }
        });

        //Rent Status  End
        //Rent Status  End


        //Kanban board start
        //Kanban board start
        var kanban2 = new jKanban({
            element: "#workOrderTasks",
            gutter: "15px",
            click: function (el) {
                alert(el.innerHTML);
            },
            dropEl: function (el, target, source, sibling) {
                console.log("Item dropped from ", source.parentElement.dataset.id, " to ", target.parentElement.dataset.id);
            },
            boards: []
        });

        $.ajax({
            url: '/Home/GetKanbanData',
            dataType: 'json',
            success: function (data) {
                data.boards.forEach(board => {
                    kanban2.addBoards([board]);
                });
            },
            error: function (xhr, status, error) {
                console.error('Error fetching data:', error);
            }
        });
        //Kanban board end
        //Kanban board end


        // Set organization name if available in local storage
        var organizationName = localStorage.getItem('organizationName');
        if (organizationName) {
            $("#TittlName").text(organizationName);
        }
    });
</script>

  

