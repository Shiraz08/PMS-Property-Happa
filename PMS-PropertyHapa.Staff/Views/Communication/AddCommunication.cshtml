@using PMS_PropertyHapa.Models.DTO;
@model PMS_PropertyHapa.Models.DTO.CommunicationDto;
@{
    ViewData["Title"] = "AddCommunication";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>

    <style>
        .square-card {
            width: 150px;
            height: 150px;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            transition: transform 0.2s;
        }

        .selection-card.active .square-card {
            border-color: #007bff;
            background-color: #e7f0ff;
            transform: scale(1.05);
        }

        .d-none {
            display: none;
        }



        .progressbar {
            position: relative;
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
            overflow: hidden;
        }

        .progress-line {
            position: absolute;
            height: 2px;
            background-color: #007bff;
            top: 50%;
            left: 0;
            z-index: 0;
            width: 0%;
        }


        .progress-indicator {
            z-index: 1;
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

            .progress-indicator span {
                display: flex;
                justify-content: center;
                align-items: center;
                width: 30px;
                height: 30px;
                border-radius: 50%;
                background-color: #ddd;
                color: #000;
            }

            .progress-indicator.active span {
                background-color: #007bff;
                color: #fff;
            }

            .progress-indicator p {
                margin-top: 5px;
                font-size: 12px;
            }

    </style>

</head>


<div class="page-body">

    <div class="container-fluid">
        <div class="page-title">
            <div class="row align-items-center justify-content-between">
                <!-- Adjusted for alignment and distribution -->
                <div class="col-auto">
                    <!-- col-auto adjusts the width to its content -->
                    <h3>Communication</h3>
                </div>
                <div class="col-auto">
                    <!-- col-auto adjusts the width to its content -->
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-0">
                            <!-- mb-0 removes the bottom margin -->
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "Communication")">
                                    <i data-feather="home"></i>
                                </a>
                            </li>
                            <li class="breadcrumb-item">Communication</li>
                            <li class="breadcrumb-item active" aria-current="page">Add/Update</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>


    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-body">
                        <form id="communicationForm" method="post" enctype="multipart/form-data">
                            <div id="progressbar" class="progressbar">
                                <div class="progress-indicator active" data-step="1"><span>1</span><p>Properties/Units</p></div>
                                <div class="progress-indicator" data-step="2"><span>2</span><p>Delivery Method</p></div>
                                <div class="progress-indicator" data-step="3"><span>3</span><p>Announcement Content</p></div>
                                <div class="progress-indicator" data-step="4"><span>4</span><p>Review & Confirm</p></div>
                                <div class="progress-line" id="progressLine"></div>
                            </div>
                            <!-- Fields -->
                            <fieldset id="step1" class="step-section active">
                                <h3>Properties/Units</h3>

                                <div class="container">
                                    <div class="row d-flex justify-content-center">
                                        <!-- All Properties -->
                                        <div class="col-auto selection-card" data-target="propertiesDropdown" data-show="false">
                                            <label class="card square-card border p-3">
                                                <input name="propertiesRadioBtn" value="all" type="radio" hidden>
                                                <div class="radio-details">
                                                    <i class="fa fa-building fa-2x mb-2"></i>
                                                    <p class="fs-6 text-dark fw-bold mb-0">All Properties</p>
                                                </div>
                                            </label>
                                        </div>

                                        <!-- Some Properties -->
                                        <div class="col-auto selection-card" data-target="propertiesDropdown" data-show="true">
                                            <label class="card square-card border p-3">
                                                <input name="propertiesRadioBtn" value="some" type="radio" hidden>
                                                <div class="radio-details">
                                                    <i class="fa fa-home fa-2x mb-2"></i>
                                                    <p class="fs-6 text-dark fw-bold mb-0">Some Properties</p>
                                                </div>
                                            </label>
                                        </div>
                                    </div>

                                    <div id="propertiesDropdown" class="row d-flex justify-content-center mt-3 d-none">
                                        <div class="col-4">
                                            <label for="announcementProperties">Select Properties <span class="text-danger">*</span></label>
                                            <div id="propertyCount" class="selected-count">0 Selected</div>
                                            <select id="announcementProperties" multiple name="announcementProperties" class="form-control select2" required></select>
                                        </div>
                                    </div>

                                    

                                    <div class="container mt-4">
                                        <!-- Tenant Selection -->
                                        <div class="row d-flex justify-content-center">
                                            <!-- All Tenants -->
                                            <div class="col-auto selection-card" data-target="tenantsDropdown" data-show="false">
                                                <label class="card square-card border p-3">
                                                    <input name="tenantsRadioBtn" value="all" type="radio" hidden>
                                                    <div class="radio-details">
                                                        <i class="fa fa-users fa-2x mb-2"></i>
                                                        <p class="fs-6 text-dark fw-bold mb-0">All Tenants</p>
                                                    </div>
                                                </label>
                                            </div>

                                            <!-- Some Tenants -->
                                            <div class="col-auto selection-card" data-target="tenantsDropdown" data-show="true">
                                                <label class="card square-card border p-3">
                                                    <input name="tenantsRadioBtn" value="some" type="radio" hidden>
                                                    <div class="radio-details">
                                                        <i class="fa fa-user fa-2x mb-2"></i>
                                                        <p class="fs-6 text-dark fw-bold mb-0">Some Tenants</p>
                                                    </div>
                                                </label>
                                            </div>
                                        </div>

                                        <div id="tenantsDropdown" class="row d-flex justify-content-center mt-3 d-none">
                                            <div class="col-4">
                                                <label for="announcementTenants">Select Tenants <span class="text-danger">*</span></label>
                                                <div id="tenantCount" class="selected-count">0 Selected</div>
                                                <select id="announcementTenants" multiple name="announcementTenants" class="form-control select2" required></select>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <input type="hidden" id="propertyIds" name="PropertyIds" />
                                <input type="hidden" id="tenantIds" name="TenantIds" />
                                <input type="hidden" id="IsByEmail" name="IsByEmail" value="false">
                                <input type="hidden" id="IsByText" name="IsByText" value="false">
                                <input type="hidden" id="IsShowCommunicationInTenantPortal" name="IsShowCommunicationInTenantPortal" value="false">
                                <input type="hidden" id="Status" name="Status" value="true">
                                <input type="hidden" id="IsDeleted" name="IsDeleted" value="false">
                                <input type="hidden" id="Communication_File" name="Communication_File" value="">
                                <input type="hidden" id="communicationId" name="Communication_Id" value="@Model?.Communication_Id" />

                            </fieldset>


                            <fieldset id="step2" class="step-section">
                                <h3 class="mb-4">Delivery Method</h3>
                                <div class="row align-items-center">
                                    <!-- Email Switch -->
                                    <div class="form-check form-switch switchBtn gap-2" style="align-items: center; gap: 10px; display: flex;">
                                        <input class="form-check-input" style="width: 2rem; height: 1.2rem; cursor: pointer;" type="checkbox" id="emailSwitch">
                                        <p class="form-check-label fs-6 text-dark fw-bold" for="emailSwitch" style="margin-bottom: 0;">Send now by email</p>
                                    </div>
                                    <div id="deliveryEmailDiv" class="d-none">
                                        <p id="deliveryMessage" class="fs-6 text-dark">This announcement will be sent immediately to all tenants with an email address on file. We will track delivery and open rates for you.</p>
                                    </div>

                                    <!-- Text Message Switch -->
                                    <div class="form-check form-switch switchBtn gap-2" style="align-items: center; gap: 10px; display: flex;">
                                        <input class="form-check-input" style="width: 2rem; height: 1.2rem; cursor: pointer;" type="checkbox" id="textMessageSwitch">
                                        <p class="form-check-label fs-6 text-dark fw-bold" for="textMessageSwitch" style="margin-bottom: 0;">Send now by text message</p>
                                    </div>
                                    <div id="deliveryTextDiv" class="d-none">
                                        <p class="fs-6 text-dark">This announcement will be sent immediately to all tenants with a mobile phone number on file and will use 1 communication credit per text message sent.</p>
                                        <p class="fs-6 text-dark">Limit 140 characters.</p>
                                    </div>

                                    <!-- Tenant Portal Switch -->
                                    <div class="form-check form-switch switchBtn gap-2" style="align-items: center; gap: 10px; display: flex;">
                                        <input class="form-check-input" style="width: 2rem; height: 1.2rem; cursor: pointer;" type="checkbox" id="tenantPortalSwitch">
                                        <p class="form-check-label fs-6 text-dark fw-bold" for="tenantPortalSwitch" style="margin-bottom: 0;">Show this announcement in the tenant portal</p>
                                    </div>
                                    <div id="deliveryTenantPortalDiv" class="d-none">
                                        <p class="fs-6 text-dark">This announcement will be posted in the announcement section of the tenant portal</p>
                                        <div class="form-check">
                                            <input class="" type="checkbox" id="homeScreenSwitch">
                                            <label class="fs-6 text-dark" for="homeScreenSwitch">Also post this announcement on the home screen of the tenant portal</label>
                                        </div>
                                        <div class="form-check">
                                            <input class="" type="checkbox" id="removePortalSwitch">
                                            <label class="fs-6 text-dark" for="removePortalSwitch">Remove this announcement from tenants portal feed on this date</label>
                                        </div>
                                        <div id="removeFeedDateDiv" class="form-group col-4 d-none">
                                            <label for="removeFeedDate" class="fs-6 text-dark">Date</label>
                                            <input type="date" class="form-control" id="removeFeedDate">
                                        </div>
                                    </div>
                                </div>
                            </fieldset>



                            <fieldset id="step3" class="step-section">
                                <h3>Announcement Content</h3>
                                <div class="mb-3">
                                    <label for="announcementSubject" class="form-label">Subject</label>
                                    <input type="text" class="form-control" id="announcementSubject" name="Subject" required placeholder="Enter the subject of your announcement">
                                </div>
                                <div class="mb-3">
                                    <label for="announcementMessage" class="form-label">Message</label>
                                    <textarea class="form-control" id="announcementMessage" name="Message" rows="4" required placeholder="Write your message here"></textarea>
                                </div>
                                <div class="mb-3">
                                    <label for="documentFiles" class="form-label">Attach Files</label>
                                    <input type="file" class="form-control" id="documentFiles" name="DocumentFiles" multiple>
                                    <div id="filesHelp" class="form-text">You can select multiple files to attach with your announcement.</div>
                                </div>
                            </fieldset>


                            <fieldset id="step4" class="step-section">
                                <h3>Review and Confirm</h3>
                                <div class="form-card mt-3">
                                    <div class="row">
                                        <div class="col-12 mb-3">
                                            <p class="fs-6 text-dark">This announcement will be delivered via:</p>
                                        </div>
                                        <div id="iconContainer" class="col-12 d-flex flex-column align-items-start">
                                            <div id="emailDeliveryIcon" style="display: none;"><i class="fa fa-envelope fa-2x text-primary mb-2" title="Email"></i> Email</div>
                                            <div id="textMessageDeliveryIcon" style="display: none;"><i class="fa fa-phone fa-2x text-success mb-2" title="Text Message"></i> Text Message</div>
                                            <div id="tenantPortalDeliveryIcon" style="display: none;"><i class="fa fa-globe fa-2x text-info mb-2" title="Tenant Portal"></i> Tenant Portal</div>
                                        </div>
                                    </div>
                                    <br><br>
                                </div>
                            </fieldset>
                        



                            <div class="form-navigation float-end">
                                <button type="button" class="btn btn-danger btn-previous" style="display: none;">Previous</button>
                                <button type="button" class="btn btn-success btn-next">Next</button>
                                <button type="button" class="btn btn-success btn-submit" style="display: none;">Submit</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


<script>

    var currentStep = 1;
    const totalSteps = $('.progress-indicator').length;
    var isShowCommunicationInTenantPortal = @Html.Raw(Json.Serialize(Model?.IsShowCommunicationInTenantPortal));
    var isByEmail = @Html.Raw(Json.Serialize(Model?.IsByEmail));
    var isByText = @Html.Raw(Json.Serialize(Model?.IsByText));
    var subject = @Html.Raw(Json.Serialize(Model?.Subject));
    var message = @Html.Raw(Json.Serialize(Model?.Message));
    var propertyIds = @Html.Raw(Json.Serialize(Model?.PropertyIds?.Split(',').Select(int.Parse).ToArray() ?? new int[0]));
    var tenantIds = @Html.Raw(Json.Serialize(Model?.TenantIds?.Split(',').Select(int.Parse).ToArray() ?? new int[0]));
    var hasPropertiesSome = propertyIds.length > 0;
    var hasTenatsSome = tenantIds.length > 0;
    var isEditMode = $('#communicationId').val() && $.isNumeric($('#communicationId').val()) && Number($('#communicationId').val()) > 0;

    $(document).ready(function () {
        // Initialize form elements with these values


        
        console.log("propertyIds")
        console.log(propertyIds)
        console.log("tenantIds")
        console.log(tenantIds)

        $('#emailSwitch').prop('checked', isByEmail);
        $('#textMessageSwitch').prop('checked', isByText);
        $('#tenantPortalSwitch').prop('checked', isShowCommunicationInTenantPortal);
        $('#announcementSubject').val(subject);
        $('#announcementMessage').val(message);
        // $('#announcementProperties').val(propertyIds).trigger('change');
        // $('#announcementTenants').val(tenantIds).trigger('change');

        // Trigger the radio button to "Some" if there are corresponding propertyIds or tenantIds
        if (hasPropertiesSome) {
            $('input[name="propertiesRadioBtn"][value="some"]').prop('checked', true);
        } else {
            $('input[name="propertiesRadioBtn"][value="all"]').prop('checked', true);
        }

        if (hasTenatsSome) {
            $('input[name="tenantsRadioBtn"][value="some"]').prop('checked', true);
        } else {
            $('input[name="tenantsRadioBtn"][value="all"]').prop('checked', true);
        }


        // Fetch Properties
        $.ajax({
            url: '@Url.Action("GetProperties", "Communication")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var propertiesDropdown = document.getElementById('announcementProperties');
                propertiesDropdown.innerHTML = ''; // Clear existing options
                data.forEach(function (item) {
                    var option = new Option(item.BuildingNo + " - " + item.BuildingName, item.AssetId);
                    propertiesDropdown.appendChild(option);
                });
                // Set the selected values after the dropdown is populated
                $('#announcementProperties').val(propertyIds).trigger('change');
            }
        });

        // Fetch Tenants
        $.ajax({
            url: '@Url.Action("GetTenantsDll", "Communication")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var tenantsDropdown = document.getElementById('announcementTenants');
                tenantsDropdown.innerHTML = ''; // Clear existing options
                data.forEach(function (item) {
                    var option = new Option(item.FirstName + ' ' + item.LastName, item.TenantId);
                    tenantsDropdown.appendChild(option);
                });
                // Set the selected values after the dropdown is populated
                $('#announcementTenants').val(tenantIds).trigger('change');
            }
        });

        $('#textMessageSwitch').change(function () {
            if ($(this).is(':checked')) {
                checkTwilioCredentials();
                $('#deliveryTextDiv').removeClass('d-none');
            } else {
                $('#deliveryTextDiv').addClass('d-none');
            }
        });

        $('#emailSwitch').change(function () {
            if ($(this).is(':checked')) {
                $('#deliveryEmailDiv').removeClass('d-none');
            } else {
                $('#deliveryEmailDiv').addClass('d-none');
            }
        });

        $('#tenantPortalSwitch').change(function () {
            if ($(this).is(':checked')) {
                $('#deliveryTenantPortalDiv').removeClass('d-none');
            } else {
                $('#deliveryTenantPortalDiv').addClass('d-none');
            }
        });

        $('#removePortalSwitch').change(function () {
            if ($(this).is(':checked')) {
                $('#removeFeedDateDiv').removeClass('d-none');
            } else {
                $('#removeFeedDateDiv').addClass('d-none');
            }
        });

    });


    function checkTwilioCredentials() {
        var userId = localStorage.getItem('userId');
        if (!userId) {
            Swal.fire({
                icon: 'warning',
                title: 'User ID Not Found',
                text: 'No user ID found in local storage.',
                footer: '<a href="/views/Communication/Login.razor">Log in here</a>'
            });
            $('#textMessageSwitch').prop('checked', false);
            return;
        }

        $.ajax({
            url: '@Url.Action("GetUserTwilioCredentials", "Communication")',
            type: 'GET',
            data: { userId: userId },
            success: function (response) {
                if (!response.AccountSid || !response.AuthToken || !response.TiwiloPhone) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Incomplete Tiwilio Credentials',
                        text: 'Please update your Twilio credentials to proceed.',
                        footer: '<a href="/Communication/TiwiloView">Update Twilio Credentials</a>'
                    });
                    $('#textMessageSwitch').prop('checked', false);
                }
            },
            error: function (xhr, status, error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error Fetching Credentials',
                    text: 'There was a problem fetching your credentials.',
                    footer: 'Please try again or contact support if the problem persists.'
                });
                $('#textMessageSwitch').prop('checked', false);
            }
        });
    }


    $(document).ready(function () {
    
        function updatePropertyCount() {
            var propertyCount = $('#announcementProperties').val() ? $('#announcementProperties').val().length : 0;
            $('#propertyCount').text(propertyCount + ' Selected');
        }

     
        function updateTenantCount() {
            var tenantCount = $('#announcementTenants').val() ? $('#announcementTenants').val().length : 0;
            $('#tenantCount').text(tenantCount + ' Selected');
        }

        $('#announcementProperties').on('change', function () {
            updatePropertyCount();
        });

        $('#announcementTenants').on('change', function () {
            updateTenantCount();
        });

        $('#selectAllProperties').on('click', function () {
            $('#announcementProperties option').prop('selected', true);
            $('#announcementProperties').trigger('change');
        });

        $('#selectAllTenants').on('click', function () {
            $('#announcementTenants option').prop('selected', true);
            $('#announcementTenants').trigger('change');
        });
    });

    $(document).ready(function () {
      
        function updateSelectedOptions(selectedIds, dropdownId) {
            $(dropdownId).val(selectedIds.split(',')).trigger('change');
        }

        function updateCheckboxStatus(isChecked, checkboxId) {
            $(checkboxId).prop('checked', isChecked);
        }

        function populateFields(communication) {
           
            updateSelectedOptions(communication.PropertyIds, '#announcementProperties');

            updateSelectedOptions(communication.TenantIds, '#announcementTenants');

        
            updateCheckboxStatus(communication.SendByEmail, '#emailSwitch');
            updateCheckboxStatus(communication.SendByTextMessage, '#textMessageSwitch');
            updateCheckboxStatus(communication.ShowInTenantPortal, '#tenantPortalSwitch');
            updateCheckboxStatus(communication.RemoveFromPortalOnDate, '#removePortalSwitch');
        }

        if (typeof Communication !== 'undefined') {
            populateFields(Communication);
        }
    });



    function updateProgress(step) {
        $('.progress-indicator').removeClass('active').slice(0, step).addClass('active');
        let progressWidth = ((step - 1) / (totalSteps - 1)) * 100;
        $('#progressLine').css('width', progressWidth + '%');

        $('.step-section').hide();
        $('#step' + step).show();

        if (step === totalSteps) {
            $('.btn-previous').show();
            $('.btn-next').hide();
            $('.btn-submit').show();
        } else {
            $('.btn-previous').toggle(step > 1);
            $('.btn-next').show().removeClass('btn-submit').addClass('btn-next');
            $('.btn-submit').hide();
        }
    }

    $(document).on('click', '.btn-next', function () {
        if (validateStep(currentStep)) {
            console.log("currentStep")
            console.log(currentStep)
            if (currentStep < totalSteps) {
                currentStep++;
                updateProgress(currentStep);
            }
        } else {
            showValidationError();
        }
    });

    $('.btn-previous').on('click', function () {
        if (currentStep > 1) {
            currentStep--;
            updateProgress(currentStep);
        }
    });

    $(document).on('click', '.btn-submit', function () {

        if (validateStep(currentStep)) {
            $('#communicationForm').submit();
        } else {
            
        }
    });


    updateProgress(currentStep);


    $(document).ready(function () {
        function toggleDropdownVisibility() {
            if ($('input[name="propertiesRadioBtn"]:checked').val() === "some") {
                $('#propertiesDropdown').removeClass('d-none');
            } else {
                $('#propertiesDropdown').addClass('d-none');
            }

            if ($('input[name="tenantsRadioBtn"]:checked').val() === "some") {
                $('#tenantsDropdown').removeClass('d-none');
            } else {
                $('#tenantsDropdown').addClass('d-none');
            }
        }
        toggleDropdownVisibility();

        $('input[name="propertiesRadioBtn"]').change(function () {
            toggleDropdownVisibility();
        });

        $('input[name="tenantsRadioBtn"]').change(function () {
            toggleDropdownVisibility();
        });
    });

    $(document).ready(function () {

        function updateHiddenInputs() {
            var propertyIds = $('#announcementProperties').val().join(',');
            var tenantIds = $('#announcementTenants').val().join(',');
            $('#propertyIds').val(propertyIds);
            $('#tenantIds').val(tenantIds);
        }


        $('#announcementProperties, #announcementTenants').change(function () {
            updateHiddenInputs();
        });


        updateHiddenInputs();
    });


    $(document).ready(function () {

        // // Function to update selected property count
        // function updatePropertyCount() {
        //     var selectedProperties = document.getElementById('announcementProperties').selectedOptions;
        //     var propertyCount = selectedProperties ? selectedProperties.length : 0;
        //     document.getElementById('propertyCount').textContent = propertyCount + ' Selected';
        // }

        // // Function to update selected tenant count
        // function updateTenantCount() {
        //     var selectedTenants = document.getElementById('announcementTenants').selectedOptions;
        //     var tenantCount = selectedTenants ? selectedTenants.length : 0;
        //     document.getElementById('tenantCount').textContent = tenantCount + ' Selected';
        // }

        // // Attach change event listeners to announcementProperties and announcementTenants
        // document.getElementById('announcementProperties').addEventListener('change', updatePropertyCount);
        // document.getElementById('announcementTenants').addEventListener('change', updateTenantCount);

    });



    document.querySelectorAll('.selection-card').forEach(card => {
        card.addEventListener('click', function () {
            let target = this.getAttribute('data-target');
            let show = this.getAttribute('data-show') === 'true';

            document.querySelectorAll('.selection-card').forEach(c => {
                if (c.getAttribute('data-target') === target) {
                    c.classList.remove('active');
                }
            });

            this.classList.add('active');

            if (show) {
                document.getElementById(target).classList.remove('d-none');
            } else {
                document.getElementById(target).classList.add('d-none');
            }

            this.querySelector('input[type="radio"]').click();
        });
    });


    $(document).ready(function () {
        $('#communicationForm').on('submit', function (e) {
            e.preventDefault();

            var userId = localStorage.getItem('userId');
            var formData = new FormData(this);
            formData.append('UserID', userId);
            var url = '@Url.Action("CreateCommunication", "Communication")';
            var communicationId = $('#communicationId').val();

            if (communicationId) {
                url = '@Url.Action("UpdateCommunication", "Communication")' + '?Communication_Id=' + communicationId;
            }

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.success) {

                        Swal.fire({
                            icon: 'success',
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            toast: true,
                            width: '300px',
                            padding: '0.5rem',
                            title: 'Communication saved Successfully'
                        });

                        window.location.href = '/Communication/Index';
                    } else {
                    }
                },
                error: function (xhr, status, error) {

                    Swal.fire({
                        icon: 'error',
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        toast: true,
                        width: '300px',
                        padding: '0.5rem',
                        title: 'An error occured while processing your request'
                    });
                    console.error(error);
                }
            });
        });
    });



    // $(document).on('click', '.btn-next', function () {
    //     if (currentStep < totalSteps) {

    //         if (validateStep(currentStep)) {
    //             currentStep++;
    //             updateProgress(currentStep);
    //         } 
            
    //     }
    // });


    function validateStep(step) {
        switch (step) {
            case 1:
                return validateStep1();
            case 2:
                return validateStep2();
            case 3:
                return validateStep3();
            default:
                return true;
        }
    }

    function validateStep1() {
        var hasPropertiesSome = $('input[name="propertiesRadioBtn"]:checked').val() === 'some';
        var hasTenantsSome = $('input[name="tenantsRadioBtn"]:checked').val() === 'some';

        var propertiesValue = $('#announcementProperties').val();
        var tenantsValue = $('#announcementTenants').val();

        var propertiesValid = !hasPropertiesSome || (hasPropertiesSome && propertiesValue.length > 0);
        var tenantsValid = !hasTenantsSome || (hasTenantsSome && tenantsValue.length > 0);

        return propertiesValid && tenantsValid;
    }

    function validateStep2() {
        return $('#emailSwitch').is(':checked') || $('#textMessageSwitch').is(':checked') || $('#tenantPortalSwitch').is(':checked');
    }

    function validateStep3() {
        var subject = $('#announcementSubject').val();
        var message = $('#announcementMessage').val();
        return subject && message;
    }

    function showValidationError() {
        Swal.fire({
            icon: 'error',
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            toast: true,
            width: '300px',
            padding: '0.5rem',
            title: 'Please fill in all required fields before moving to the next step.'
        });
    }


    function updateStep4DeliveryOptions() {
        $('#emailDeliveryIcon').toggle($('#emailSwitch').is(':checked'));
        $('#textMessageDeliveryIcon').toggle($('#textMessageSwitch').is(':checked'));
        $('#tenantPortalDeliveryIcon').toggle($('#tenantPortalSwitch').is(':checked'));
    }

    $('#emailSwitch, #textMessageSwitch, #tenantPortalSwitch').change(updateStep4DeliveryOptions);


    $(document).ready(function () {
        updateStep4DeliveryOptions();
    });


    function convertFilesToBase64(files, callback) {
        let base64Strings = [];
        let filesRead = 0;

        Array.from(files).forEach(file => {
            const reader = new FileReader();

            reader.onload = function (e) {
                base64Strings.push(e.target.result);
                filesRead++;

                if (filesRead === files.length) {
                    callback(base64Strings); 
                }
            };

            reader.readAsDataURL(file); 
        });
    }

    $('#documentFiles').change(function () {
        convertFilesToBase64(this.files, function (base64Strings) {
         
            $('#Communication_File').val(base64Strings.join(',')); 
        });
    });


    $(document).ready(function () {
       
        $('#emailSwitch').change(function () {
            $('#IsByEmail').val($(this).is(':checked'));
        });

        $('#textMessageSwitch').change(function () {
            $('#IsByText').val($(this).is(':checked'));
        });

        $('#tenantPortalSwitch').change(function () {
            $('#IsShowCommunicationInTenantPortal').val($(this).is(':checked'));
        });

    });

    $('#emailSwitch').trigger('change');
    $('#textMessageSwitch').trigger('change');
    $('#tenantPortalSwitch').trigger('change');

</script>


