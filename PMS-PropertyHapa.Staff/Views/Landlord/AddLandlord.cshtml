@model PMS_PropertyHapa.Models.DTO.OwnerDto

@{
    ViewData["Title"] = "Add/Edit Landlord";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-12 col-sm-6">
                    <h3>@(Model?.OwnerId == null ? "Add Landlord" : "Edit Landlord")</h3>
                </div>
                <div class="col-12 col-sm-6">
                    <ol class="breadcrumb">
                        @if (Model?.OwnerId == null)
                        {
                            <li class="breadcrumb-item"><a href="@Url.Action("AddLandlord", "Landlord")"><i data-feather="home"></i></a></li>
                        }
                        else
                        {
                            <li class="breadcrumb-item"><a href="@Url.Action("EditLandlord", "Landlord")"><i data-feather="home"></i></a></li>
                        }


                        <li class="breadcrumb-item">Owner</li>
                        <li class="breadcrumb-item active">@(Model?.OwnerId == null ? "Add Landlord" : "Edit Landlord")</li>
                    </ol>
                </div>
            </div>
        </div>
        <div class="edit-profile">
            <div class="row">
                <form id="tenantForm" method="post" enctype="multipart/form-data">
                    <div class="d-flex">
                        <div class="col-xl-3 d-inline-block">
                            <!-- Profile picture card-->
                            <div class="card mb-4 mb-xl-0">
                                <div class="card-header">Profile Picture</div>
                                <div class="card-body text-center">
                                    <input type="hidden" value="image" name="SaveType" id="SaveType" />
                                    <img class="img-account-profile2 rounded-circle mb-2"
                                         src="@(string.IsNullOrEmpty(Model?.Picture) ? "http://bootdey.com/img/Content/avatar/avatar1.png" : $"{Model?.Picture}")"
                                         alt="" style="width: 140px;">
                                    <div class="font-italic text-muted mb-4"></div>
                                    @Html.EditorFor(model => model.PictureUrl, new { htmlAttributes = new {  @id="PictureUrl",@class = "btn btn-primary", @type="file", @accept="image/*", @required="required", @style="width: 219px;"} })
                                </div>
                            </div>

                        </div>
                        <div class="col-xl-9 d-inline-block">
                            <!-- Tenant Information -->
                            <div class="card">
                                <div class="card-header pb-0">
                                    <h4 class="card-title mb-0">General Information</h4>
                                    <div class="card-options"><a class="card-options-collapse" href="#" data-bs-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a><a class="card-options-remove" href="#" data-bs-toggle="card-remove"><i class="fe fe-x"></i></a></div>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <input type="hidden" id="DocumentBase64" name="Document">
                                        <input type="hidden" id="PictureBase64" name="Picture">
                                        <input type="hidden" id="OrganizationLogoBase64" name="OrganizationLogo">
                                        <input type="hidden" id="OrganizationIconBase64" name="OrganizationIcon">
                                        <input type="hidden" id="OwnerId" name="OwnerId" value="@Model?.OwnerId" />
                                        <!-- First Name -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="FirstName" class="form-label">First Name</label>
                                                <input type="text" class="form-control" id="FirstName" name="FirstName" value="@Model?.FirstName" pattern="[A-Za-z]+" required />
                                            </div>
                                        </div>
                                        <!-- Last Name -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="LastName" class="form-label">Last Name</label>
                                                <input type="text" class="form-control" id="LastName" name="LastName" value="@Model?.LastName" pattern="[A-Za-z]+" required />
                                            </div>
                                        </div>
                                        <!-- Middle Name -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="MiddleName" class="form-label">Middle Name</label>
                                                <input type="text" class="form-control" id="MiddleName" name="MiddleName" value="@Model?.MiddleName" pattern="[A-Za-z]+" required />
                                            </div>
                                        </div>
                                        <!-- Gender -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Gender" class="form-label">Gender</label>
                                                <select class="form-control" id="Gender" name="Gender" required>
                                                    <option value="">Select Gender</option>
                                                    <option value="Male">Male</option>
                                                    <option value="Female">Female</option>
                                                    <option value="Other" >Other</option>
                                                </select>

                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label class="form-check-label" for="toggleOrgInfo">Organization Info</label>
                                                <div class="form-check form-switch mt-2">
                                                    <input class="form-check-input" type="checkbox" id="toggleOrgInfo">
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Organization Name (Initially Hidden) -->
                                        <div class="col-sm-6 col-md-3 organization-field" style="display: none;">
                                            <div class="mb-3">
                                                <label for="OrganizationName" class="form-label">Organization Name</label>
                                                <input type="text" class="form-control" id="OrganizationName" value="@Model?.OrganizationName" name="OrganizationName">
                                            </div>
                                        </div>

                                        <!-- Organization Description (Initially Hidden) -->
                                        <div class="col-sm-6 col-md-3 organization-field" style="display: none;">
                                            <div class="mb-3">
                                                <label for="OrganizationDescription" class="form-label">Organization Description</label>
                                                <input type="text" class="form-control" id="OrganizationDescription" value="@Model?.OrganizationDescription" name="OrganizationDescription">
                                            </div>
                                        </div>

                                        <!-- Organization Icon File Upload (Initially Hidden) -->
                                        <div class="col-sm-6 col-md-3 organization-field" style="display: none;">
                                            <div class="mb-3">
                                                <label for="OrganizationIconFile" class="form-label">Organization Icon</label>
                                                <input type="file" class="form-control" id="OrganizationIconFile" name="OrganizationIconFile" accept="image/*">
                                            </div>
                                        </div>

                                        <!-- Organization Logo File Upload (Initially Hidden) -->
                                        <div class="col-sm-6 col-md-3 organization-field" style="display: none;">
                                            <div class="mb-3">
                                                <label for="OrganizationLogoFile" class="form-label">Organization Logo</label>
                                                <input type="file" class="form-control" id="OrganizationLogoFile" name="OrganizationLogoFile" accept="image/*">
                                            </div>
                                        </div>

                                        <!-- Website (Initially Hidden) -->
                                        <div class="col-sm-6 col-md-3 organization-field" style="display: none;">
                                            <div class="mb-3">
                                                <label for="Website" class="form-label">Website</label>
                                                <input type="text" class="form-control" id="Website" value="@Model?.Website" name="Website">
                                            </div>
                                        </div>


                                        <!-- Date of Birth -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="DOB" class="form-label">Date of Birth</label>
                                                <input type="date" class="form-control" id="DOB" name="DOB" value="@Model?.DOB" />
                                            </div>
                                        </div>

                                        <!-- Email Address -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="EmailAddress" class="form-label">Email Address</label>
                                                <input type="email" class="form-control" id="EmailAddress" name="EmailAddress" value="@Model?.EmailAddress" required />
                                                <small class="text-success" id="addAnotherEmail" onclick="toggleEmailField()" style="cursor: pointer;">
                                                    <i class="bi bi-plus-circle"></i> Add another email  +
                                                </small>
                                            </div>
                                        </div>

                                        <!-- Additional Email Address (Initially Hidden) -->
                                        <div class="col-sm-6 col-md-3" id="additionalEmailField" style="display: none;">
                                            <div class="mb-3">
                                                <label for="EmailAddress2" class="form-label">Email Address2</label>
                                                <input type="email" class="form-control" id="EmailAddress2" name="EmailAddress2" required />
                                            </div>
                                        </div>

                                        <!-- Phone Number -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="PhoneNumber" class="form-label">Phone Number</label>
                                                <input type="text" class="form-control" id="PhoneNumber" name="PhoneNumber" value="@Model?.PhoneNumber" required oninput="validateNumberInput(this)" />
                                                <small class="text-success" id="addAnotherPhone" onclick="togglePhoneField()" style="cursor: pointer;">
                                                    <i class="bi bi-plus-circle"></i> Add another phone  +
                                                </small>
                                            </div>
                                        </div>

                                        <!-- Additional Phone Number (Initially Hidden) -->
                                        <div class="col-sm-6 col-md-3" id="additionalPhoneField" style="display: none;">
                                            <div class="mb-3">
                                                <label for="PhoneNumber2" class="form-label">Phone Number2</label>
                                                <input type="text" class="form-control" id="PhoneNumber2" name="PhoneNumber2" required oninput="validateNumberInput(this)" />
                                            </div>
                                        </div>


                                        <!-- Fax -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Fax" class="form-label">Fax</label>
                                                <input type="text" class="form-control" id="Fax" name="Fax" value="@Model?.Fax" required />
                                            </div>
                                        </div>
                                    </div>
                                    <hr />
                                    <br />
                                    <b><h4>Address</h4></b>
                                    <br />
                                    <div class="row">
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Address">Address</label>
                                                <input type="text" class="form-control" id="Address" name="Address" value="@Model?.Address" />
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Address2">Unit/Ap. #</label>
                                                <input type="text" class="form-control" id="Address2" name="Address2" value="@Model?.Address2" />
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Locality">City</label>
                                                <input type="text" class="form-control" id="Locality" name="Locality" value="@Model?.Locality" />
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Region">State / Region</label>
                                                <input type="text" class="form-control" id="Region" name="Region" value="@Model?.Region" />
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="PostalCode">Zip</label>
                                                <input type="text" class="form-control" id="PostalCode" name="PostalCode" value="@Model?.PostalCode" />
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Country">Country</label>
                                                <select class="form-control" id="Country" name="Country">
                                                    <option value="Germany">Germany</option>
                                                </select>
                                            </div>
                                        </div>
                                        <hr />
                                        <br />
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3" onclick="toggleEmergencyContact()" style="cursor: pointer;">
                                                <label for="PostalCode">EMERGENCY CONTACT</label>
                                                <small class="text-success"><i class="bi bi-plus-circle"></i> Add Emergency contact +</small>
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-3" id="emergencyContactField" style="display: none;">
                                            <div class="mb-3">
                                                <label for="EmergencyContactInfo" class="form-label">Emergency Contact Info</label>
                                                <input type="text" class="form-control" id="EmergencyContactInfo" name="EmergencyContactInfo" value="@Model?.EmergencyContactInfo" required />
                                            </div>
                                        </div>
                                        <hr />
                                        <div class="col-sm-12 col-md-12">
                                            <div class="mb-3">
                                                <label for="DocumentFile" class="form-label">Document Upload</label>
                                                <input type="file" class="form-control" id="DocumentFile" name="DocumentFile" accept=".pdf,.xls,.xlsx,.doc,.docx" />
                                            </div>
                                        </div>

                                        <br />
                                        <hr />
                                        <br />
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <button type="button" id="saveButton" class="btn btn-primary">@(Model?.OwnerId == null ? "Add" : "Edit") Owner</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
     function stringToGuid(str) {
        return str.substring(0, 8) + '-' + str.substring(8, 12) + '-' + str.substring(12, 16) + '-' + str.substring(16, 20) + '-' + str.substring(20);
    }


    document.addEventListener('DOMContentLoaded', function () {

        const toggleCheckbox = document.getElementById('toggleOrgInfo');
        toggleCheckbox.addEventListener('change', function () {
            const orgFields = document.querySelectorAll('.organization-field');
            orgFields.forEach(field => {
                field.style.display = this.checked ? 'block' : 'none';
            });
        });


        window.toggleEmergencyContact = function () {
            var emergencyContactField = document.getElementById("emergencyContactField");
            emergencyContactField.style.display = emergencyContactField.style.display === "none" ? "block" : "none";
        };

        window.togglePhoneField = function () {
            var additionalPhoneField = document.getElementById("additionalPhoneField");
            additionalPhoneField.style.display = additionalPhoneField.style.display === "none" ? "block" : "none";
        };

        window.toggleEmailField = function () {
            var additionalEmailField = document.getElementById("additionalEmailField");
            additionalEmailField.style.display = additionalEmailField.style.display === "none" ? "block" : "none";
        };



        // function toggleEmailField() {
        //     var primaryEmail = $("#EmailAddress").val();
        //     var additionalEmail = $("#EmailAddress2").val();
        //     var emailRegex = /^[a-zA-Z0-9._%+-]+&#64;[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
        // }

        const saveButton = document.getElementById('saveButton');
        if (saveButton) {
            saveButton.addEventListener('click', submitTenantForm);
        }
    });

    async function submitTenantForm(event) {
        debugger;
        event.preventDefault();




        const fileInputs = {
            'DocumentFile': 'DocumentBase64',
            'PictureUrl': 'PictureBase64',
            'OrganizationLogoFile': 'OrganizationLogoBase64',
            'OrganizationIconFile': 'OrganizationIconBase64'
        };

        for (const [inputId, outputId] of Object.entries(fileInputs)) {
            const inputFile = document.getElementById(inputId);
            if (inputFile && inputFile.files.length > 0) {
                document.getElementById(outputId).value = await convertFileToBase64(inputFile.files[0]);
            }
        }

        const formElement = document.getElementById('tenantForm');
        var ajaxUrl = $('#OwnerId').val() ? '/Landlord/Update' : '/Landlord/Create';
        const formData = new FormData(formElement);
        Object.keys(fileInputs).forEach(key => formData.delete(key));

        try {
            var userId = localStorage.getItem('userId');
            formData.append('AppTId', userId);
            const response = await fetch(ajaxUrl, {
                method: 'POST',
                body: formData,
                headers: {
                    'Accept': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            });

            if (response.ok) {
                const result = await response.json();
                console.log(result);
                toastr.success('Operation successful');
                window.location.href = '/Landlord/Index';
            } else {
                console.error('Server responded with non-OK status');
                toastr.error('Operation failed. Server responded with an error.');
            }
        } catch (error) {
            console.error('Error submitting form:', error);
            toastr.error('Operation failed. Network error or server is not responding.');
        }
    }

    function convertFileToBase64(file) {
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => resolve(reader.result.split(',')[1]);
            reader.onerror = error => reject(error);
        });
    }

</script>


            <script>
    document.addEventListener('DOMContentLoaded', function () {
        debugger;
        const pictureInput = document.getElementById('PictureUrl');
        const profileImage = document.querySelector('.img-account-profile2');

        pictureInput.addEventListener('change', function (event) {
            if (event.target.files && event.target.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    profileImage.src = e.target.result;
                };

                reader.readAsDataURL(event.target.files[0]);
            }
        });
    });


    document.addEventListener('DOMContentLoaded', function() {
    const pictureInput = document.getElementById('PictureUrl');
    const profileImage = document.querySelector('.img-account-profile2');

    pictureInput.addEventListener('change', function(event) {
        if (event.target.files && event.target.files[0]) {
            var reader = new FileReader();

            reader.onload = function(e) {
                profileImage.src = e.target.result;
            };

            reader.readAsDataURL(event.target.files[0]);
        }
    });
});

            </script>