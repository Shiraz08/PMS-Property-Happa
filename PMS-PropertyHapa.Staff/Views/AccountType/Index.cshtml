@using PMS_PropertyHapa.Staff.Services
@using PMS_PropertyHapa.Staff.Services.IServices
@using System.Security.Claims
@using PMS_PropertyHapa.Models.Entities
@using static PMS_PropertyHapa.Shared.Enum.SD
@model IEnumerable<AccountType>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@inject IPermissionService _permissionService;
@{
    var userId = Context.Request.Cookies["userId"];
    bool addAccountTypePermission = await _permissionService.HasAccess(userId, (int)UserPermissions.AddAccountType);
}
<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-12 col-sm-6">
                    <h3>Account Type</h3>
                </div>
                <div class="col-12 col-sm-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Accounting/Index"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item">Account Type</li>
                        <li class="breadcrumb-item active">List</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid my-4">
        <div class="row">
            <!-- Column 1: Properties Table (80% on lg screens) -->
            <div class="col-xl-12 col-md-12 box-col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        @if (addAccountTypePermission)
                        {
                            <div class="right-side-header">
                                <button class="btn btn-success" id="newAccountTypeBtn">Add Account Type</button>
                            </div>
                        }
                    </div>

                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover text-center display" id="accountTypeTable">
                                <thead class="table-dark">
                                    <tr>
                                        <th scope="col" class="text-center tableHeaderbg">Account Name</th>
                                        <th scope="col" class="text-center tableHeaderbg">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="newAccountTypeModal" tabindex="-1" aria-labelledby="accountTypeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="accountTypeModalLabel">New Account Type</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="accountTypeForm">
                <input type="hidden" value="" id="accountTypeId" />
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="accountTypeName" class="form-label">Account Type *</label>
                        <input type="text" class="form-control" name="accountTypeName" id="accountTypeName" placeholder="Account Type Name" required>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success" id="saveBtn">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.22/css/jquery.dataTables.min.css">

<script>
    $(document).ready(function () {

        $('#accountTypeTable').DataTable({
            "ajax": {
                "url": "/AccountType/GetAccountTypes",
                "type": "GET",
                "dataSrc": ""
            },
            "columns": [
                {
                    "data": "Type",
                    "className": "text-center"
                },
                {
                    "className": "text-center",
                    "data": "AccountTypeId",
                    "render": function (data, type, row, meta) {
                        return `
                                <div class="dropdown-basic">
                                    <div class="dropdown">
                                    @if (addAccountTypePermission)
                                    {
                                        <div class="btn-group mb-0">
                                            <button class="dropbtn btn btn-success" type="button">Action <span><i class="icofont icofont-arrow-down"></i></span></button>
                                            <div class="dropdown-content">
                                                <a class="btn btn-secondary" onclick="editAccountType(${data})">
                                                    <i class="fa fa-edit"></i> Edit
                                                </a>
                                                <a class="btn btn-secondary" onclick="deleteAccountType(${data})">
                                                    <i class="fa fa-trash"></i> Delete
                                                </a>
                                            </div>
                                        </div>
                                    }
                                    </div>
                                </div>
                            `;
                    }
                }
            ]
        });


        $("#newAccountTypeBtn").on("click", function () {
            resetModal();
            $("#accountTypeModalLabel").html("New Account Type");
            $("#newAccountTypeModal").modal('show');
        });

        $('#accountTypeForm').on('submit', function (event) {
            event.preventDefault();

            var formData = {
                AccountTypeId: Number($('#accountTypeId').val()),
                Type: $('#accountTypeName').val(),
            };

            $.ajax({
                url: '@Url.Action("SaveAccountType", "AccountType")',
                type: 'POST',
                data: JSON.stringify(formData),
                contentType: 'application/json',
                beforeSend: function () {
                    $('#saveBtn').prop('disabled', true).text('Saving...');
                },
                success: function (response) {
                    $("#newAccountTypeModal").modal('hide');
                    location.reload();
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                    alert('Failed to save data');
                },
                complete: function () {
                    $('#saveBtn').prop('disabled', false).text('Save');
                }
            });
        });
    });

    function resetModal() {
        $("#newAccountTypeModal form")[0].reset();
    }

    function deleteAccountType(id) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'You will not be able to recover this Account Type!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteAccountType", "AccountType")',
                    type: 'POST',
                    data: { id: id },
                    success: function (res) {
                        if (res.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Account Type deleted successfully',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            location.reload()
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: res.message,
                                text: 'Something went wrong!'
                            });
                        }

                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong!'
                        });
                    },
                });
            }
        });
    }

    function editAccountType(id) {
        $.ajax({
            url: '@Url.Action("GetAccountTypeById", "AccountType")',
            type: 'POST',
            data: { id: id },
            success: function (res) {
                $("#accountTypeModalLabel").html("Edit Account Type");
                $("#accountTypeId").val(res.AccountTypeId);
                $("#accountTypeName").val(res.Type);
                $("#newAccountTypeModal").modal('show');
            },
            error: function (xhr, status, error) {
                console.error('Error:', error);
                alert('Failed to retrieve data');
            },
        });
    }
</script>