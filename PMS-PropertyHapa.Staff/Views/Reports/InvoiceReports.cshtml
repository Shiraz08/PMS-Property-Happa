
@{
    ViewData["Title"] = "InvoiceReports";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<!-- Page Sidebar Ends-->
<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-12 col-sm-6">
                    <h3>Invoice Report</h3>
                </div>
                <div class="col-12 col-sm-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Home/Index"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item">Invoice</li>
                        <li class="breadcrumb-item active">List</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid my-4">
        <div class="row">
            <!-- Column 1: Properties Table (80% on lg screens) -->
            <div class="col-12 col-md-12 mb-4">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0 flex-grow-1 font-weight-bold">Filters</h4>
                    </div>
                    <div class="card-body">
                        <div class="row mt-1 d-flex">
                            <div class="col-lg-4 col-md-4">
                                <div class="row">
                                    <label class="col-sm-12 mb-0 font-weight-bold">Property</label>
                                    <div col-sm-12>
                                        <select id="reportPropertyFilter" multiple name="reportPropertyFilter" class="form-control select2"></select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4">
                                <div class="row">
                                    <label class="col-sm-12 mb-0 font-weight-bold">MoveIn/MoveOut Date</label>
                                    <div class="col-sm-12">
                                        <input type="text" class="form-control" id="createdAtRange" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4">
                                <div class="row">
                                    <label class="col-sm-12 mb-0 font-weight-bold">Invoice Start/End Date</label>
                                    <div class="col-sm-12">
                                        <input type="text" class="form-control" id="createdInvoiceRange" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer text-end d-flex justify-content-end">
                        <button onclick="clearFilters()" type="button" class="btn btn-danger mr-2 font-weight-bold" style="padding-left: 2.75rem  !important; padding-right: 2.75rem  !important;">Clear</button>
                        <button onclick="applyFilters()" type="button" class="btn btn-success font-weight-bold" style="padding-left: 2.75rem  !important; padding-right: 2.75rem  !important;">Apply</button>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-start mb-3">
                            <button id="copyButton" class="btn btn-success mr-1">Copy</button>
                            <button id="csvButton" class="btn btn-success mr-1">CSV</button>
                            <button id="excelButton" class="btn btn-success mr-1">Excel</button>
                            <button id="pdfButton" class="btn btn-success mr-1">PDF</button>
                            <button id="printButton" class="btn btn-success mr-1">Print</button>
                        </div>
                        <div class="table-responsive">
                            <table class="table" id="invoiceReportsTbl">
                                <thead>
                                    <tr>
                                        <th scope="col" class="tableHeaderbg">Invoice</th>
                                        <th scope="col" class="tableHeaderbg">Start Date</th>
                                        <th scope="col" class="tableHeaderbg">End Date</th>
                                        <th scope="col" class="tableHeaderbg">Status</th>
                                        <th scope="col" class="tableHeaderbg">Property</th>
                                        <th scope="col" class="tableHeaderbg">Unit</th>
                                        <th scope="col" class="tableHeaderbg">Rent Charges</th>
                                        <th scope="col" class="tableHeaderbg">Invoice Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.23/jspdf.plugin.autotable.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js"></script>

<script>
    var propertiesIdsList = [];
    var leaseStartDateFilter = null;
    var leaseEndDateFilter = null;
    var invoiceStartDateFilter = null;
    var invoiceEndDateFilter = null;

    $(document).ready(function () {
        initDatePickers();
        initInvoiceDatePickers();
        populateDropDowns();
        loadInvoiceDataTable();
    });

    var initDatePickers = function () {
        $('#createdAtRange').daterangepicker({
            autoUpdateInput: false,
            locale: {
                format: 'MM/DD/YYYY',
                cancelLabel: 'Clear'
            },
            timePicker: false,
            startDate: moment().subtract(30, 'days'),
            endDate: moment().add(1, 'days')
        });

        $('#createdAtRange').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
        });

        $('#createdAtRange').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
        });
    };

    var initInvoiceDatePickers = function () {
        console.log("Initializing date pickers");
        $('#createdInvoiceRange').daterangepicker({
            autoUpdateInput: false,
            locale: {
                format: 'MM/DD/YYYY',
                cancelLabel: 'Clear'
            },
            timePicker: false,
            startDate: moment().subtract(30, 'days'),
            endDate: moment().add(1, 'days')
        });

        $('#createdInvoiceRange').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
        });

        $('#createdInvoiceRange').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
        });
    };

    function populateDropDowns() {
        $.ajax({
            url: '@Url.Action("GetProperties", "Communication")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var vendorPropertyDropdown = document.getElementById('reportPropertyFilter');
                // vendorPropertyDropdown.innerHTML = ''; // Clear existing options
                data.forEach(function (item) {
                    var option = new Option(item.BuildingNo + " - " + item.BuildingName, item.AssetId);
                    vendorPropertyDropdown.appendChild(option);
                });
            }
        });
    }


    function clearFilters() {
        $("#reportPropertyFilter").empty();
        populateDropDowns();
        $("#createdAtRange").val('');
        $("#createdInvoiceRange").val('');
        propertiesIdsList = [];
        leaseStartDateFilter = null;
        leaseEndDateFilter = null;
        invoiceStartDateFilter = null;
        invoiceEndDateFilter = null;
        $("#invoiceReportsTbl tbody").empty();
        loadInvoiceDataTable();
    }
    


    function applyFilters() {
        propertiesIdsList = $("#reportPropertyFilter").val();
        if ($("#createdAtRange").val()) {
            var dates = $("#createdAtRange").val().split('-');
            leaseStartDateFilter = dates[0];
            leaseEndDateFilter = dates[1];
        } else {
            leaseStartDateFilter = null;
            leaseEndDateFilter = null;
        }
        if ($("#createdInvoiceRange").val()) {
            var dates = $("#createdInvoiceRange").val().split('-');
            invoiceStartDateFilter = dates[0];
            invoiceEndDateFilter = dates[1];
        } else {
            invoiceStartDateFilter = null;
            invoiceEndDateFilter = null;
        }
        loadInvoiceDataTable();
    }

    function loadInvoiceDataTable() {
        if ($.fn.dataTable.isDataTable('#invoiceReportsTbl')) {
            $('#invoiceReportsTbl').DataTable().clear().destroy();
        }

        objLeaseTable = $("#invoiceReportsTbl").DataTable({
            ajax: {
                url: "/Reports/GetInvoiceReports",
                type: 'POST',
                contentType: 'application/json',
                data: function (d) {
                    return JSON.stringify({
                        PropertiesIds: propertiesIdsList,
                        LeaseStartDateFilter: leaseStartDateFilter,
                        LeaseEndDateFilter: leaseEndDateFilter,
                        InvoiceStartDateFilter: invoiceStartDateFilter,
                        InvoiceEndDateFilter: invoiceEndDateFilter,
                    });
                },
                dataSrc: "",
                error: function (xhr, error, thrown) {
                    console.error("Error occurred: ", error, thrown);
                    alert("An error occurred while loading the data table: " + error);
                }
            },
            initComplete: function () {
            },
            order: [[0, "asc"]],
            columns: [
                { data: "Invoice" },
                {
                    data: "StartDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                },
                {
                    data: "EndDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                },
                {
                    data: "Status",
                    render: function (data, type, row) {
                        return data ? "Yes" : "No";
                    }
                },
                { data: "Property" },
                { data: "Unit" },
                { data: "RentCharges" },
                { data: "InvoiceDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                }
            ]
        });
    }

    function exportToCSV() {
        var csv = [];
        var rows = document.querySelectorAll("table tr");
        for (var i = 0; i < rows.length; i++) {
            var row = [], cols = rows[i].querySelectorAll("td, th");
            for (var j = 0; j < cols.length; j++)
                row.push(cols[j].innerText);
            csv.push(row.join(","));
        }
        downloadCSV(csv.join("\n"), 'InvoiceReport.csv');
    }

    function downloadCSV(csv, filename) {
        var csvFile;
        var downloadLink;
        csvFile = new Blob([csv], { type: "text/csv" });
        downloadLink = document.createElement("a");
        downloadLink.download = filename;
        downloadLink.href = window.URL.createObjectURL(csvFile);
        downloadLink.style.display = "none";
        document.body.appendChild(downloadLink);
        downloadLink.click();
    }



    function exportToPDF() {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();

        doc.autoTable({ html: '#invoiceReportsTbl' });
        doc.save('InvoiceReport.pdf');
    }

    $('#copyButton').on('click', function () {
        var text = $("#invoiceReportsTbl").clone().find('th, td').each(function () {
            $(this).text($(this).text());
        }).end().prop('outerHTML');

        var $temp = $("<textarea>");
        $("body").append($temp);
        $temp.val(text).select();
        document.execCommand("copy");
        $temp.remove();

        Swal.fire({
            icon: 'success',
            title: 'Copied to Clipboard',
            showConfirmButton: false,
            timer: 1500
        });
    });

    function printTable() {
        window.print();
    }


    $('#csvButton').on('click', function () {
        exportToCSV();
    });

    $('#excelButton').on('click', function () {
        var wb = XLSX.utils.table_to_book(document.getElementById('invoiceReportsTbl'), { sheet: "Sheet1" });
        XLSX.writeFile(wb, "InvoiceReport.xlsx");
    });

    $('#pdfButton').on('click', function () {
        exportToPDF();
    });

    $('#printButton').on('click', function () {
        printTable();
    });

</script>
