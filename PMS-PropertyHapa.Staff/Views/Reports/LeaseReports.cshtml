@{
    ViewData["Title"] = "LeaseReports";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-12 col-sm-6">
                    <h3>Lease Reports</h3>
                </div>
                <div class="col-12 col-sm-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Reports/Index"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item">Reports</li>
                        <li class="breadcrumb-item active">List</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12 project-list">
        <div class="card">
            <div class="row">
                <div class="col-md-12 p-0">
                    <ul class="nav nav-tabs border-tab" id="top-tab" role="tablist">
                        <li class="nav-item"><a class="nav-link active" id="income-top-tab" data-bs-toggle="tab" href="#leaseReports" role="tab" aria-controls="leaseReports" aria-selected="false"><i data-feather="info"></i>Overview</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 mt-4">
        <div class="tab-content" id="top-tabContent">
            <div class="tab-pane fade show active" id="leaseReports" role="tabpanel" aria-labelledby="income-top-tab">
                <div class="row mb-3">
         @*            <div class="col-md-3 mt-4">
                        <div class="left-side-header">
                            <div class="input-group">
                                <span class="input-group-text" id="basic-addon1">
                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <g>
                                            <g>
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M11.2753 2.71436C16.0029 2.71436 19.8363 6.54674 19.8363 11.2753C19.8363 16.0039 16.0029 19.8363 11.2753 19.8363C6.54674 19.8363 2.71436 16.0039 2.71436 11.2753C2.71436 6.54674 6.54674 2.71436 11.2753 2.71436Z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M19.8987 18.4878C20.6778 18.4878 21.3092 19.1202 21.3092 19.8983C21.3092 20.6783 20.6778 21.3097 19.8987 21.3097C19.1197 21.3097 18.4873 20.6783 18.4873 19.8983C18.4873 19.1202 19.1197 18.4878 19.8987 18.4878Z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                            </g>
                                        </g>
                                    </svg>
                                </span>
                                <input class="form-control" type="text" id="searchInput" placeholder="Search" aria-label="search" aria-describedby="basic-addon1">
                            </div>
                        </div>
                    </div> *@
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">Property</label>
                        <div col-sm-12>
                            <select id="reportPropertyFilter" multiple name="reportPropertyFilter" class="form-control select2"></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">Unit</label>
                        <div col-sm-12>
                            <select id="reportUnitFilter" multiple name="reportUnitFilter" class="form-control select2"></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">MoveIn/MoveOut Date</label>
                        <div class="col-sm-12">
                            <input type="text" class="form-control" id="createdAtRange" />
                        </div>
                    </div>
                </div>

                <div class="card mt-3">
                    <div class="card-body">
                        <div class="row">
                            <div class="table-responsive">
                                <h3 class="card-title">Lease Report</h3>
                                <table class="table display" id="leaseReportsTbl">
                                    <thead>
                                        <tr>
                                            <th scope="col" class="tableHeaderbg">Lease</th>
                                            <th scope="col" class="tableHeaderbg">Start Date</th>
                                            <th scope="col" class="tableHeaderbg">End Date</th>
                                            <th scope="col" class="tableHeaderbg">Status</th>
                                            <th scope="col" class="tableHeaderbg">Property</th>
                                            <th scope="col" class="tableHeaderbg">Unit</th>
                                            <th scope="col" class="tableHeaderbg">Rent Charges</th>
                                            <th scope="col" class="tableHeaderbg">Security Deposit</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<script>
    var propertiesIdsList = [];
    var unitsIdsList = [];
    var leaseStartDateFilter = null;
    var leaseEndDateFilter = null;

    $(document).ready(function () {
        initDatePickers();
        populateDropDowns();
        loadLeaseDataTable();
        $('#reportUnitFilter').on('change', applyFilters)
        $('#reportPropertyFilter').on('change', function () {
            if ($("#reportPropertyFilter").val() != null) {
                populateUnits($("#reportPropertyFilter").val().join(','));
            } else {
                $("#reportPropertyFilter").empty();
            }
            applyFilters();
        });
    });

    var initDatePickers = function () {
        $('#createdAtRange').daterangepicker({
            autoUpdateInput: false,
            locale: {
                format: 'MM/DD/YYYY',
                cancelLabel: 'Clear'
            },
            timePicker: false,
            startDate: moment().subtract(30, 'days'),
            endDate: moment().add(1, 'days')
        });

        $('#createdAtRange').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            applyFilters();
        });

        $('#createdAtRange').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
            applyFilters();
        });
    };

    function populateUnits(propertyIds) {
        $.ajax({
            url: '/Lease/GetUnitsDll',
            method: 'POST',
            data: { AssetIds: propertyIds },
            dataType: 'json',
            success: function (response) {
                var units = response;
                var $reportUnitFilter = $('#reportUnitFilter');
                $reportUnitFilter.empty();

                units.forEach(function (unit) {
                    var option = `<option value="${unit.UnitId}">${unit.UnitName}</option>`;
                    $reportUnitFilter.append(option);
                });
            },
            error: function (xhr, status, error) {
                console.error('Error fetching units:', error);
            }
        });
    }

    function populateDropDowns() {
        $.ajax({
            url: '@Url.Action("GetProperties", "Communication")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var vendorPropertyDropdown = document.getElementById('reportPropertyFilter');
                // vendorPropertyDropdown.innerHTML = ''; // Clear existing options
                data.forEach(function (item) {
                    var option = new Option(item.BuildingNo + " - " + item.BuildingName, item.AssetId);
                    vendorPropertyDropdown.appendChild(option);
                });
            }
        });
    }


    function applyFilters() {
        propertiesIdsList = $("#reportPropertyFilter").val();
        unitsIdsList = $("#reportUnitFilter").val();
        if ($("#createdAtRange").val()) {
            var dates = $("#createdAtRange").val().split('-');
            leaseStartDateFilter = dates[0];
            leaseEndDateFilter = dates[1];
        } else {
            leaseStartDateFilter = null;
            leaseEndDateFilter = null;
        }
        loadLeaseDataTable();
    }


    function loadLeaseDataTable() {

        if ($.fn.dataTable.isDataTable('#leaseReportsTbl')) {
            $('#leaseReportsTbl').DataTable().clear().destroy();
        }

        objLeaseTable = $("#leaseReportsTbl").DataTable({
            ajax: {
                url: "/Reports/GetLeaseReports",
                type: 'POST',
                contentType: 'application/json',
                data: function (d) {
                    return JSON.stringify({
                        PropertiesIds: propertiesIdsList,
                        UnitsIds: unitsIdsList,
                        LeaseStartDateFilter: leaseStartDateFilter,
                        LeaseEndDateFilter: leaseEndDateFilter
                    });
                },
                dataSrc: "",
                error: function (xhr, error, thrown) {
                    console.error("Error occurred: ", error, thrown);
                    alert("An error occurred while loading the data table: " + error);
                }
            },
            initComplete: function () {

            },
            order: [[0, "asc"]],
            columns: [
                { data: "Lease" },
                {
                    data: "StartDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                },
                {
                    data: "EndDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                },
                {
                    data: "Status",
                    render: function (data, type, row) {
                        return data ? "Yes" : "No";
                    }
                },
                { data: "Property" },
                { data: "Unit" },
                { data: "RentCharges" },
                { data: "SecurityDeposit" }
            ]
        });
    }

</script>