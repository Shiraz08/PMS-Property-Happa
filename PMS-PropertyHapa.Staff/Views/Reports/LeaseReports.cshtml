@{
    ViewData["Title"] = "LeaseReports";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<link href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" rel="stylesheet">
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/5.0.2/css/bootstrap.min.css" rel="stylesheet">


<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-12 col-sm-6">
                    <h3>Lease Reports</h3>
                </div>
                <div class="col-12 col-sm-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Reports/Index"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item">Reports</li>
                        <li class="breadcrumb-item active">List</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12 project-list">
        <div class="card">
            <div class="row">
                <div class="col-md-12 p-0">
                    <ul class="nav nav-tabs border-tab" id="top-tab" role="tablist">
                        <li class="nav-item"><a class="nav-link active" id="income-top-tab" data-bs-toggle="tab" href="#leaseReports" role="tab" aria-controls="leaseReports" aria-selected="false"><i data-feather="info"></i>Overview</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 mt-4">
        <div class="tab-content" id="top-tabContent">
            <div class="tab-pane fade show active" id="leaseReports" role="tabpanel" aria-labelledby="income-top-tab">
                <div class="row mb-3">
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">Property</label>
                        <div col-sm-12>
                            <select id="reportPropertyFilter" multiple name="reportPropertyFilter" class="form-control select2"></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">Unit</label>
                        <div col-sm-12>
                            <select id="reportUnitFilter" multiple name="reportUnitFilter" class="form-control select2"></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">MoveIn/MoveOut Date</label>
                        <div class="col-sm-12">
                            <input type="text" class="form-control" id="createdAtRange" />
                        </div>
                    </div>
                    <div class="col-md-1">
                        <button class="btn btn-primary mt-4" type="button" data-bs-toggle="offcanvas" data-bs-target="#leaseOffcanvas" aria-controls="leaseOffcanvas">Filter</button>
                    </div>
                </div>

                <div class="card mt-3">
                    <div class="card-body">
                        <div class="row">
                            <div class="table-responsive">
                                <h3 class="card-title">Lease Report</h3>
                                <table class="table display" id="leaseReportsTbl">
                                    <thead>
                                        <tr>
                                            <th scope="col" class="tableHeaderbg">Lease</th>
                                            <th scope="col" class="tableHeaderbg">Start Date</th>
                                            <th scope="col" class="tableHeaderbg">End Date</th>
                                            <th scope="col" class="tableHeaderbg">Status</th>
                                            <th scope="col" class="tableHeaderbg">Property</th>
                                            <th scope="col" class="tableHeaderbg">Unit</th>
                                            <th scope="col" class="tableHeaderbg">Rent Charges</th>
                                            <th scope="col" class="tableHeaderbg">Security Deposit</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<!-- Offcanvas for Lease Filters -->
<div class="offcanvas offcanvas-end w-50" tabindex="-1" id="leaseOffcanvas" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
        <h5 id="leaseOffcanvasLabel">Filter Lease Reports</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="row mb-3">
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Property</label>
                <div col-sm-12>
                    <select id="reportPropertyFilterOffcanvas" multiple name="reportPropertyFilterOffcanvas" class="form-control select2"></select>
                </div>
            </div>
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Units</label>
                <div col-sm-12>
                    <select id="reportUnitFilterOffcanvas" multiple name="reportUnitFilterOffcanvas" class="form-control select2"></select>
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">MoveIn/MoveOut Date</label>
                <div class="col-sm-12">
                    <input type="text" class="form-control" id="createdAtRangeOffcanvas" />
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Min Rent</label>
                <div class="col-sm-12">
                    <input type="number" class="form-control" id="minRentOffcanvas" />
                </div>
            </div>
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Max Rent</label>
                <div class="col-sm-12">
                    <input type="number" class="form-control" id="maxRentOffcanvas" />
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-end">
            <button class="btn btn-primary me-2" type="button" id="applyFilters">Filter</button>
            <button class="btn btn-secondary" type="button" id="clearFilters">Clear</button>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>


<script src="https://maxcdn.bootstrapcdn.com/bootstrap/5.0.2/js/bootstrap.bundle.min.js"></script>


<script>
    var propertiesIdsList = [];
    var unitsIdsList = [];
    var leaseStartDateFilter = null;
    var leaseEndDateFilter = null;
    var leaseMinRentFilter = null;
    var leaseMaxRentFilter = null;

    $(document).ready(function () {
        initDatePickers();
        populateDropDowns();
        loadLeaseDataTable();

        $('#reportUnitFilter, #reportUnitFilterOffcanvas').change(function () {
            var values = $(this).val();
            $('#reportUnitFilter, #reportUnitFilterOffcanvas').val(values).trigger('change.select2');
        });

        $('#createdAtRange, #createdAtRangeOffcanvas').change(function () {
            var value = $(this).val();
            $('#createdAtRange, #createdAtRangeOffcanvas').val(value);
        });

        $("#reportPropertyFilter").on("change", function () {
            var values = $(this).val();
            $('#reportPropertyFilterOffcanvas').val(values).trigger('change.select2');
            if ($("#reportPropertyFilter").val() != null && $("#reportPropertyFilter option:selected").length > 0) {
                populateUnits($("#reportPropertyFilter").val());
            } else {
                $("#reportUnitFilterOffcanvas").empty();
                $("#reportUnitFilter").empty();
            }
            applyFilters();
        });

        $('#reportPropertyFilterOffcanvas').on('change', function () {
            var values = $(this).val();
            $('#reportPropertyFilter').val(values).trigger('change.select2');
            if ($("#reportPropertyFilterOffcanvas").val() != null && $("#reportPropertyFilterOffcanvas option:selected").length > 0) {
                populateUnits($("#reportPropertyFilterOffcanvas").val());
            } else {
                $("#reportUnitFilterOffcanvas").empty();
                $("#reportUnitFilter").empty();
            }
        });

        $("#applyFilters").on("click", function () {
            applyFilters();
            $("#leaseOffcanvas").removeClass('show');;
        });

        $("#clearFilters").on("click", function () {
            clearFilters();
            $("#leaseOffcanvas").removeClass('show');
        });

    });

    var initDatePickers = function () {
        $('#createdAtRange').daterangepicker({
            autoUpdateInput: false,
            locale: {
                format: 'MM/DD/YYYY',
                cancelLabel: 'Clear'
            },
            timePicker: false,
            startDate: moment().subtract(30, 'days'),
            endDate: moment().add(1, 'days')
        });

        $('#createdAtRange').on('apply.daterangepicker', function (ev, picker) {
            $('#createdAtRange').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            $('#createdAtRangeOffcanvas').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            applyFilters();
        });

        $('#createdAtRange').on('cancel.daterangepicker', function (ev, picker) {
            $('#createdAtRange').val('');
            $('#createdAtRangeOffcanvas').val('');
            applyFilters();
        });
        
        $('#createdAtRangeOffcanvas').daterangepicker({
            autoUpdateInput: false,
            locale: {
                format: 'MM/DD/YYYY',
                cancelLabel: 'Clear'
            },
            timePicker: false,
            startDate: moment().subtract(30, 'days'),
            endDate: moment().add(1, 'days')
        });

        $('#createdAtRangeOffcanvas').on('apply.daterangepicker', function (ev, picker) {
            $('#createdAtRangeOffcanvas').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            $('#createdAtRange').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
        });

        $('#createdAtRangeOffcanvas').on('cancel.daterangepicker', function (ev, picker) {
            $('#createdAtRangeOffcanvas').val('');
            $('#createdAtRange').val('');
        });
    };

    function populateUnits(propertyIds) {
        $.ajax({
            url: '/Lease/GetUnitsDll',
            method: 'POST',
            data: { AssetIds: propertyIds },
            dataType: 'json',
            success: function (response) {
                var units = response;
                var $reportUnitFilter = $('#reportUnitFilter');
                $reportUnitFilter.empty();

                units.forEach(function (unit) {
                    var option = `<option value="${unit.UnitId}">${unit.UnitName}</option>`;
                    $reportUnitFilter.append(option);
                });
                
                var $reportUnitFilterOffcanvas = $('#reportUnitFilterOffcanvas');
                $reportUnitFilterOffcanvas.empty();

                units.forEach(function (unit) {
                    var option = `<option value="${unit.UnitId}">${unit.UnitName}</option>`;
                    $reportUnitFilterOffcanvas.append(option);
                });
            },
            error: function (xhr, status, error) {
                console.error('Error fetching units:', error);
            }
        });
    }

    function populateDropDowns() {
        $.ajax({
            url: '@Url.Action("GetProperties", "Communication")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var leasePropertyDropdown = document.getElementById('reportPropertyFilter');
                data.forEach(function (item) {
                    var option = new Option(item.BuildingNo + " - " + item.BuildingName, item.AssetId);
                    leasePropertyDropdown.appendChild(option);
                });
                
                var leasePropertyOffcanvasDropdown = document.getElementById('reportPropertyFilterOffcanvas');
                data.forEach(function (item) {
                    var option = new Option(item.BuildingNo + " - " + item.BuildingName, item.AssetId);
                    leasePropertyOffcanvasDropdown.appendChild(option);
                });
            }
        });
    }





    function applyFilters() {
        propertiesIdsList = $("#reportPropertyFilterOffcanvas").val();
        unitsIdsList = $("#reportUnitFilter").val();
        if ($("#createdAtRange").val()) {
            var dates = $("#createdAtRange").val().split('-');
            leaseStartDateFilter = dates[0];
            leaseEndDateFilter = dates[1];
        } else {
            leaseStartDateFilter = null;
            leaseEndDateFilter = null;
        }
        leaseMinRentFilter = $("#minRentOffcanvas").val();
        leaseMaxRentFilter = $("#maxRentOffcanvas").val();
        loadLeaseDataTable();
    }

    function clearFilters() {
        $('#reportPropertyFilter').val('').trigger('change');
        $('#reportUnitFilter').empty();
        $('#reportUnitFilterOffcanvas').empty();
        $("#minRentOffcanvas").val('');
        $("#minRentOffcanvas").val('');
        $('#createdAtRange').val('');
        $('#createdAtRangeOffcanvas').val('');

        loadLeaseDataTable();
    }


    function loadLeaseDataTable() {

        if ($.fn.dataTable.isDataTable('#leaseReportsTbl')) {
            $('#leaseReportsTbl').DataTable().clear().destroy();
        }

        objLeaseTable = $("#leaseReportsTbl").DataTable({
            ajax: {
                url: "/Reports/GetLeaseReports",
                type: 'POST',
                contentType: 'application/json',
                data: function (d) {
                    return JSON.stringify({
                        PropertiesIds: propertiesIdsList,
                        UnitsIds: unitsIdsList,
                        LeaseStartDateFilter: leaseStartDateFilter,
                        LeaseEndDateFilter: leaseEndDateFilter,
                        LeaseMinRentFilter: leaseMinRentFilter,
                        LeaseMaxRentFilter: leaseMaxRentFilter,
                        
                    });
                    
                },
                dataSrc: "",
                error: function (xhr, error, thrown) {
                    console.error("Error occurred: ", error, thrown);
                    alert("An error occurred while loading the data table: " + error);
                }
            },
            initComplete: function () {

            },
            order: [[0, "asc"]],
            columns: [
                { data: "Lease" },
                {
                    data: "StartDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                },
                {
                    data: "EndDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                },
                {
                    data: "Status",
                    render: function (data, type, row) {
                        return data ? "Yes" : "No";
                    }
                },
                { data: "Property" },
                { data: "Unit" },
                { data: "RentCharges" },
                { data: "SecurityDeposit" }
            ]
        });
    }

</script>