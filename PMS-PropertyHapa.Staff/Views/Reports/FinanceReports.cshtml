@{
    ViewData["Title"] = "InvoiceReports";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .offcanvas {
        z-index: 1050; /* Adjust if needed */
    }

    .daterangepicker {
        z-index: 1060; /* Adjust if needed */
    }
</style>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<link href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" rel="stylesheet">
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/5.0.2/css/bootstrap.min.css" rel="stylesheet">


@*<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

<!-- Page Sidebar Ends-->
<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-12 col-sm-6">
                    <h3>Invoice Report</h3>
                </div>
                <div class="col-12 col-sm-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Reports/Index"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item">Invoice</li>
                        <li class="breadcrumb-item active">List</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid my-4">
        <div class="row">
            <!-- Column 1: Properties Table (80% on lg screens) -->
            <div class="col-12 col-md-12 mb-4">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0 flex-grow-1 font-weight-bold">Filters</h4>
                    </div>
                    <div class="card-body">
                        <div class="row mt-1 d-flex">
                            <div class="col-lg-4 col-md-4">
                                <div class="row">
                                    <label class="col-sm-12 mb-0 font-weight-bold">Property</label>
                                    <div col-sm-12>
                                        <select id="expensePropertyFilter" multiple name="expensePropertyFilter" class="form-control select2"></select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4">
                                <div class="row">
                                    <label class="col-sm-12 mb-0 font-weight-bold">MoveIn/MoveOut Date</label>
                                    <div class="col-sm-12">
                                        <input type="text" class="form-control" id="createdAtRange" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4">
                                <div class="row">
                                    <label class="col-sm-12 mb-0 font-weight-bold">Invoice Start/End Date</label>
                                    <div class="col-sm-12">
                                        <input type="text" class="form-control" id="createdInvoiceRange" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer text-end d-flex justify-content-end">
                        <button onclick="clearFilters()" type="button" class="btn btn-danger mr-2 font-weight-bold" style="padding-left: 2.75rem  !important; padding-right: 2.75rem  !important;">Clear</button>
                        <button onclick="applyFilters()" type="button" class="btn btn-success font-weight-bold" style="padding-left: 2.75rem  !important; padding-right: 2.75rem  !important;">Apply</button>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-start mb-3">
                            <button id="copyButton" class="btn btn-success mr-1">Copy</button>
                            <button id="csvButton" class="btn btn-success mr-1">CSV</button>
                            <button id="excelButton" class="btn btn-success mr-1">Excel</button>
                            <button id="pdfButton" class="btn btn-success mr-1">PDF</button>
                            <button id="printButton" class="btn btn-success mr-1">Print</button>
                        </div>
                        <div class="table-responsive">
                            <table class="table" id="invoiceReportsTbl">
                                <thead>
                                    <tr>
                                        <th scope="col" class="tableHeaderbg">Invoice</th>
                                        <th scope="col" class="tableHeaderbg">Start Date</th>
                                        <th scope="col" class="tableHeaderbg">End Date</th>
                                        <th scope="col" class="tableHeaderbg">Status</th>
                                        <th scope="col" class="tableHeaderbg">Property</th>
                                        <th scope="col" class="tableHeaderbg">Unit</th>
                                        <th scope="col" class="tableHeaderbg">Rent Charges</th>
                                        <th scope="col" class="tableHeaderbg">Invoice Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div> *@


<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-12 col-sm-6">
                    <h3>Finance Reports</h3>
                </div>
                <div class="col-12 col-sm-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Reports/Index"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item">Reports</li>
                        <li class="breadcrumb-item active">List</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12 project-list">
        <div class="card">
            <div class="row">
                <div class="col-md-12 p-0">
                    <ul class="nav nav-tabs border-tab" id="top-tab" role="tablist">
                        <li class="nav-item"><a class="nav-link active" id="all-top-tab" data-bs-toggle="tab" href="#allFinanceReports" role="tab" aria-controls="allFinanceReports" aria-selected="false"><i data-feather="check-circle"></i>All</a></li>
                        <li class="nav-item"><a class="nav-link" id="income-top-tab" data-bs-toggle="tab" href="#incomeFinanceReports" role="tab" aria-controls="incomeFinanceReports" aria-selected="false"><i data-feather="info"></i>Income</a></li>
                        <li class="nav-item"><a class="nav-link" id="expense-top-tab" data-bs-toggle="tab" href="#expenseFinanceReports" role="tab" aria-controls="expenseFinanceReports" aria-selected="false"><i data-feather="check-circle"></i>Expense</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 mt-4">
        <div class="tab-content" id="top-tabContent">
            <div class="tab-pane fade show active" id="allFinanceReports" role="tabpanel" aria-labelledby="all-top-tab">
                <div class="row mb-3">
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">Property</label>
                        <div col-sm-12>
                            <select id="allPropertyFilter" multiple name="allPropertyFilter" class="form-control select2"></select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label class="col-sm-12 mb-0 font-weight-bold">Unit</label>
                        <div col-sm-12>
                            <select id="allUnitFilter" multiple name="allUnitFilter" class="form-control select2"></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">Start/End Date</label>
                        <div class="col-sm-12">
                            <input type="text" class="form-control" id="allCreatedRange" />
                        </div>
                    </div>
                    <div class="col-md-1">
                        <button class="btn btn-primary mt-4" type="button" data-bs-toggle="offcanvas" data-bs-target="#allOffcanvasRight" aria-controls="allOffcanvasRight">Filter</button>
                    </div>
                </div>
                <div class="card mt-3">
                    <div class="card-body">
                        <div class="row">
                            <div class="table-responsive">
                                <h3 class="card-title">All</h3>
                                <table class="table display" id="allFinanceReportsTbl">
                                    <thead>
                                        <tr>
                                            <th>Invoice</th>
                                            <th>Task Type</th>
                                            <th>Start Date</th>
                                            <th>End Date</th>
                                            <th>Property</th>
                                            <th>Unit</th>
                                            <th>Income</th>
                                            <th>Expense</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="incomeFinanceReports" role="tabpanel" aria-labelledby="income-top-tab">
                <div class="row mb-3">
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">Property</label>
                        <div col-sm-12>
                            <select id="incomePropertyFilter" multiple name="incomePropertyFilter" class="form-control select2"></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">MoveIn/MoveOut Date</label>
                        <div class="col-sm-12">
                            <input type="text" class="form-control" id="incomeCreatedAtRange" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">Invoice Start/End Date</label>
                        <div class="col-sm-12">
                            <input type="text" class="form-control" id="incomeCreatedInvoiceRange" />
                        </div>
                    </div>
                    <div class="col-md-3">
                        <button class="btn btn-primary mt-4" type="button" data-bs-toggle="offcanvas" data-bs-target="#incomeOffcanvasRight" aria-controls="incomeOffcanvasRight">Filter</button>
                    </div>
                </div>
                <div class="card mt-3">
                    <div class="card-body">
                        <div class="row">
                            <div class="table-responsive">
                                <h3 class="card-title">Income</h3>
                                <table class="table display" id="incomeFinanceReportsTbl">
                                    <thead>
                                        <tr>
                                            <th>Invoice</th>
                                            <th>Start Date</th>
                                            <th>End Date</th>
                                            <th>Status</th>
                                            <th>Property</th>
                                            <th>Unit</th>
                                            <th>Rent Charges</th>
                                            <th>Invoice Date</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="expenseFinanceReports" role="tabpanel" aria-labelledby="expense-top-tab">
                <div class="row mb-3">
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">Property</label>
                        <div col-sm-12>
                            <select id="expensePropertyFilter" multiple name="expensePropertyFilter" class="form-control select2"></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">Units</label>
                        <div col-sm-12>
                            <select id="expenseUnitFilter" multiple name="expenseUnitFilter" class="form-control select2"></select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="col-sm-12 mb-0 font-weight-bold">Task Start/End Date</label>
                        <div class="col-sm-12">
                            <input type="text" class="form-control" id="expenseCreatedAtRange" />
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label class="col-sm-12 mb-0 font-weight-bold">Due Date</label>
                        <div class="col-sm-12">
                            <input type="text" class="form-control" id="expenseCreatedDueRange" />
                        </div>
                    </div>
                    <div class="col-md-1">
                        <button class="btn btn-primary mt-4" type="button" data-bs-toggle="offcanvas" data-bs-target="#expenseOffcanvasRight" aria-controls="expenseOffcanvasRight">Filter</button>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <h3 class="card-title">Expense</h3>
                            <table class="table display" id="expenseReportsTable">
                                <thead>
                                    <tr>
                                        <th>Task Type</th>
                                        <th>Due At</th>
                                        <th>Start Date</th>
                                        <th>Expiring Date</th>
                                        <th>Property</th>
                                        <th>Unit</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="offcanvas offcanvas-end w-50" tabindex="-1" id="allOffcanvasRight" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasRightLabel">Filter All Reports</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="row mb-3">
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Property</label>
                <div col-sm-12>
                    <select id="allPropertyFilterOffcanvas" multiple name="allPropertyFilterOffcanvas" class="form-control select2"></select>
                </div>
            </div>
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Units</label>
                <div col-sm-12>
                    <select id="allUnitFilterOffcanvas" multiple name="allUnitFilterOffcanvas" class="form-control select2"></select>
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Start/End Date</label>
                <div class="col-sm-12">
                    <input type="text" class="form-control" id="allCreatedRangeOffcanvas" />
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-end">
            <button class="btn btn-primary me-2" type="button" id="applyAllFilters">Filter</button>
            <button class="btn btn-secondary" type="button" id="clearAllFilters">Clear</button>
        </div>
    </div>
</div>

<!-- Offcanvas for Income Filters -->
<div class="offcanvas offcanvas-end w-50" tabindex="-1" id="incomeOffcanvasRight" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasRightLabel">Filter Income Reports</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="row mb-3">
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Property</label>
                <div col-sm-12>
                    <select id="incomePropertyFilterOffcanvas" multiple name="incomePropertyFilterOffcanvas" class="form-control select2"></select>
                </div>
            </div>
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Units</label>
                <div col-sm-12>
                    <select id="incomeUnitFilterOffcanvas" multiple name="incomeUnitFilterOffcanvas" class="form-control select2"></select>
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">MoveIn/MoveOut Date</label>
                <div class="col-sm-12">
                    <input type="text" class="form-control" id="incomeCreatedAtRangeOffcanvas" />
                </div>
            </div>
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Invoice Start/End Date</label>
                <div class="col-sm-12">
                    <input type="text" class="form-control" id="incomeCreatedInvoiceRangeOffcanvas" />
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-end">
            <button class="btn btn-primary me-2" type="button" id="applyIncomeFilters">Filter</button>
            <button class="btn btn-secondary" type="button" id="clearIncomeFilters">Clear</button>
        </div>
    </div>
</div>

<!-- Offcanvas for Expense Filters -->
<div class="offcanvas offcanvas-end w-50" tabindex="-1" id="expenseOffcanvasRight" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
        <h5 id="offcanvasRightLabel">Filter Expense Reports</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="row mb-3">
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Property</label>
                <div col-sm-12>
                    <select id="expensePropertyFilterOffcanvas" multiple name="expensePropertyFilterOffcanvas" class="form-control select2"></select>
                </div>
            </div>
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Units</label>
                <div col-sm-12>
                    <select id="expenseUnitFilterOffcanvas" multiple name="expenseUnitFilterOffcanvas" class="form-control select2"></select>
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Task Start/End Date</label>
                <div class="col-sm-12">
                    <input type="text" id="expenseCreatedAtRangeOffcanvas" class="form-control" />
                </div>
            </div>
            <div class="col-md-6">
                <label class="col-sm-12 mb-0 font-weight-bold">Due Date</label>
                <div class="col-sm-12">
                    <input type="text" class="form-control" id="expenseCreatedDueRangeOffcanvas" />
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-end">
            <button class="btn btn-primary me-2" type="button" id="applyExpenseFilters">Filter</button>
            <button class="btn btn-secondary" type="button" id="clearExpenseFilters">Clear</button>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>


<script src="https://maxcdn.bootstrapcdn.com/bootstrap/5.0.2/js/bootstrap.bundle.min.js"></script>

<script>
    var allPropertiesIdsList = [];
    var allUnitsIdsList = [];
    var allFinanceStartDateFilter = null;
    var allFinanceEndDateFilter = null;

    var incomePropertiesIdsList = [];
    var incomeUnitsIdsList = [];
    var incomeLeaseStartDateFilter = null;
    var incomeLeaseEndDateFilter = null;
    var incomeInvoiceStartDateFilter = null;
    var incomeInvoiceEndDateFilter = null;

    var expensePropertiesIdsList = [];
    var expenseUnitsIdsList = [];
    var expenseTaskStartDateFilter = null;
    var expenseTaskEndDateFilter = null;
    var expenseTaskDueStartDateFilter = null;
    var expenseTaskDueEndDateFilter = null;

    $(document).ready(function () {
        initDatePickers();
        populateDropDowns();
        loadFinanceDataTable();
        loadInvoiceDataTable();
        loadTaskRequestDataTable();

        // Synchronize All Filters between Tab and Offcanvas
        // $('#allPropertyFilter, #allPropertyFilterOffcanvas').change(function () {
        //     var values = $(this).val();
        //     $('#allPropertyFilter, #allPropertyFilterOffcanvas').val(values).trigger('change.select2');
        //     if (values != null) {
        //         var selectedValues = values.join(',');
        //         populateUnits(selectedValues);
        //         populateAllUnitsOffcanvas(selectedValues);
        //     } else {
        //         $("#allPropertyFilter").empty();
        //         $("#allPropertyFilterOffcanvas").empty();
        //     }
        //     applyAllFilters();
        // });

        // $('#allUnitFilter, #allUnitFilterOffcanvas').change(function () {
        //     var values = $(this).val();
        //     $('#allUnitFilter, #allUnitFilterOffcanvas').val(values).trigger('change.select2');
        // });


        // $('#allCreatedDueRange, #allCreatedDueRangeOffcanvas').change(function () {
        //     var value = $(this).val();
        //     $('#allCreatedDueRange, #allCreatedDueRangeOffcanvas').val(value);
        // });
      

        // // Synchronize Income Filters between Tab and Offcanvas
        // $('#incomePropertyFilter, #incomePropertyFilterOffcanvas').change(function () {
        //     var values = $(this).val();
        //     $('#incomePropertyFilter, #incomePropertyFilterOffcanvas').val(values).trigger('change.select2');
        //     if ($('#incomePropertyFilter').val() != null) {
        //         populateUnits($('#incomePropertyFilter').val());
        //     } else {
        //         populateUnits($('#incomePropertyFilterOffcanvas').val());
        //     }
        // });

        // $('#incomeUnitFilter, #incomeUnitFilterOffcanvas').change(function () {
        //     var values = $(this).val();
        //     $('#incomeUnitFilter, #incomeUnitFilterOffcanvas').val(values).trigger('change.select2');
        // });

        // $('#incomeCreatedAtRange, #incomeCreatedAtRangeOffcanvas').change(function () {
        //     var value = $(this).val();
        //     $('#incomeCreatedAtRange, #incomeCreatedAtRangeOffcanvas').val(value);
        // });

        // $('#incomeCreatedInvoiceRange, #incomeCreatedInvoiceRangeOffcanvas').change(function () {
        //     var value = $(this).val();
        //     $('#incomeCreatedInvoiceRange, #incomeCreatedInvoiceRangeOffcanvas').val(value);
        // });

        // // Synchronize Expense Filters between Tab and Offcanvas
        // $('#expensePropertyFilter, #expensePropertyFilterOffcanvas').change(function () {
        //     var values = $(this).val();
        //     $('#expensePropertyFilter, #expensePropertyFilterOffcanvas').val(values).trigger('change.select2');
        //     if (values != null) {
        //         var selectedValues = values.join(',');
        //         populateUnits(selectedValues);
        //         populateExpenseUnitsOffcanvas(selectedValues);
        //     } else {
        //         $("#expensePropertyFilter").empty();
        //         $("#expensePropertyFilterOffcanvas").empty();
        //     }
        //     applyExpenseFilters();
        // });

        // $('#expenseUnitFilter, #expenseUnitFilterOffcanvas').change(function () {
        //     var values = $(this).val();
        //     $('#expenseUnitFilter, #expenseUnitFilterOffcanvas').val(values).trigger('change.select2');
        // });

        // $('#expenseCreatedAtRange, #expenseCreatedAtRangeOffcanvas').change(function () {
        //     var value = $(this).val();
        //     $('#expenseCreatedAtRange, #expenseCreatedAtRangeOffcanvas').val(value);
        // });

        // $('#expenseCreatedDueRange, #expenseCreatedDueRangeOffcanvas').change(function () {
        //     var value = $(this).val();
        //     $('#expenseCreatedDueRange, #expenseCreatedDueRangeOffcanvas').val(value);
        // });

        // // Original event handlers
        // $("#allPropertyFilter, #allPropertyFilterOffcanvas").on("change", applyAllFilters);
        // $("#incomePropertyFilter, #incomePropertyFilterOffcanvas").on("change", applyIncomeFilters);
        // $("#expensePropertyFilter, #expensePropertyFilterOffcanvas").on("change", applyExpenseFilters);

        // Synchronize Finance Filters between Tab and Offcanvas
        $('#allUnitFilter, #allUnitFilterOffcanvas').change(function () {
            var values = $(this).val();
            $('#allUnitFilter, #allUnitFilterOffcanvas').val(values).trigger('change.select2');
        });

        $('#allCreatedAtRange, #allCreatedAtRangeOffcanvas').change(function () {
            var value = $(this).val();
            $('#allCreatedAtRange, #allCreatedAtRangeOffcanvas').val(value);
        });

        $('#allCreatedDueRange, #allCreatedDueRangeOffcanvas').change(function () {
            var value = $(this).val();
            $('#allCreatedDueRange, #allCreatedDueRangeOffcanvas').val(value);
        });


        // Synchronize Income Filters between Tab and Offcanvas

        $('#incomeCreatedAtRange, #incomeCreatedAtRangeOffcanvas').change(function () {
            var value = $(this).val();
            $('#incomeCreatedAtRange, #incomeCreatedAtRangeOffcanvas').val(value);
        });

        $('#incomeCreatedInvoiceRange, #incomeCreatedInvoiceRangeOffcanvas').change(function () {
            console.log("asdasd")
            var value = $(this).val();
            console.log(value)
            $('#incomeCreatedInvoiceRange, #incomeCreatedInvoiceRangeOffcanvas').val(value);
        });

        // Synchronize Expense Filters between Tab and Offcanvas
        $('#expenseUnitFilter, #expenseUnitFilterOffcanvas').change(function () {
            var values = $(this).val();
            $('#expenseUnitFilter, #expenseUnitFilterOffcanvas').val(values).trigger('change.select2');
        });

        $('#expenseCreatedAtRange, #expenseCreatedAtRangeOffcanvas').change(function () {
            var value = $(this).val();
            $('#expenseCreatedAtRange, #expenseCreatedAtRangeOffcanvas').val(value);
        });

        $('#expenseCreatedDueRange, #expenseCreatedDueRangeOffcanvas').change(function () {
            var value = $(this).val();
            $('#expenseCreatedDueRange, #expenseCreatedDueRangeOffcanvas').val(value);
        });

        // Original event handlers

        $("#allPropertyFilter").on("change", function () {
            var values = $(this).val();
            $('#allPropertyFilterOffcanvas').val(values).trigger('change');
            applyAllFilters();
        });

        $('#allPropertyFilterOffcanvas').on('change', function () {
            if ($("#allPropertyFilterOffcanvas").val() != null && $("#allPropertyFilterOffcanvas option:selected").length > 0) {
                populateFinanceUnits($("#allPropertyFilterOffcanvas").val());
            } else {
                $("#allUnitFilterOffcanvas").empty();
                $("#allUnitFilter").empty();
            }
        });

        $("#incomePropertyFilter").on("change", function () {
            var values = $(this).val();
            $('#incomePropertyFilterOffcanvas').val(values).trigger('change');
            applyIncomeFilters();
        });

        $('#incomePropertyFilterOffcanvas').on('change', function () {
            if ($("#incomePropertyFilterOffcanvas").val() != null || $("#incomePropertyFilterOffcanvas option:selected").length > 0) {
                populateIncomeUnitsOffcanvas($("#incomePropertyFilterOffcanvas").val());
            } else {
                $("#incomeUnitFilterOffcanvas").empty();
            }
        });

        $("#expensePropertyFilter").on("change", function () {
            var values = $(this).val();
            $('#expensePropertyFilterOffcanvas').val(values).trigger('change');
            applyExpenseFilters();
        });

        $('#expensePropertyFilterOffcanvas').on('change', function () {
            if ($("#expensePropertyFilterOffcanvas").val() != null && $("#expensePropertyFilterOffcanvas option:selected").length > 0) {
                populateExpenseUnits($("#expensePropertyFilterOffcanvas").val());
            } else {
                $("#expenseUnitFilterOffcanvas").empty();
                $("#expensePropertyFilter").empty();
            }
        });



        // Offcanvas event handlers
        $("#applyAllFilters").on("click", function () {
            applyAllFilters();
            $("#allOffcanvasRight").removeClass('show');;
        });

        $("#clearAllFilters").on("click", function () {
            clearAllFilters();
            $("#allOffcanvasRight").removeClass('show');
        });

        $("#applyIncomeFilters").on("click", function () {
            applyIncomeFilters();
            $("#incomeOffcanvasRight").removeClass('show');
        });

        $("#clearIncomeFilters").on("click", function () {
            clearIncomeFilters();
            $("#incomeOffcanvasRight").removeClass('show');
        });

        $("#applyExpenseFilters").on("click", function () {
            applyExpenseFilters();
            $("#expenseOffcanvasRight").removeClass('show');
        });

        $("#clearExpenseFilters").on("click", function () {
            clearExpenseFilters();
            $("#expenseOffcanvasRight").removeClass('show');
        });

    });

    var initDatePickers = function () {
        $('#incomeCreatedAtRange').daterangepicker({
            autoUpdateInput: false,
            locale: {
                format: 'MM/DD/YYYY',
                cancelLabel: 'Clear'
            },
            timePicker: false,
            startDate: moment().subtract(30, 'days'),
            endDate: moment().add(1, 'days')
        });

        $('#incomeCreatedAtRange').on('apply.daterangepicker', function (ev, picker) {
            $('#incomeCreatedAtRange').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            $('#incomeCreatedAtRangeOffcanvas').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            applyIncomeFilters();
        });

        $('#incomeCreatedAtRange').on('cancel.daterangepicker', function (ev, picker) {
            $('#incomeCreatedAtRange').val('');
            $('#incomeCreatedAtRangeOffcanvas').val('');
            applyIncomeFilters();
        });

        $('#incomeCreatedInvoiceRange').daterangepicker({
            autoUpdateInput: false,
            locale: {
                format: 'MM/DD/YYYY',
                cancelLabel: 'Clear'
            },
            timePicker: false,
            startDate: moment().subtract(30, 'days'),
            endDate: moment().add(1, 'days')
        });

        $('#incomeCreatedInvoiceRange').on('apply.daterangepicker', function (ev, picker) {
            $('#incomeCreatedInvoiceRange').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            $('#incomeCreatedInvoiceRangeOffcanvas').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            applyIncomeFilters();
        });

        $('#incomeCreatedInvoiceRange').on('cancel.daterangepicker', function (ev, picker) {
            $('#incomeCreatedInvoiceRange').val('');
            $('#incomeCreatedInvoiceRangeOffcanvas').val('');
            applyIncomeFilters();
        });

        $('#incomeCreatedAtRangeOffcanvas').daterangepicker({
            parentEl: '#incomeOffcanvasRight',
            opens: 'right',
            autoUpdateInput: false,
            locale: {
                cancelLabel: 'Clear'
            }
        });

        $('#incomeCreatedAtRangeOffcanvas').on('apply.daterangepicker', function (ev, picker) {
            $('#incomeCreatedAtRangeOffcanvas').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
            $('#incomeCreatedAtRange').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
        });

        $('#incomeCreatedAtRangeOffcanvas').on('cancel.daterangepicker', function (ev, picker) {
            $('#incomeCreatedAtRangeOffcanvas').val('');
            $('#incomeCreatedAtRange').val('');
        });

        $('#incomeCreatedInvoiceRangeOffcanvas').daterangepicker({
            parentEl: '#incomeOffcanvasRight',
            opens: 'right',
            autoUpdateInput: false,
            locale: {
                cancelLabel: 'Clear'
            }
        });

        $('#incomeCreatedInvoiceRangeOffcanvas').on('apply.daterangepicker', function (ev, picker) {
            $('#incomeCreatedInvoiceRangeOffcanvas').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
            $('#incomeCreatedInvoiceRange').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
        });

        $('#incomeCreatedInvoiceRangeOffcanvas').on('cancel.daterangepicker', function (ev, picker) {
            $('#incomeCreatedInvoiceRangeOffcanvas').val('');
            $('#incomeCreatedInvoiceRange').val('');
        });

        $('#expenseCreatedAtRange').daterangepicker({
            autoUpdateInput: false,
            locale: {
                format: 'MM/DD/YYYY',
                cancelLabel: 'Clear'
            },
            timePicker: false,
            startDate: moment().subtract(30, 'days'),
            endDate: moment().add(1, 'days')
        });

        $('#expenseCreatedAtRange').on('apply.daterangepicker', function (ev, picker) {
            $('#expenseCreatedAtRange').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            $('#expenseCreatedAtRangeOffcanvas').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            applyExpenseFilters();
        });

        $('#expenseCreatedAtRange').on('cancel.daterangepicker', function (ev, picker) {
            $('#expenseCreatedAtRange').val('');
            $('#expenseCreatedAtRangeOffcanvas').val('');
            applyExpenseFilters();
        });

        $('#expenseCreatedDueRange').daterangepicker({
            autoUpdateInput: false,
            locale: {
                format: 'MM/DD/YYYY',
                cancelLabel: 'Clear'
            },
            timePicker: false,
            startDate: moment().subtract(30, 'days'),
            endDate: moment().add(1, 'days')
        });

        $('#expenseCreatedDueRange').on('apply.daterangepicker', function (ev, picker) {
            $('#expenseCreatedDueRange').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            $('#expenseCreatedDueRangeOffcanvas').val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
            applyExpenseFilters();
        });

        $('#expenseCreatedDueRange').on('cancel.daterangepicker', function (ev, picker) {
            $('#expenseCreatedDueRange').val('');
            $('#expenseCreatedDueRangeOffcanvas').val('');
            applyExpenseFilters();
        });


        $('#expenseCreatedAtRangeOffcanvas').daterangepicker({
            parentEl: '#expenseOffcanvasRight',
            opens: 'right',
            autoUpdateInput: false,
            locale: {
                cancelLabel: 'Clear'
            }
        });

        $('#expenseCreatedAtRangeOffcanvas').on('apply.daterangepicker', function (ev, picker) {
            $('#expenseCreatedAtRangeOffcanvas').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
            $('#expenseCreatedAtRange').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
        });

        $('#expenseCreatedAtRangeOffcanvas').on('cancel.daterangepicker', function (ev, picker) {
            $('#expenseCreatedAtRangeOffcanvas').val('');
            $('#expenseCreatedAtRange').val('');
        });

        $('#expenseCreatedDueRangeOffcanvas').daterangepicker({
            parentEl: '#expenseOffcanvasRight',
            opens: 'right',
            autoUpdateInput: false,
            locale: {
                cancelLabel: 'Clear'
            }
        });

        $('#expenseCreatedDueRangeOffcanvas').on('apply.daterangepicker', function (ev, picker) {
            $('#expenseCreatedDueRangeOffcanvas').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
            $('#expenseCreatedDueRange').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
        });

        $('#expenseCreatedDueRangeOffcanvas').on('cancel.daterangepicker', function (ev, picker) {
            $('#expenseCreatedDueRangeOffcanvas').val('');
            $('#expenseCreatedDueRange').val('');
        });
       
        $('#allCreatedRange').daterangepicker({
            opens: 'right',
            autoUpdateInput: false,
            locale: {
                cancelLabel: 'Clear'
            }
        });

        $('#allCreatedRange').on('apply.daterangepicker', function (ev, picker) {
            $('#allCreatedRangeOffcanvas').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
            $('#allCreatedRange').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
        });

        $('#allCreatedRange').on('cancel.daterangepicker', function (ev, picker) {
            $('#allCreatedRangeOffcanvas').val('');
            $('#allCreatedRange').val('');
        });
        
        $('#allCreatedRangeOffcanvas').daterangepicker({
            parentEl: '#allOffcanvasRight',
            opens: 'right',
            autoUpdateInput: false,
            locale: {
                cancelLabel: 'Clear'
            }
        });

        $('#allCreatedRangeOffcanvas').on('apply.daterangepicker', function (ev, picker) {
            $('#allCreatedRangeOffcanvas').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
            $('#allCreatedRange').val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));
        });

        $('#allCreatedRangeOffcanvas').on('cancel.daterangepicker', function (ev, picker) {
            $('#allCreatedRangeOffcanvas').val('');
            $('#allCreatedRange').val('');
        });
    };

    function parseDateRange(selector) {
        var dates = $(selector).val().split(' - ');
        return dates.length === 2 ? { start: dates[0], end: dates[1] } : null;
    }


    function loadFinanceDataTable() {
        if ($.fn.dataTable.isDataTable('#allFinanceReportsTbl')) {
            $('#allFinanceReportsTbl').DataTable().clear().destroy();
        }

        objLeaseTable = $("#allFinanceReportsTbl").DataTable({
            ajax: {
                url: "/Reports/GetFinanceReports",
                type: 'POST',
                contentType: 'application/json',
                data: function (d) {
                    return JSON.stringify({
                        PropertiesIds: allPropertiesIdsList,
                        UnitsIds: allUnitsIdsList,
                        allFinanceStartDateFilter: allFinanceStartDateFilter,
                        allFinanceEndDateFilter: allFinanceEndDateFilter,
                    });
                },
                dataSrc: "",
                error: function (xhr, error, thrown) {
                    console.error("Error occurred: ", error, thrown);
                    alert("An error occurred while loading the data table: " + error);
                }
            },
            initComplete: function () {
            },
            order: [[0, "asc"]],
            columns: [
                { data: "Invoice" },
                { data: "Task" },
                {
                    data: "StartDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                },
                {
                    data: "EndDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                },
                { data: "Property" },
                { data: "Unit" },
                { data: "RentCharges" },
                { data: "Total" },
            ]
        });
    }

    function loadInvoiceDataTable() {
        if ($.fn.dataTable.isDataTable('#incomeFinanceReportsTbl')) {
            $('#incomeFinanceReportsTbl').DataTable().clear().destroy();
        }

        objLeaseTable = $("#incomeFinanceReportsTbl").DataTable({
            ajax: {
                url: "/Reports/GetInvoiceReports",
                type: 'POST',
                contentType: 'application/json',
                data: function (d) {
                    return JSON.stringify({
                        PropertiesIds: incomePropertiesIdsList,
                        UnitsIds: incomeUnitsIdsList,
                        LeaseStartDateFilter: incomeLeaseStartDateFilter,
                        LeaseEndDateFilter: incomeLeaseEndDateFilter,
                        InvoiceStartDateFilter: incomeInvoiceStartDateFilter,
                        InvoiceEndDateFilter: incomeInvoiceEndDateFilter,
                    });
                },
                dataSrc: "",
                error: function (xhr, error, thrown) {
                    console.error("Error occurred: ", error, thrown);
                    alert("An error occurred while loading the data table: " + error);
                }
            },
            initComplete: function () {
            },
            order: [[0, "asc"]],
            columns: [
                { data: "Invoice" },
                {
                    data: "StartDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                },
                {
                    data: "EndDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                },
                {
                    data: "Status",
                    render: function (data, type, row) {
                        return data ? "Yes" : "No";
                    }
                },
                { data: "Property" },
                { data: "Unit" },
                { data: "RentCharges" },
                {
                    data: "InvoiceDate",
                    render: function (data, type, row) {
                        return moment(data).format('MM/DD/YYYY');
                    }
                }
            ]
        });
    }
    
    function loadTaskRequestDataTable() {
        if ($.fn.dataTable.isDataTable('#expenseReportsTable')) {
            $('#expenseReportsTable').DataTable().clear().destroy();
        }

        objLeaseTable = $("#expenseReportsTable").DataTable({
            ajax: {
                url: "/Reports/GetTaskRequestReports",
                type: 'POST',
                contentType: 'application/json',
                data: function (d) {
                    return JSON.stringify({
                        PropertiesIds: expensePropertiesIdsList,
                        UnitsIds: expenseUnitsIdsList,
                        TaskStartDateFilter: expenseTaskStartDateFilter,
                        TaskEndDateFilter: expenseTaskEndDateFilter,
                        TaskDueStartDateFilter: expenseTaskDueStartDateFilter,
                        TaskDueEndDateFilter: expenseTaskDueEndDateFilter,
                    });
                },
                dataSrc: "",
                error: function (xhr, error, thrown) {
                    console.error("Error occurred: ", error, thrown);
                    alert("An error occurred while loading the data table: " + error);
                }
            },
            initComplete: function () {
            },
            order: [[0, "asc"]],
            columns: [
                { data: "Task" },
                {
                    data: "DueDate",
                    render: function (data, type, row) {
                        return data ? moment(data).format('MM/DD/YYYY') : '';
                    }
                },
                {
                    data: "StartDate",
                    render: function (data, type, row) {
                        return data ? moment(data).format('MM/DD/YYYY') : '';
                    }
                },
                {
                    data: "EndDate",
                    render: function (data, type, row) {
                        return data ? moment(data).format('MM/DD/YYYY') : '';
                    }
                },
                { data: "Property" },
                { data: "Unit" },
                { data: "Status" }
            ]
        });
    }


    function populateDropDowns() {
        $.ajax({
            url: '@Url.Action("GetProperties", "Communication")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                var incomePropertyDropdown = document.getElementById('incomePropertyFilter');
                data.forEach(function (item) {
                    var option = new Option(item.BuildingNo + " - " + item.BuildingName, item.AssetId);
                    incomePropertyDropdown.appendChild(option);
                });

                var expensePropertyDropdown = document.getElementById('expensePropertyFilter');
                data.forEach(function (item) {
                    var option = new Option(item.BuildingNo + " - " + item.BuildingName, item.AssetId);
                    expensePropertyDropdown.appendChild(option);
                });
                
                var allPropertyDropdown = document.getElementById('allPropertyFilter');
                data.forEach(function (item) {
                    var option = new Option(item.BuildingNo + " - " + item.BuildingName, item.AssetId);
                    allPropertyDropdown.appendChild(option);
                });

                var incomePropertyFilterOffcanvas = document.getElementById('incomePropertyFilterOffcanvas');
                data.forEach(function (item) {
                    var option = new Option(item.BuildingNo + " - " + item.BuildingName, item.AssetId);
                    incomePropertyFilterOffcanvas.appendChild(option);
                });
                
                var expensePropertyFilterOffcanvas = document.getElementById('expensePropertyFilterOffcanvas');
                data.forEach(function (item) {
                    var option = new Option(item.BuildingNo + " - " + item.BuildingName, item.AssetId);
                    expensePropertyFilterOffcanvas.appendChild(option);
                });
                
                var allPropertyFilterOffcanvas = document.getElementById('allPropertyFilterOffcanvas');
                data.forEach(function (item) {
                    var option = new Option(item.BuildingNo + " - " + item.BuildingName, item.AssetId);
                    allPropertyFilterOffcanvas.appendChild(option);
                });
            }
        });
    }

    function populateFinanceUnits(propertyIds) {
        if (propertyIds.length > 0) {
            $.ajax({
                url: '/Lease/GetUnitsDll',
                method: 'POST',
                data: { AssetIds: propertyIds },
                dataType: 'json',
                success: function (response) {
                    var units = response;
                    var $allUnitFilter = $('#allUnitFilter');
                    $allUnitFilter.empty();

                    units.forEach(function (unit) {
                        var option = `<option value="${unit.UnitId}">${unit.UnitName}</option>`;
                        $allUnitFilter.append(option);
                    });

                    var $allUnitFilterOffcanvas = $('#allUnitFilterOffcanvas');
                    $allUnitFilterOffcanvas.empty();

                    units.forEach(function (unit) {
                        var option = `<option value="${unit.UnitId}">${unit.UnitName}</option>`;
                        $allUnitFilterOffcanvas.append(option);
                    });

                },
                error: function (xhr, status, error) {
                    console.error('Error fetching units:', error);
                }
            });
        }
    }

    function populateIncomeUnitsOffcanvas(propertyIds) {
        if (propertyIds.length > 0) {
            $.ajax({
                url: '/Lease/GetUnitsDll',
                method: 'POST',
                data: { AssetIds: propertyIds },
                dataType: 'json',
                success: function (response) {
                    var units = response;
                    var $incomeUnitFilterOffcanvas = $('#incomeUnitFilterOffcanvas');
                    $incomeUnitFilterOffcanvas.empty();

                    units.forEach(function (unit) {
                        var option = `<option value="${unit.UnitId}">${unit.UnitName}</option>`;
                        $incomeUnitFilterOffcanvas.append(option);
                    });
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching units:', error);
                }
            });
        }
    }
    
    function populateExpenseUnits(propertyIds) {
        if (propertyIds.length > 0) {
            $.ajax({
                url: '/Lease/GetUnitsDll',
                method: 'POST',
                data: { AssetIds: propertyIds },
                dataType: 'json',
                success: function (response) {
                    var units = response;
                    var $expenseUnitFilterOffcanvas = $('#expenseUnitFilterOffcanvas');
                    $expenseUnitFilterOffcanvas.empty();

                    units.forEach(function (unit) {
                        var option = `<option value="${unit.UnitId}">${unit.UnitName}</option>`;
                        $expenseUnitFilterOffcanvas.append(option);
                    });

                    var $reportUnitFilter = $('#expenseUnitFilter');
                    $reportUnitFilter.empty();

                    units.forEach(function (unit) {
                        var option = `<option value="${unit.UnitId}">${unit.UnitName}</option>`;
                        $reportUnitFilter.append(option);
                    });

                },
                error: function (xhr, status, error) {
                    console.error('Error fetching units:', error);
                }
            });
        }
    }


    function applyIncomeFilters() {
        incomePropertiesIdsList = $("#incomePropertyFilterOffcanvas").val();
        incomeUnitsIdsList = $('#incomeUnitFilterOffcanvas').val();
        incomeLeaseStartDateFilter = parseDateRange('#incomeCreatedAtRange')?.start;
        incomeLeaseEndDateFilter = parseDateRange('#incomeCreatedAtRange')?.end;
        incomeInvoiceStartDateFilter = parseDateRange('#incomeCreatedInvoiceRange')?.start;
        incomeInvoiceEndDateFilter = parseDateRange('#incomeCreatedInvoiceRange')?.end;

        loadInvoiceDataTable();
    }

    function clearIncomeFilters() {
        $('#incomePropertyFilter').val('').trigger('change');
        $('#incomeUnitFilterOffcanvas').empty();
        $('#incomeCreatedAtRange').val('');
        $('#incomeCreatedAtRangeOffcanvas').val('');
        $('#incomeCreatedInvoiceRange').val('');
        $('#incomeCreatedInvoiceRangeOffcanvas').val('');
        
        loadInvoiceDataTable();
    }


    function applyExpenseFilters() {
        expensePropertiesIdsList = $('#expensePropertyFilterOffcanvas').val();
        expenseUnitsIdsList = $('#expenseUnitFilter').val();
        expenseTaskStartDateFilter = parseDateRange('#expenseCreatedAtRange')?.start;
        expenseTaskEndDateFilter = parseDateRange('#expenseCreatedAtRange')?.end;
        expenseTaskDueStartDateFilter = parseDateRange('#expenseCreatedDueRange')?.start;
        expenseTaskDueEndDateFilter = parseDateRange('#expenseCreatedDueRange')?.end;

        loadTaskRequestDataTable();
    }


    function clearExpenseFilters() {

        $('#expensePropertyFilter').val('').trigger('change');
        $('#expenseUnitFilter').empty();
        $('#expenseUnitFilterOffcanvas').empty();
        $('#expenseCreatedAtRange').val('');
        $('#expenseCreatedAtRangeOffcanvas').val('');
        $('#expenseCreatedDueRange').val('');
        $('#expenseCreatedDueRangeOffcanvas').val('');

        loadTaskRequestDataTable();
    }

    function applyAllFilters() {
        allPropertiesIdsList = $('#allPropertyFilterOffcanvas').val();
        allUnitsIdsList = $('#allUnitFilterOffcanvas').val();
        allFinanceStartDateFilter = parseDateRange('#incomeCreatedAtRange')?.start;
        allFinanceEndDateFilter = parseDateRange('#incomeCreatedAtRange')?.end;

        loadFinanceDataTable();
    }



    function clearAllFilters() {
        $('#allPropertyFilter').val('').trigger('change');
        $('#allUnitFilter').empty();
        $('#allUnitFilterOffcanvas').empty();
        $('#allCreatedAtRange').val('');
        $('#allCreatedAtRangeOffcanvas').val('');
        $('#allCreatedInvoiceRange').val('');
        $('#allCreatedInvoiceRangeOffcanvas').val('');

        loadFinanceDataTable();
    }
    // function applyAllFilters() {
    //     allPropertiesIdsList = $('#allPropertyFilterOffcanvas').val();
    //     allUnitsIdsList = $('#allUnitFilterOffcanvas').val();
    //     allFinanceStartDateFilter = parseDateRange('#incomeCreatedAtRange')?.start;
    //     allFinanceEndDateFilter = parseDateRange('#incomeCreatedAtRange')?.end;

    //     loadFinanceDataTable();
    // }



    // function clearAllFilters() {
    //     $('#allPropertyFilter').val('').trigger('change');
    //     $('#allUnitFilter').empty();
    //     $('#allUnitFilterOffcanvas').empty();
    //     $('#allCreatedAtRange').val('');
    //     $('#allCreatedAtRangeOffcanvas').val('');
    //     $('#allCreatedInvoiceRange').val('');
    //     $('#allCreatedInvoiceRangeOffcanvas').val('');

    //     loadFinanceDataTable();
    // }


</script>
