@using PMS_PropertyHapa.Models.DTO;
@model LeaseDto
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isEditMode = Model?.LeaseId > 0;
    if (isEditMode)
        ViewData["Title"] = "Edit Lease";

    else
        ViewData["Title"] = "Add Lease";

}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<style>

    .tenant-card {
        width: 10rem; /* Adjust width as needed */
        height: 10rem; /* Adjust height as needed */
        margin: 0.5rem; /* Adjust margin as needed */
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        border: 1px solid #ccc; /* Example border */
        border-radius: 5px; /* Example border radius */
        background-color: #f9f9f9; /* Example background color */
    }

    .lime-underline {
        height: 4px;
        background-color: black;
        width: 100%;
        margin-top: 20px;
        margin-bottom: 20px;
    }


    .thick-black-underline {
        height: 2px;
        background-color: black;
        width: 100%;
        margin: 20px 0;
    }

    #step2 .row {
        flex-wrap: nowrap;
    }

    #step2 .col-md-6 {
        flex: 0 0 50%;
        max-width: 50%;
    }


    .row {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 10px;
    }

    .small-square-card-container {
        margin: auto;
        flex: 0 0 18%;
        max-width: 18%;
        padding: 0 5px;
    }

    .small-square-card,
    .property-subtype-card {
        position: relative;
        width: 100%;
        overflow: hidden;
        border-radius: 5px;
        margin-top: 5px;
        font-size: 0.8rem;
    }

        .small-square-card::before,
        .property-subtype-card::before {
            content: '';
            display: block;
            padding-top: 100%;
        }

        .small-square-card .card-body,
        .property-subtype-card .card-body {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            display: flex;
            flex-direction: column;
            justify-content: center;
            text-align: center;
        }

        .small-square-card i,
        .property-subtype-card i {
            font-size: 1rem;
        }

    .selected {
        border: 3px solid #007bff;
        background-color: #e9ecef;
    }

    @@media (max-width: 768px) {
        .small-square-card-container {
            flex: 0 0 100%;
            max-width: 100%;
            padding: 0 5px;
            margin-bottom: 20px;
        }

        .row {
            gap: 5px;
        }

        .small-square-card,
        .property-subtype-card {
            margin-top: 10px;
            font-size: 0.9rem;
        }

        .f1-steps {
            flex-direction: column;
        }

        .f1-step-icon {
            font-size: 1rem;
        }

        .card-body {
            padding: 10px;
        }

        .form-navigation,
        .modal-footer {
            flex-direction: column-reverse;
        }

        .btn-next,
        .btn-previous,
        .closebutton,
        #saveOwner {
            width: 100%;
            margin-top: 10px;
        }

        .modal-dialog {
            margin: 20px;
        }

        .modal-content {
            padding: 10px;
        }

        @@media (max-width: 768px) {
            .row {
                justify-content: center;
            }

            @@media (max-width: 768px) and (min-width: 576px) {
                .row {
                    justify-content: space-between;
                }
            }

            @@media (max-width: 576px) {
                .row {
                    justify-content: center;
                }
            }
        }
    }



    @@media (max-width: 768px) {
        .f1-progress {
            display: none;
        }

        .small-square-card-container, .row {
            flex: 0 0 100%;
            max-width: 100%;
            padding: 0 15px;
            margin-bottom: 20px;
        }

        .row {
            gap: 5px;
        }

        .small-square-card, .property-subtype-card {
            margin-top: 10px;
            font-size: 0.9rem;
        }

        .form-navigation, .modal-footer {
            flex-direction: column-reverse;
        }

        .btn-next, .btn-previous, .closebutton, #saveOwner {
            width: 100%;
            margin-top: 10px;
        }

        .modal-dialog {
            margin: 20px;
        }

        .modal-content {
            padding: 10px;
        }
    }

</style>
<!-- Page Sidebar Ends-->
<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row align-items-center justify-content-between">
                <!-- Adjusted for alignment and distribution -->
                <div class="col-auto">
                    <!-- col-auto adjusts the width to its content -->
                    <h3>Add New Lease</h3>
                </div>
                <div class="col-auto">
                    <!-- col-auto adjusts the width to its content -->
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-0">
                            <!-- mb-0 removes the bottom margin -->
                            <li class="breadcrumb-item">
                                <a href="index.html">
                                    <i data-feather="home"></i>
                                </a>
                            </li>
                            <li class="breadcrumb-item">Lease</li>
                            <li class="breadcrumb-item active" aria-current="page">Create</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>


    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header pb-0">
                    </div>
                    <div class="card-body">
                        <form class="f1" method="post" id="multiStepForm">
                            <div class="f1-steps" style="display: flex; justify-content: space-between;">
                                <div class="f1-progress" style="position: absolute; width: 100%; bottom: 0;">
                                    <div class="f1-progress-line" id="progressLine">
                                        <div class="f1-progress-indicator" style="width: 0%; background-color: green; height: 100%;"></div>
                                    </div>

                                </div>
                                <div class="f1-step active" id="stepIndicator1" style="flex: 1; text-align: center;">
                                    <div class="f1-step-icon"><i>1</i></div>
                                    <p>Overview</p>
                                </div>
                                <div class="f1-step active" id="stepIndicator2" style="flex: 1; text-align: center;">
                                    <div class="f1-step-icon"><i>2</i></div>
                                    <p>Tenants</p>
                                </div>
                                <div class="f1-step active" id="stepIndicator3" style="flex: 1; text-align: center;">
                                    <div class="f1-step-icon"><i>3</i></div>
                                    <p>Rent</p>
                                </div>
                                <div class="f1-step active" id="stepIndicator4" style="flex: 1; text-align: center;">
                                    <div class="f1-step-icon"><i>4</i></div>
                                    <p>Deposit</p>
                                </div>
                                <div class="f1-step active" id="stepIndicator5" style="flex: 1; text-align: center;">
                                    <div class="f1-step-icon"><i>5</i></div>
                                    <p>Late Fees</p>
                                </div>
                                <div class="f1-step" id="stepIndicator6" style="flex: 1; text-align: center;">
                                    <div class="f1-step-icon"><i>6</i></div>
                                    <p>Status</p>
                                </div>
                            </div>
                            <fieldset id="step1" class="step-section active">
                                <div class="container">
                                    <h3 class="text-center my-4">New Lease</h3>

                                    <div class="d-flex flex-column align-items-center">
                                        <div class="col-md-6 mb-3">
                                            <label for="propertyDropdown" class="form-label">Choose Property</label>
                                            <select id="propertyDropdown" class="form-select">

                                                <!-- Random property options -->
                                                <option value="property1">Property 1</option>
                                                <option value="property2">Property 2</option>
                                                <option value="property3">Property 3</option>
                                            </select>
                                        </div>

                                        <div class="col-md-6 mb-3">
                                            <label for="unitDropdown" class="form-label">Choose Units</label>
                                            <select id="unitDropdown" class="form-select">
                                                <!-- Random unit options -->
                                                <option value="unit1">Unit 1</option>
                                                <option value="unit2">Unit 2</option>
                                                <option value="unit3">Unit 3</option>
                                            </select>
                                        </div>

                                        <div class="thick-black-underline w-100 my-3"></div>

                                        <h4 class="text-center my-3">Lease Terms</h4>
                                        <div class="d-flex flex-wrap justify-content-center">
                                            <!-- Fixed Term Card -->
                                            <div class="card m-2" style="width: 10rem; height: 10rem;" id="fixedTermCard">
                                                <div class="card-body d-flex justify-content-center align-items-center">
                                                    <h5 class="card-title text-center">Fixed Term</h5>
                                                </div>
                                            </div>
                                            <!-- Month-to-Month Card -->
                                            <div class="card m-2" style="width: 10rem; height: 10rem;" id="monthToMonthCard">
                                                <div class="card-body d-flex justify-content-center align-items-center">
                                                    <h5 class="card-title text-center">Month-to-Month</h5>
                                                </div>
                                            </div>
                                            <input type="hidden" id="leaseId" value="@Model?.LeaseId" />
                                            <input type="hidden" id="hiddenTenantId" name="TenantId" value="@Model?.TenantId">


                                        </div>


                                        <div class="row">
                                            <div class="d-flex justify-content-between align-items-center w-100 my-3">
                                                <div class="form-group w-40 pr-1">
                                                    <label for="startDate">Start Date</label>
                                                    <input type="date" id="startDate" class="form-control" value="@Model?.StartDate.ToString("yyyy-MM-dd")">
                                                </div>

                                                <div class="form-group w-40 pl-1">
                                                    <label for="endDate">End Date</label>
                                                    <input type="date" id="endDate" class="form-control" value="@Model?.EndDate.ToString("yyyy-MM-dd")">
                                                </div>
                                            </div>
                                        </div>


                                        <div class="custom-control custom-switch my-3">
                                            <input type="checkbox" class="custom-control-input" id="customSwitch1" value="@Model?.IsMonthToMonth">
                                            <label class="custom-control-label" for="customSwitch1">Roll over to month to month at the end of the term</label>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>


                            <fieldset id="step2" class="step-section">
                                <!-- ...existing code... -->
                                <div class="container my-4">
                                    <div class="d-flex justify-content-center">
                                        <div id="tenantsContainer" class="row">
                                            <!-- Newly added tenant cards will go here -->
                                        </div>
                                        <div class="card" style="width: 10rem; height: 10rem; cursor: pointer;" id="addTenantCard" data-toggle="modal">
                                            <div class="card-body d-flex justify-content-center align-items-center flex-column">
                                                <i class="fa fa-plus fa-2x"></i>
                                                <p class="card-title mt-2">Add Tenant</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- ...existing code... -->
                            </fieldset>



                            <fieldset id="step3" class="step-section">
                                <h2 class="text-center mb-5">Rent Charges</h2>
                                <div class="container charge-section">
                                    <div class="text-center">
                                        <hr class="my-4 mb-2 mt-2" style="width: 100%; border-top: 2px solid #000;" />

                                        <p>When do you want to start charging rent?</p>
                                        <input type="date" class="form-control w-25 d-inline-block mb-3" id="firstRentDate">

                                        <p>How often do you charge rent?</p>
                                        <select class="form-control w-25 d-inline-block mb-3" id="rentFrequency">
                                            <option value="" disabled selected>Please select a value</option>
                                            <option value="daily">Daily</option>
                                            <option value="weekly">Weekly</option>
                                            <option value="monthly" selected>Monthly</option>
                                        </select>

                                        <p>What are your rent charges?</p>
                                        <div id="rentChargesContainer">
                                            <!-- Existing rent charge entry will be cloned from here -->
                                        </div>
                                        <button type="button" class="btn btn-primary" id="addAnotherCharge">+</button>
                                    </div>
                                </div>
                            </fieldset>


                            <fieldset id="step4" class="step-section">
                                <h4 class="text-center my-3">Security Funds</h4>
                                <p class="text-center my-3">Will you be holding a security deposit on this lease?</p>
                                <div class="d-flex flex-wrap justify-content-center">
                                    <!-- Yes Card -->
                                    <div class="card m-2" style="width: 10rem; height: 10rem; cursor:pointer;" id="yesSecurityFund">
                                        <div class="card-body d-flex flex-column justify-content-center align-items-center">
                                            <i class="fas fa-check fa-2x"></i>
                                            <h5 class="card-title text-center">Yes</h5>
                                        </div>
                                    </div>
                                    <!-- No Card -->
                                    <div class="card m-2" style="width: 10rem; height: 10rem; cursor:pointer;" id="noSecurityFund">
                                        <div class="card-body d-flex flex-column justify-content-center align-items-center">
                                            <i class="fas fa-times fa-2x"></i>
                                            <h5 class="card-title text-center">No</h5>
                                        </div>
                                    </div>
                                </div>

                                <div class="d-flex flex-wrap justify-content-center">
                                    <div id="additionalDataSection" style="display: none;">
                                        <div class="row justify-content-center">
                                            <div class="col-sm-12 text-center">
                                                <p>Tell us more about the security deposits you are holding</p>
                                            </div>
                                        </div>
                                        <div class="deposit-details-container" id="securityDepositsContainer">
                                            <!-- Security deposit detail inputs are dynamically added here -->
                                        </div>
                                        <div class="text-left my-3">
                                            <div class="row">
                                                <div class="col-12 d-flex justify-content-start ml-3">
                                                    <button type="button" class="btn btn-primary" id="addSecurityDeposit">Add Security Deposit</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>


                            <div id="step5" class="step-section">
                                <h4 class="text-center my-3">Late Fees</h4>
                                <p class="text-center my-3">Do you charge late fees for late rent?</p>
                                <div class="d-flex flex-wrap justify-content-center">
                                    <!-- Yes Card -->
                                    <div class="card m-2" style="width: 10rem; height: 10rem; cursor:pointer;" id="yesLateFees">
                                        <div class="card-body d-flex flex-column justify-content-center align-items-center">
                                            <i class="fas fa-check fa-2x"></i>
                                            <h5 class="card-title text-center">Yes</h5>
                                        </div>
                                    </div>
                                    <!-- No Card -->
                                    <div class="card m-2" style="width: 10rem; height: 10rem; cursor:pointer;" id="noLateFees">
                                        <div class="card-body d-flex flex-column justify-content-center align-items-center">
                                            <i class="fas fa-times fa-2x"></i>
                                            <h5 class="card-title text-center">No</h5>
                                        </div>
                                    </div>
                                </div>
                                <div id="lateFeesOptions" class="mt-4" style="display: none;">
                                    <div class="container">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="lateFeePolicy" id="usePropertyPolicy" value="usePropertyPolicy">
                                                    <label class="form-check-label" for="usePropertyPolicy">
                                                        Use property late fees policy
                                                    </label>
                                                </div>
                                                <div class="form-check">
                                                    <input class="form-check-input" type="radio" name="lateFeePolicy" id="specifyPolicy" value="specifyPolicy">
                                                    <label class="form-check-label" for="specifyPolicy">
                                                        Specify late fees policy for this lease
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="specifyPolicyFields" style="display: none;" class="mb-4">
                                        <div class="row justify-content-center mt-3">
                                            <div class="col-sm-3">
                                                <select class="form-control">
                                                    <option value="" disabled selected hidden>Select</option>
                                                    <option value="rental">Accounts Payable</option>
                                                    <option value="storage">Storage Rent</option>
                                                    <!-- Add more options here -->
                                                </select>
                                            </div>
                                            <div class="col-md-4">
                                                <input type="text" class="form-control" placeholder="Description" id="description">
                                            </div>
                                            <div class="col-md-3">
                                                <input type="text" class="form-control" placeholder="Amount" id="amount">
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>




                            <fieldset id="step6" class="step-section">
                                <h4 class="text-center my-3">Define Your Lease</h4>
                                <p class="text-center my-3">Is the Lease Signed?</p>
                                <div class="d-flex flex-wrap justify-content-center">
                                    <!-- Signed Card -->
                                    <div class="card m-2" style="width: 10rem; height: 10rem; cursor:pointer;" id="Signed">
                                        <div class="card-body d-flex justify-content-center align-items-center flex-column">
                                            <i class="fas fa-signature fa-2x"></i>
                                            <h5 class="card-title text-center">Signed</h5>
                                        </div>
                                    </div>
                                    <!-- Not Signed Card -->
                                    <div class="card m-2" style="width: 10rem; height: 10rem; cursor:pointer;" id="UnSigned">
                                        <div class="card-body d-flex justify-content-center align-items-center flex-column">
                                            <i class="fas fa-times fa-2x"></i>
                                            <h5 class="card-title text-center">Not Signed</h5>
                                        </div>
                                    </div>
                                </div>
                                <!-- Image Upload (Initially Hidden) -->
                                <div id="signatureUploadSection" style="display:none;" class="text-center mt-4">
                                    <p class="text-center">Upload Signed Document:</p>
                                    <input type="file" id="signatureImageUpload" accept="image/*">
                                </div>
                                <div id="signaturePadSection" style="display:none;" class="text-center mt-4">
                                    <p>Sign Below:</p>
                                    <canvas id="signatureCanvas" width="400" height="200" style="border:1px solid #ccc;"></canvas>
                                    <button type="button" id="clearSignature" class="btn btn-secondary mt-2">Clear</button>
                                </div>
                                <input type="hidden" id="SignatureImagePath">
                            </fieldset>




                            <!-- Hidden inputs for AssetDTO -->
                            <input type="hidden" name="SelectedPropertyType" id="SelectedPropertyType">
                            <input type="hidden" name="SelectedSubtype" id="SelectedSubtype">
                            <input type="hidden" name="SelectedBankAccountOption" id="SelectedBankAccountOption">
                            <input type="hidden" name="SelectedReserveFundsOption" id="SelectedReserveFundsOption">
                            <input type="hidden" name="SelectedOwnershipOption" id="SelectedOwnershipOption">
                            <input type="hidden" id="existingSignatureImagePath" value="@Model?.SignatureImagePath">
                            <!-- Hidden inputs for owner details -->
                            <input type="hidden" name="OwnerName" id="OwnerName">
                            <input type="hidden" name="OwnerCompanyName" id="OwnerCompanyName">
                            <input type="hidden" name="OwnerAddress" id="OwnerAddress">
                            <input type="hidden" name="OwnerStreet" id="OwnerStreet">
                            <input type="hidden" name="OwnerZipcode" id="OwnerZipcode">
                            <input type="hidden" name="OwnerCity" id="OwnerCity">
                            <input type="hidden" name="OwnerCountry" id="OwnerCountry">



                            <div class="form-navigation" style="text-align: right;">
                                <button type="button" class="btn btn-secondary btn-previous" style="display:none;">Previous</button>
                                <button type="button" id="submitForm" class="btn btn-primary btn-next">Next</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
        </div>
    </div>
    <!-- Container-fluid Ends-->
</div>


<div id="addOwnerModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Owner</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="ownerForm">
                    <div class="form-group">
                        <label for="ownerName">Owner Name</label>
                        <input type="text" class="form-control" id="ownerName" placeholder="Enter owner name">
                    </div>
                    <div class="form-group">
                        <label for="ownerCompanyName">Owner Company Name</label>
                        <input type="text" class="form-control" id="ownerCompanyName" placeholder="Enter company name">
                    </div>
                    <div class="form-group">
                        <label for="ownerAddress">Owner Address</label>
                        <input type="text" class="form-control" id="ownerAddress" placeholder="Enter address">
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="ownerStreet">Street</label>
                            <input type="text" class="form-control" id="ownerStreet" placeholder="Enter street">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="ownerZipcode">Zip Code</label>
                            <input type="text" class="form-control" id="ownerZipcode" placeholder="Enter zipcode">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="ownerCity">City</label>
                            <input type="text" class="form-control" id="ownerCity" placeholder="Enter city">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="ownerCountry">Country</label>
                            <input type="text" class="form-control" id="ownerCountry" placeholder="Enter country">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary closebutton" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveOwner">Save</button>
            </div>
        </div>
    </div>
</div>


<!-- Add Tenant Modal -->
<div id="addNewTenantModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="addNewTenantModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addNewTenantModalLabel">Add New Tenant</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addTenantForm">
                    <!-- Essential Tenant Fields -->
                    <div class="form-group">
                        <label for="tenantFirstName">First Name</label>
                        <input type="text" class="form-control" id="tenantFirstName" name="Tenant.FirstName" placeholder="Enter first name">
                    </div>
                    <div class="form-group">
                        <label for="tenantLastName">Last Name</label>
                        <input type="text" class="form-control" id="tenantLastName" name="Tenant.LastName" placeholder="Enter last name">
                    </div>
                    <div class="form-group">
                        <label for="tenantPhoneNumber">Phone Number</label>
                        <input type="tel" class="form-control" id="tenantPhoneNumber" name="Tenant.PhoneNumber" placeholder="Enter phone number">
                    </div>
                    <div class="form-group">
                        <label for="tenantEmailAddress">Email Address</label>
                        <input type="email" class="form-control" id="tenantEmailAddress" name="Tenant.EmailAddress" placeholder="Enter email">
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveNewTenant">Save Tenant</button>
            </div>
        </div>
    </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/signature_pad/1.5.3/signature_pad.min.js"></script>
<script>
    var rentCharges = @Html.Raw(Json.Serialize(Model?.RentCharges)) || [];
    var securityDeposits = @Html.Raw(Json.Serialize(Model?.SecurityDeposits)) || [];


    function populateRentCharges() {
        $("#rentChargesContainer").html(""); // Clear existing entries
        rentCharges.forEach(function (charge, index) {
            addRentChargeEntry(charge.Amount, charge.Description, charge.RentDate, charge.RentPeriod, index);
        });
    }

    function addRentChargeEntry(amount, description, rentDate, rentPeriod, index) {
        var formattedRentDate = rentDate && rentDate != '0001-01-01T00:00:00' ? rentDate.substr(0, 10) : '';
        // Creating the HTML structure for a new rent charge entry
        const entryHtml = `
                <div class="rent-charge-entry" data-index="${index}">

                    <input type="text" class="form-control mb-2" name="RentCharges[${index}].Description" placeholder="Description" value="${description}">

                    <input type="number" class="form-control mb-2" name="RentCharges[${index}].Amount" placeholder="Amount" value="${amount}">

                            <input type="date" class="form-control mb-2" name="RentCharges[${index}].RentDate" value="${formattedRentDate}">

                    <select class="form-control mb-2" name="RentCharges[${index}].RentPeriod">
                        <option value="daily" ${rentPeriod === 'daily' ? 'selected' : ''}>Daily</option>
                        <option value="weekly" ${rentPeriod === 'weekly' ? 'selected' : ''}>Weekly</option>
                        <option value="monthly" ${rentPeriod === 'monthly' ? 'selected' : ''}>Monthly</option>
                    </select>

                    <button type="button" class="btn btn-danger remove-charge" onclick="removeChargeEntry(this)">x</button>
                </div>
            `;

        // Appending the new entry to the 'rentChargesContainer'
        $("#rentChargesContainer").append(entryHtml);
    }

    function removeChargeEntry(button) {
        // Removes the closest '.rent-charge-entry' parent of the button that triggered the event
        $(button).closest('.rent-charge-entry').remove();
    }

    var signaturePad = new SignaturePad(document.getElementById('signatureCanvas'));

    $('#Signed, #UnSigned').on('click', function () {
        // Remove 'selected' class from both options
        $('#Signed, #UnSigned').removeClass('selected');

        // Add 'selected' class to the clicked option
        $(this).addClass('selected');

        // Hide both sections initially
        $('#signatureUploadSection, #signaturePadSection').hide();

        // Show the relevant section based on the selection
        if ($(this).attr('id') === 'Signed') {
            $('#signatureUploadSection').fadeIn();
        } else {
            $('#signaturePadSection').fadeIn();
        }
    });

    $('#UnSigned').on('click', function () {
        if (signaturePad) {
            signaturePad.clear();
            signaturePad = new SignaturePad(document.getElementById('signatureCanvas'));
        }
    });



    $(document).ready(function () {
        // Determine if you are in edit mode based on the existence of security deposits
        var hasSecurityDeposits = securityDeposits.length > 0;

        // Initial setup based on whether security deposits exist
        if (hasSecurityDeposits) {
            $('#yesSecurityFund').addClass('selected');
            $('#additionalDataSection').show();
        } else {
            $('#noSecurityFund').addClass('selected');
            $('#additionalDataSection').hide();
        }

        // Populate existing security deposits if any




        // Event handlers for the Yes/No buttons
        $('#yesSecurityFund, #noSecurityFund').on('click', function () {
            $('#yesSecurityFund, #noSecurityFund').removeClass('selected');
            $(this).addClass('selected');
            var displaySection = $(this).is('#yesSecurityFund') ? 'slideDown' : 'slideUp';
            $('#additionalDataSection')[displaySection]();
        });

        populateSecurityDeposits();
        populateRentCharges();
    });

    // Remove a security deposit entry
    $(document).on('click', '.remove-deposit', function () {
        $(this).closest('.security-deposit-entry').remove();
    });

    function populateSecurityDeposits() {
        securityDeposits.forEach(function (deposit, index) {
            addSecurityDepositEntry(deposit.Amount, deposit.Description, index);
        });
    }

    function addSecurityDepositEntry(amount, description, index) {
        const entryHtml = `
                <div class="deposit-detail row mb-3" data-index="${index}">
                    <div class="col-sm-4">
                        <input type="text" class="form-control mb-2" name="SecurityDeposits[${index}].Description" placeholder="Description" value="${description}">
                    </div>
                    <div class="col-sm-4">
                        <input type="number" class="form-control mb-2" name="SecurityDeposits[${index}].Amount" placeholder="Amount" value="${amount}">
                    </div>
                    <div class="col-sm-4">
                        <button type="button" class="btn btn-danger remove-deposit">Remove</button>
                    </div>
                </div>`;
        $("#securityDepositsContainer").append(entryHtml);
    }

  

    const Toast = Swal.mixin({
        toast: true,
        position: 'top-end',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
    });





    $(document).ready(function () {

        var currentStep = 1;
        var maxSteps = 6;
        updateStepVisibility(currentStep);
        updateProgressBar(currentStep);

        const stepValidations = [
            {
                step: 1,
                validate: function () {
                    return ($('#propertyDropdown').val() && $('#unitDropdown').val() &&
                        ($('#fixedTermCard').hasClass('selected') || $('#monthToMonthCard').hasClass('selected')) &&
                        $('#startDate').val() && $('#endDate').val())
                },
                message: 'Please complete all fields in the Overview section.'
            },
            {
                step: 2,
                validate: function () {
                    return $('#tenantsContainer .tenant-card').length > 0;
                },
                message: 'Please add at least one tenant.'
            },
            {
                step: 3,
                validate: function () {
                    var isValidDate = $('#firstRentDate').val() !== '';
                    var isValidFrequency = $('#rentFrequency').val() !== null && $('#rentFrequency').val() !== '';

                    var isValidCharges = false;
                    $('.rent-charge-entry').each(function () {
                        var type = $(this).find('.charge-type').val() !== '';
                        var description = $(this).find('.charge-description').val() !== '';
                        var amount = $(this).find('.charge-amount').val() !== '';

                        if (type && description && amount) {
                            isValidCharges = true;
                            return false;
                        }
                    });

                    return isValidDate && isValidFrequency && isValidCharges;
                },
                message: 'Please specify the first rent date, rent frequency, and at least one rent charge detail with all fields filled.'
            },
            {
                step: 4,
                validate: function () {
                    return !$('#yesSecurityFund').hasClass('selected') || $('.deposit-detail').length > 0;
                },
                message: 'You selected to hold a security deposit but did not provide details.'
            },
            {
                step: 5,
                validate: function () {
                    return !$('#yesLateFees').hasClass('selected') || $('input[name="lateFeePolicy"]:checked').val();
                },
                message: 'Please specify the late fees policy.'
            },
            {
                step: 6,
                validate: function () {
                    return $('#Signed').hasClass('selected') || $('#UnSigned').hasClass('selected');
                },
                message: 'Please specify if the lease is signed.'
            }
        ];

        function validateCurrentStep(step) {
            let validation = stepValidations.find(v => v.step === step);
            if (validation && !validation.validate()) {
                Toast.fire({
                    icon: 'error',
                    title: validation.message
                });
                return false;
            }
            return true;
        }

        $('.btn-next').on('click', function () {
            // Validate current step before moving to the next
            if (validateCurrentStep(currentStep)) {
                if (currentStep < maxSteps) {
                    // Move to next step if not the last step
                    currentStep++;
                    updateStepVisibility(currentStep);
                    updateProgressBar(currentStep);
                } else {
                    submitLeaseForm();
                }
            }
        });

        $('.btn-previous').on('click', function () {
            if (currentStep > 1) {
                currentStep--;
                updateStepVisibility(currentStep);
                updateProgressBar(currentStep);
            }
        });

        function updateStepVisibility(step) {
            $('.step-section').hide().eq(step - 1).show();
            $('.f1-step').removeClass('active').eq(step - 1).addClass('active');
            $('.btn-previous').toggle(step !== 1);
            $('#submitForm').text(step === maxSteps ? 'Submit' : 'Next');
        }

        function updateProgressBar(step) {
            var progressPercentage = (step / maxSteps) * 100;
            $('#progressLine .f1-progress-indicator').css('width', progressPercentage + '%');
        }

        var isFixedTerm = '@Model?.IsFixedTerm' ? '@Model?.IsFixedTerm'.toLowerCase() === 'true' : null;
        if (isFixedTerm) {
            $('#fixedTermCard').addClass('selected');
        } else {
            $('#monthToMonthCard').addClass('selected');
        }

        var tenants = [{
            TenantId: "@Model?.TenantId", // Adjust based on actual data
            FirstName: "@Model?.Tenant?.FirstName", // Adjust these fields based on your actual model
            LastName: "@Model?.Tenant?.LastName",
            PhoneNumber: "@Model?.Tenant?.PhoneNumber",
            EmailAddress: "@Model?.Tenant?.EmailAddress"
        }];

        $(document).ready(function () {
            var isEditMode = $('#leaseId').val() && $('#leaseId').val() > 0;

            // Only attempt to display tenants if in edit mode
            if (isEditMode && tenants && tenants.length > 0) {
                tenants.forEach(function (tenant) {
                    var tenantCardHtml = '<div class="tenant-card mr-5">' +
                        '<div class="card-body">' +
                        '<h5 class="card-title">' + tenant.FirstName + ' ' + tenant.LastName + '</h5>' +
                        '<p>' + tenant.EmailAddress + '</p>' +
                        '<p>' + tenant.PhoneNumber + '</p>' +
                        '</div>' +
                        '</div>';
                    $('#tenantsContainer').append(tenantCardHtml);
                });

              
                $('#tenantsContainer').show();
            } else {
           
                $('#tenantsContainer').hide();
            }
        });





        $('#yesSecurityFund').click(function () {
            $(this).addClass('selected');
            $('#noSecurityFund').removeClass('selected');
            $('#additionalDataSection').show();
        });

        // Click event handler for the "No" card to hide the security deposits section
        $('#noSecurityFund').click(function () {
            $(this).addClass('selected');
            $('#yesSecurityFund').removeClass('selected');
            $('#additionalDataSection').hide();
        });


    });


    $(document).ready(function () {
        // Click event for Fixed Term card
        $('#fixedTermCard').on('click', function () {
         
            $(this).toggleClass('selected');
         
            $('#monthToMonthCard').removeClass('selected');
        });

       
        $('#monthToMonthCard').on('click', function () {
          
            $(this).toggleClass('selected');
    
            $('#fixedTermCard').removeClass('selected');
        });
    });





    $(document).ready(function () {
        // Function to initialize the DataTable


        $('#addTenantCard').on('click', function () {

            $('#addNewTenantModal').modal('show');
        });
    });

    function updateTenant(tenantId) {
        window.location.href = `/Tenant/AddTenant?tenantId=${tenantId}`;
    }



    let rentChargeIndex = 0;
    let securityDepositIndex = 0;

    document.getElementById('addAnotherCharge').addEventListener('click', function () {
        const container = document.getElementById('rentChargesContainer');
        const newEntryHtml = `
                            <div class="form-row d-flex flex-wrap justify-content-center mb-3 rent-charge-entry">
                                <div class="col-sm-3">
                                    <select class="form-control charge-type" name="RentCharges[${rentChargeIndex}].Type">
                                        <option value="" disabled selected hidden>Select</option>
                                        <option value="rental">Rental Income</option>
                                        <option value="storage">Storage Rent</option>
                                    </select>
                                </div>
                                <div class="col-sm-3">
                                    <input type="text" class="form-control charge-description" name="RentCharges[${rentChargeIndex}].Description" placeholder="Add description">
                                </div>
                                <div class="col-sm-3">
                                    <input type="text" class="form-control charge-amount" name="RentCharges[${rentChargeIndex}].Amount" placeholder="Amount">
                                </div>
                                <div class="col-sm-3">
                                    <button type="button" class="btn btn-danger remove-charge">Remove</button>
                                </div>
                            </div>`;
        container.insertAdjacentHTML('beforeend', newEntryHtml);
        rentChargeIndex++;
    });

    $(document).ready(function () {
        $('#yesSecurityFund, #noSecurityFund').on('click', function () {
            // Remove 'selected' class from both cards
            $('#yesSecurityFund, #noSecurityFund').removeClass('selected');
            // Add 'selected' class to clicked card
            $(this).addClass('selected');

            // Toggle additional data section based on selection
            if ($(this).attr('id') === 'yesSecurityFund') {
                $('#additionalDataSection').slideDown();
            } else {
                $('#additionalDataSection').slideUp();
            }
        });


        $('#addSecurityDeposit').on('click', function () {
            // Example of adding a new deposit detail entry - Adjust according to your specific needs
            const newDepositEntry = `
                                <div class="row deposit-detail">
                                    <div class="col-sm-4">
                                        <input type="text" class="form-control" placeholder="Description">
                                    </div>
                                    <div class="col-sm-3">
                                        <input type="text" class="form-control" placeholder="Amount">
                                    </div>
                                    <div class="col-sm-1">
                                        <button type="button" class="btn-sm btn-remove-deposit btn btn-danger">&times;</button>
                                    </div>
                                </div>`;
            $('#securityDepositsContainer').append(newDepositEntry);
        });

        // Optionally, handle removal of deposit details
        $(document).on('click', '.btn-remove-deposit', function () {
            $(this).closest('.deposit-detail').remove();
        });
    });

    document.addEventListener('click', function (event) {
        if (event.target.classList.contains('remove-charge')) {
            event.target.closest('.rent-charge-entry').remove();
        } else if (event.target.classList.contains('btn-remove-row')) {
            event.target.closest('.security-deposit-entry').remove();
        }
    });

    $(document).ready(function () {
        function updateRemoveButtonVisibility() {
            if ($('.deposit-detail').length > 1) {
                $('.deposit-detail .btn-remove-row').show();
            } else {
                $('.deposit-detail .btn-remove-row').hide();
            }
        }

        $('#addDepositDetail').on('click', function (e) {
            e.preventDefault();
            var newRow = $('.deposit-detail:last').clone(true);
            newRow.find('input').val('');
            newRow.find('select').val('');
            $('.deposit-details-container').append(newRow);
            $('<div class="lime-underline"></div>').insertBefore(newRow);
            updateRemoveButtonVisibility();
        });

        $('.deposit-details-container').on('click', '.btn-remove-row', function (e) {
            e.preventDefault();
            $(this).closest('.deposit-detail').prev('.lime-underline').remove();
            $(this).closest('.deposit-detail').remove();
            updateRemoveButtonVisibility();
        });

        updateRemoveButtonVisibility();
    });



    $(document).ready(function () {
        $('#yesLateFees').on('click', function () {
            $(this).addClass('selected');
            $('#noLateFees').removeClass('selected');
            $('#lateFeesOptions').show();
        });

        // Card click event for "No" selection
        $('#noLateFees').on('click', function () {
            $(this).addClass('selected');
            $('#yesLateFees').removeClass('selected');
            $('#lateFeesOptions').hide();
            $('#specifyPolicyFields').hide();
        });

        $('input[type="radio"][name="lateFeePolicy"]').on('change', function () {
            if ($('#specifyPolicy').is(':checked')) {
                $('#specifyPolicyFields').show();
            } else {
                $('#specifyPolicyFields').hide();
            }
        });
    });



    function submitLeaseForm() {
        var appTenantId = localStorage.getItem('AppTenantId');
        var leaseId = $('#leaseId').val();
        var isEditMode = leaseId && leaseId > 0;
        var url = isEditMode ? '/Lease/Update/' + leaseId : '/Lease/Create';
        var formData = new FormData(document.getElementById('multiStepForm'));

        // Append additional fields to FormData
        formData.append('AppTenantId', appTenantId);
        formData.append('StartDate', $('#startDate').val());
        formData.append('EndDate', $('#endDate').val());
        formData.append('IsSigned', $('#Signed').hasClass('selected') ? 'true' : 'false');
        formData.append('IsFixedTerm', $('#fixedTermCard').hasClass('selected') ? 'true' : 'false');
        formData.append('IsMonthToMonth', $('#monthToMonthCard').hasClass('selected') ? 'true' : 'false');
        formData.append('HasSecurityDeposit', $('#yesSecurityFund').hasClass('selected') ? 'true' : 'false');
        formData.append('LateFeesPolicy', $('#yesLateFees').hasClass('selected') ? 'true' : 'false');

        // Append Rent Charges and Security Deposits
        appendRentChargesToFormData(formData);
        appendSecurityDepositsToFormData(formData);

        // Handle signature data and submit form data after signature is processed
        appendSignatureData(formData, function (updatedFormData) {
            sendAjaxRequest(url, updatedFormData);
        });
    }

    function appendRentChargesToFormData(formData) {
        $('#rentChargesContainer .rent-charge-entry').each(function (index) {
            formData.append(`RentCharges[${index}].Description`, $(this).find('[name$=".Description"]').val());
            formData.append(`RentCharges[${index}].Amount`, $(this).find('[name$=".Amount"]').val());
            formData.append(`RentCharges[${index}].RentDate`, $(this).find('[name$=".RentDate"]').val());
            formData.append(`RentCharges[${index}].RentPeriod`, $(this).find('[name$=".RentPeriod"]').val());
        });
    }

    function appendSecurityDepositsToFormData(formData) {
        $('#securityDepositsContainer .deposit-detail').each(function (index) {
            // Utilize the name attribute structure you've established
            formData.append(`SecurityDeposits[${index}].Description`, $(this).find('[name$=".Description"]').val());
            formData.append(`SecurityDeposits[${index}].Amount`, $(this).find('[name$=".Amount"]').val());
        });
    }

    function appendSignatureData(formData, callback) {
        if ($('#Signed').hasClass('selected')) {
            var fileInput = document.getElementById('signatureImageUpload');
            if (fileInput.files.length > 0) {
                var file = fileInput.files[0];
                convertFileToBase64(file, function (base64String) {
                    formData.append('SignatureImagePath', base64String);
                    callback(formData);
                });
            }
        } else if ($('#UnSigned').hasClass('selected') && !signaturePad.isEmpty()) {
            var signatureData = signaturePad.toDataURL();
            formData.append('SignatureImagePath', signatureData);
            callback(formData);
        } else {
            callback(formData);
        }
    }


    function convertFileToBase64(file, callback) {
        var reader = new FileReader();
        reader.onload = function (e) {
            callback(e.target.result);
        };
        reader.readAsDataURL(file);
    }


    function sendAjaxRequest(url, formData) {
        $.ajax({
            url: url,
            type: 'POST',
            processData: false,
            contentType: false,
            data: formData,
            success: function (response) {
                Swal.fire('Success', 'Lease successfully saved.', 'success').then(function () {
                    window.location.href = '/Lease/Index';
                });
            },
            error: function (xhr, status, error) {
                Toast.fire({ icon: 'error', title: 'An error occurred: ' + error });
            }
        });
    }




    $(document).ready(function () {
        // Initialize the signature pad
        var signaturePad = new SignaturePad(document.getElementById('signatureCanvas'));
        var isEditMode = $('#leaseId').val() && $('#leaseId').val() > 0;

        // Check edit mode to decide on selection states
        if (isEditMode) {
            // Implement your logic for edit mode here, if needed
            // For example, selecting a specific card based on data
        } else {

            $('.card').removeClass('selected');
        }

        // Clear button functionality for the signature pad
        $('#clearSignature').on('click', function () {
            if (signaturePad) {
                signaturePad.clear();
            }
        });

        $('#Signed, #UnSigned').click(function () {
            $('.signature-option').hide();
            if ($(this).attr('id') === 'Signed') {
                $('#signatureUploadSection').show();
            } else {
                $('#signaturePadSection').show();
            }
        });


        $('#submitForm').click(function (e) {
            e.preventDefault();
            submitLeaseForm();
        });


        function submitLeaseForm() {
            debugger;
            var formData = new FormData(document.getElementById('multiStepForm'));


            var signatureOption = $('#Signed').hasClass('selected') ? 'Signed' : 'UnSigned';


            var isSigned = (signatureOption === 'Signed' && $('#signatureImageUpload')[0].files.length > 0) ||
                (signatureOption === 'UnSigned' && !signaturePad.isEmpty());
            formData.append('IsSigned', isSigned ? 'true' : 'false');

            if (signatureOption === 'Signed' && $('#signatureImageUpload')[0].files.length > 0) {
                var file = $('#signatureImageUpload')[0].files[0];
                fileToBase64(file, function (base64String) {
                    formData.append('SignatureData', base64String);

                });
            }

            else if (signatureOption === 'UnSigned' && !signaturePad.isEmpty()) {
                var signatureData = signaturePad.toDataURL();
                formData.append('SignatureData', signatureData);

            } else {

            }
        }

        function convertFileToBase64(file, callback) {
            var reader = new FileReader();
            reader.onload = function (e) {
                callback(e.target.result);
            };
            reader.readAsDataURL(file);
        }

        function appendAdditionalFields(formData) {
            // Append logic for additional form data as needed
            formData.append('IsSigned', $('#Signed').hasClass('selected') ? 'true' : 'false');
            // Add other fields as necessary
        }

    });


    var hiddenTenantId;

    $('#saveNewTenant').click(function () {
        var formData = new FormData(document.getElementById('addTenantForm'));
        var url = '/Tenant/CreateTenantData';
        var tenantId = $('#hiddenTenantId').val(); // Get the tenant ID
        hiddenTenantId = tenantId;
        // Check if it's an edit case
        if (tenantId !== '') {
            url = '/Tenant/UpdateTenantData/' + tenantId; // Append tenantId to the URL for update
        } else {
            formData.append("Tenant.AppTid", localStorage.getItem('userId'));
        }

        $.ajax({
            url: url,
            type: 'POST',
            processData: false,
            contentType: false,
            data: formData,
            success: function (response) {
                if (response.success) {
                    const tenant = response.tenant; // Assuming the response includes tenant details
                    const tenantCardHtml = `
                            <div class="tenant-card" id="tenantCard_${tenant.TenantId}">
                                <div class="card-body">
                                    <h5 class="card-title">${tenant.FirstName} ${tenant.LastName}</h5>
                                    <p>${tenant.EmailAddress}</p>
                                    <p>${tenant.PhoneNumber}</p>
                                </div>
                            </div>`;

                    // If editing an existing tenant, replace the existing card; otherwise, append the new card
                    if ($('#tenantCard_' + tenant.TenantId).length) {
                        $('#tenantCard_' + tenant.TenantId).replaceWith(tenantCardHtml);
                    } else {
                        $('#tenantsContainer').append(tenantCardHtml).show(); // Make sure the container is visible
                    }

                    $('#addNewTenantModal').modal('hide'); // Hide the modal
                    $('#addTenantForm')[0].reset(); // Reset the form for the next input
                    $('#hiddenTenantId').val(''); // Clear the hidden field for the next addition
                } else {
                    // Handle failure
                    Toast.fire({ icon: 'error', title: 'Failed to save tenant: ' + response.message });
                }
            },
            error: function (xhr, status, error) {
                Toast.fire({ icon: 'error', title: 'An error occurred: ' + error });
            }
        });
    });

    function initializeUIBasedOnMode(isEditMode) {
        // In "edit" mode, ensure tenant-related UI elements are displayed
        if (isEditMode) {
            $('#tenantsContainer').show(); // Show the container if there are existing tenants to display
            // You might want to pre-populate tenants here if you have their information available
        } else {

            $('#tenantsContainer').hide();
        }
    }

    // Call this function when the page loads to handle edit cases
    $(document).ready(function () {
        var isEditMode = $('#hiddenTenantId').val() !== ''; // Determine if in edit mode
        initializeUIBasedOnMode(isEditMode);
    });
</script>
