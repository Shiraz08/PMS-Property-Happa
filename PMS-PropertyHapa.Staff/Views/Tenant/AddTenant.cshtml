@model PMS_PropertyHapa.Models.DTO.TenantModelDto
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Add/Edit Tenant";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />

    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

</head>
<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-12 col-sm-6">
                    <h3>@(Model?.TenantId == null ? "Add Tenant" : "Edit Tenant")</h3>
                </div>
                <div class="col-12 col-sm-6">
                    <ol class="breadcrumb">
                        @if (Model?.TenantId == null)
                        {
                            <li class="breadcrumb-item"><a href="@Url.Action("AddTenant", "Tenant")"><i data-feather="home"></i></a></li>
                        }
                        else
                        {
                            <li class="breadcrumb-item"><a href="@Url.Action("EditTenant", "Tenant")"><i data-feather="home"></i></a></li>
                        }


                        <li class="breadcrumb-item">Tenant</li>
                        <li class="breadcrumb-item active">@(Model?.TenantId == null ? "Add Tenant" : "Edit Tenant")</li>
                    </ol>
                </div>
            </div>
        </div>
        <div class="edit-profile">
            <div class="row">
                <form id="tenantForm" method="post" enctype="multipart/form-data">
                    <div class="d-flex">
                        <div class="col-xl-3 d-inline-block">
                            <!-- Profile picture card-->
                            <div class="card mb-4 mb-xl-0">
                                <div class="card-header">Profile Picture</div>
                                <div class="card-body text-center">
                                    <input type="hidden" value="image" name="SaveType" id="SaveType" />
                                    <img class="img-account-profile2 rounded-circle mb-2"
                                         src="@(string.IsNullOrEmpty(Model?.Picture) ? "http://bootdey.com/img/Content/avatar/avatar1.png" : $"{Model?.Picture}")"
                                         alt="" style="width: 140px;">
                                    <div class="font-italic text-muted mb-4"></div>
                                    @Html.EditorFor(model => model.Picture, new { htmlAttributes = new {  @id="PictureUrl",@class = "btn btn-primary", @type="file", @accept="image/*", @required="required", @style="width: 219px;"} })
                                </div>
                            </div>

                        </div>
                        <div class="col-xl-9 d-inline-block">
                            <!-- Tenant Information -->
                            <div class="card">
                                <div class="card-header pb-0">
                                    <h4 class="card-title mb-0">General Information</h4>
                                    <div class="card-options"><a class="card-options-collapse" href="#" data-bs-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a><a class="card-options-remove" href="#" data-bs-toggle="card-remove"><i class="fe fe-x"></i></a></div>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <input type="hidden" id="DocumentBase64" name="Document">
                                        <input type="hidden" id="PictureBase64" name="Picture">
                                        <input type="hidden" id="OrganizationLogoBase64" name="OrganizationLogo">
                                        <input type="hidden" id="OrganizationIconBase64" name="OrganizationIcon">
                                        <input type="hidden" id="OwnerId" name="OwnerId" value="@Model?.TenantId" />
                                        <!-- First Name -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="FirstName" class="form-label">First Name</label>
                                                <input type="text" class="form-control" id="FirstName" name="FirstName" value="@Model?.FirstName" pattern="[A-Za-z]+" required />
                                            </div>
                                        </div>

                                        <!-- Middle Name -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="MiddleName" class="form-label">Middle Name</label>
                                                <input type="text" class="form-control" id="MiddleName" name="MiddleName" value="@Model?.MiddleName" pattern="[A-Za-z]+" required />
                                            </div>
                                        </div>
                                        <!-- Last Name -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="LastName" class="form-label">Last Name</label>
                                                <input type="text" class="form-control" id="LastName" name="LastName" value="@Model?.LastName" pattern="[A-Za-z]+" required />
                                            </div>
                                        </div>
                                        <!-- Gender -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Gender" class="form-label">Gender</label>
                                                <select class="form-control" id="Gender" name="Gender" required>
                                                    <option value="">Select Gender</option>
                                                    <option value="Male">Male</option>
                                                    <option value="Female">Female</option>
                                                    <option value="Other">Other</option>
                                                </select>
                                            </div>
                                        </div>
                                        <!-- Date of Birth -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="DOB" class="form-label">Date of Birth</label>
                                                <input type="date" class="form-control" id="DOB" name="DOB" value="@Model.DOB" />
                                            </div>
                                        </div>
                                        <!-- Phone Number -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="PhoneNumber" class="form-label">Phone Number</label>
                                                <input type="text" class="form-control" id="PhoneNumber" name="PhoneNumber" value="@Model?.PhoneNumber" required pattern="/^\(\d{3}\)\d{7}$/" title="Please enter a valid phone number in the format (123)4567890." oninput="validateNumberInput(this)" />
                                                <small class="text-success" id="addAnotherPhone" onclick="togglePhoneField()" style="cursor: pointer;">
                                                    <i class="bi bi-plus-circle"></i> Add another phone  +
                                                </small>
                                            </div>
                                        </div>

                                        <!-- Additional Phone Number (Initially Hidden) -->
                                        <div class="col-sm-6 col-md-3" id="additionalPhoneField" style="display: none;">
                                            <div class="mb-3">
                                                <label for="PhoneNumber2" class="form-label">Phone Number2</label>
                                                <input type="text" class="form-control" id="PhoneNumber2" name="PhoneNumber2" value="@Model?.PhoneNumber2" pattern="/^\(\d{3}\)\d{7}$/" title="Please enter a valid phone number in the format (123)4567890." oninput="validateNumberInput(this)" />
                                            </div>
                                        </div>

                                        <!-- Email Address -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="EmailAddress" class="form-label">Email Address</label>
                                                <input type="email" class="form-control" id="EmailAddress" pattern="[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$" title="Please enter a valid email address." name="EmailAddress" value="@Model?.EmailAddress" required />
                                                <small class="text-success" id="addAnotherEmail" onclick="toggleEmailField()" style="cursor: pointer;">
                                                    <i class="bi bi-plus-circle"></i> Add another email  +
                                                </small>
                                            </div>
                                        </div>

                                        <!-- Additional Email Address (Initially Hidden) -->
                                        <div class="col-sm-6 col-md-3" id="additionalEmailField" style="display: none;">
                                            <div class="mb-3">
                                                <label for="EmailAddress2" class="form-label">Email Address2</label>
                                                <input type="email" class="form-control" id="EmailAddress2" pattern="[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$" title="Please enter a valid email address." value="@Model?.EmailAddress2" name="EmailAddress2" />
                                            </div>
                                        </div>

                                        <!-- Tenant Nationality -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="TenantNationality" class="form-label">Tenant Nationality</label>
                                                <input type="text" class="form-control" id="TenantNationality" name="TenantNationality" value="@Model?.TenantNationality" required />
                                            </div>
                                        </div>

                                    </div>
                                    <hr />
                                    <br />
                                    <b><h4>Address</h4></b>
                                    <br />
                                    <div class="row">
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Address">Address</label>
                                                <input type="text" class="form-control" id="Address" name="Address" value="@Model?.Address" required maxlength="255" title="Address cannot be empty and must be shorter than 255 characters." />
                                                <div class="invalid-feedback">
                                                    Please provide a valid address.
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Address2">Address 2</label>
                                                <input type="text" class="form-control" id="Address2" name="Address2" value="@Model?.Address2" />
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Locality">City</label>
                                                <input type="text" class="form-control" id="Locality" name="Locality" value="@Model?.Locality" />
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Region">State / Region</label>
                                                <input type="text" class="form-control" id="Region" name="Region" value="@Model?.Region" />
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="CountryCode">Country Code</label>
                                                <input type="text" class="form-control" id="CountryCode" name="CountryCode" value="@Model?.CountryCode" />
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="PostalCode">Zip</label>
                                                <input type="text" class="form-control" id="PostalCode" name="PostalCode" value="@Model?.PostalCode" />
                                            </div>
                                        </div>
                                        <!-- District -->
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="District">District</label>
                                                <input type="text" class="form-control" id="District" name="District" value="@Model.District" placeholder="Enter district">
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Country">Country</label>
                                                <select class="form-control" id="Country" name="Country">
                                                    <option value="">Select Country</option>
                                                    <option value="Germany">Germany</option>
                                                    <option value="Canada">Canada</option>
                                                    <option value="USA">USA</option>
                                                    <option value="Australia">Australia</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="VAT">VAT Number</label>
                                                <input type="text" class="form-control" id="VAT" name="VAT" value="@Model?.VAT" placeholder="Enter VAT number">
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="LegalName">Legal Name</label>
                                                <input type="text" class="form-control" id="LegalName" name="LegalName" value="@Model?.LegalName" placeholder="Enter legal name">
                                            </div>
                                        </div>
                                    </div>
                                    <hr />
                                    <br />
                                    <div class="row">
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3" onclick="toggleEmergencyContact()" style="cursor: pointer;">
                                                <label for="PostalCode">EMERGENCY CONTACT</label>
                                                <small class="text-success"><i class="bi bi-plus-circle"></i> Add Emergency contact +</small>
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-3" id="emergencyContactField" style="display: none;">
                                            <div class="mb-3">
                                                <label for="EmergencyContactInfo" class="form-label">Emergency Contact Info</label>
                                                <input type="text" class="form-control" id="EmergencyContactInfo" name="EmergencyContactInfo" value="@Model?.EmergencyContactInfo"  />
                                            </div>

                                        </div>
                                    </div>
                                    <hr />
                                    <br />
                                    <b><h4>Add Pet</h4></b>
                                    <br />
                                    <div class="row" id="petsContainer">
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="PetPicture0">Pet Picture:</label>
                                                <input type="file" class="form-control" name="Pets[0].Picture" accept="image/*" id="PetPicture0">
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="PetName0">Name:</label>
                                                <input type="text" class="form-control" name="Pets[0].Name" id="PetName0">
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="PetBreed0">Breed:</label>
                                                <input type="text" class="form-control" name="Pets[0].Breed" id="PetBreed0">
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="PetType0">Type:</label>
                                                <input type="text" class="form-control" name="Pets[0].Type" id="PetType0">
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="PetQuantity0">Quantity:</label>
                                                <input type="number" class="form-control" name="Pets[0].Quantity" id="PetQuantity0">
                                            </div>
                                        </div>

                                        <div class="col-sm-6 align-self-end">
                                            <div class="mb-3">
                                                <button onclick="addPetEntry();" class="btn btn-primary btn-sm">
                                                    <i class="bi bi-plus-circle-fill"></i> +
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <hr />
                                    <br />
                                    <b><h4>Account Information</h4></b>
                                    <br />
                                    <br />
                                    <div class="row">
                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Account_Name">Account Name</label>
                                                <input type="text" class="form-control" id="AccountName" name="AccountName" placeholder="Enter account name">
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Account_Holder">Account Holder</label>
                                                <input type="text" class="form-control" id="AccountHolder" name="AccountHolder" placeholder="Enter account holder's name">
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Account_IBAN">Account IBAN</label>
                                                <input type="text" class="form-control" id="AccountIBAN" name="AccountIBAN" placeholder="Enter IBAN">
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Account_Swift">Account Swift/BIC</label>
                                                <input type="text" class="form-control" id="AccountSwift" name="AccountSwift" placeholder="Enter Swift/BIC">
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Account_Bank">Account Bank</label>
                                                <input type="text" class="form-control" id="AccountBank" name="AccountBank" placeholder="Enter bank name">
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-3">
                                            <div class="mb-3">
                                                <label for="Account_Currency">Account Currency</label>
                                                <input type="text" class="form-control" id="AccountCurrency" name="AccountCurrency" placeholder="Enter currency">
                                            </div>
                                        </div>
                                    </div>
                                    <hr />

                                    <div class="col-sm-12 col-md-12">
                                        <div class="mb-3">
                                            <label for="DocumentFile" class="form-label">Document Upload</label>
                                            <input type="file" class="form-control" id="DocumentFile" name="DocumentFile" accept=".pdf,.xls,.xlsx,.doc,.docx" />
                                        </div>
                                    </div>

                                    <br />
                                    <hr />
                                    <br />
                                    <div class="col-sm-6 col-md-3">
                                        <div class="mb-3">
                                            <button type="button" id="saveButton" class="btn btn-primary">@(Model?.TenantId == null ? "Add" : "Edit") Tenant</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



<script>
    window.toggleEmergencyContact = function () {
        var emergencyContactField = document.getElementById("emergencyContactField");
        emergencyContactField.style.display = emergencyContactField.style.display === "none" ? "block" : "none";
    };

    window.togglePhoneField = function () {
        var additionalPhoneField = document.getElementById("additionalPhoneField");
        additionalPhoneField.style.display = additionalPhoneField.style.display === "none" ? "block" : "none";
    };

    window.toggleEmailField = function () {
        var additionalEmailField = document.getElementById("additionalEmailField");
        additionalEmailField.style.display = additionalEmailField.style.display === "none" ? "block" : "none";
    };


    window.addPetEntry = function () {
        var petIndex = document.querySelectorAll('.petEntry').length;

        var newPetHTML = `<div class="row petEntry">
                    <div class="col-sm-6 col-md-3">
                        <div class="mb-3">
                            <label for="PetPicture${petIndex}">Pet Picture:</label>
                            <input type="file" class="form-control" name="Pets[${petIndex}].Picture" accept="image/*" id="PetPicture${petIndex}">
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-3">
                        <div class="mb-3">
                            <label for="PetName${petIndex}">Name:</label>
                            <input type="text" class="form-control" name="Pets[${petIndex}].Name" id="PetName${petIndex}">
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-3">
                        <div class="mb-3">
                            <label for="PetBreed${petIndex}">Breed:</label>
                            <input type="text" class="form-control" name="Pets[${petIndex}].Breed" id="PetBreed${petIndex}">
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-3">
                        <div class="mb-3">
                            <label for="PetType${petIndex}">Type:</label>
                            <input type="text" class="form-control" name="Pets[${petIndex}].Type" id="PetType${petIndex}">
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-3">
                        <div class="mb-3">
                            <label for="PetQuantity${petIndex}">Quantity:</label>
                            <input type="number" class="form-control" name="Pets[${petIndex}].Quantity" id="PetQuantity${petIndex}">
                        </div>
                    </div>
                   <div class="col-sm-6 align-self-end">
                      <div class="mb-3">
                        <button type="button" class="btn btn-danger btn-sm" onclick="removePetEntry(this)">
                            <i class="bi bi-x-circle"></i>
                        </button>
                    </div>
                    </div>
                </div>`;

        var container = document.getElementById('petsContainer');
        container.insertAdjacentHTML('beforeend', newPetHTML);
    };

    window.removePetEntry = function (element) {
        element.closest('.petEntry').remove();
    }





    const toggleCheckbox = document.getElementById('toggleOrgInfo');
    toggleCheckbox.addEventListener('change', function () {
        const orgFields = document.querySelectorAll('.organization-field');
        orgFields.forEach(field => {
            field.style.display = this.checked ? 'block' : 'none';
        });
    });




    function validateEmail(email) {
        const atSymbol = String.fromCharCode(64);
        const pattern = new RegExp("^[a-zA-Z0-9._%+-]+" + atSymbol + "[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$");
        return pattern.test(email);
    }

    function validatePhoneNumber(phoneNumber) {
        const pattern = /^\(\d{3}\)\d{7}$/;
        return pattern.test(phoneNumber);
    }


    function validateWebsite(website) {
        const pattern = /^https?:\/\/[^\s$.?#].[^\s]*$/;
        return pattern.test(website);
    }

    function validateAddress(address) {
        return address.trim().length > 0;
    }

    function showError(message) {

        toastr.error(message);
    }



    function validateField(field, validatorFunc, errorMessage) {
        if (!validatorFunc(field.value)) {
            showError(errorMessage);
            return false;
        } else {
            return true;
        }
    }



    toastr.options = {
        "closeButton": false,
        "debug": false,
        "newestOnTop": false,
        "progressBar": true,
        "positionClass": "toast-top-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "5000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
    };

    // Collect input elements
    const emailAddress = document.getElementById('EmailAddress');
    const emailAddress2 = document.getElementById('EmailAddress2');
    const phoneNumber = document.getElementById('PhoneNumber');
    const phoneNumber2 = document.getElementById('PhoneNumber2');
    const website = document.getElementById('Website');
    const address = document.getElementById('Address');

    function checkValidationsAndSubmit() {
        const isEmailAddressValid = validateField(emailAddress, validateEmail, 'Please enter a valid email address.');
        const isEmailAddress2Valid = validateField(emailAddress2, validateEmail, 'Please enter a valid email address.');
        const isPhoneNumberValid = validateField(phoneNumber, validatePhoneNumber, 'Please enter a valid phone number.');
        const isPhoneNumber2Valid = validateField(phoneNumber2, validatePhoneNumber, 'Please enter a valid phone number.');
        const isWebsiteValid = validateField(website, validateWebsite, 'Please enter a valid website URL.');
        const isAddressValid = validateField(address, validateAddress, 'Address cannot be empty.');

        if (isEmailAddressValid && isEmailAddress2Valid && isPhoneNumberValid && isPhoneNumber2Valid && isWebsiteValid && isAddressValid) {

            submitTenantForm(event);
        } else {
            console.error("Validation errors present. Cannot submit form.");
        }
    }


    const saveButton = document.getElementById('saveButton');
    if (saveButton) {
        saveButton.addEventListener('click', function (event) {
            event.preventDefault();
            checkValidationsAndSubmit();
        });
    }




    async function submitTenantForm(event) {
        debugger;
        const fileInputs = {
            'DocumentFile': 'DocumentBase64',
            'PictureUrl': 'PictureBase64',
            'OrganizationLogoFile': 'OrganizationLogoBase64',
            'OrganizationIconFile': 'OrganizationIconBase64'
        };

        for (const [inputId, outputId] of Object.entries(fileInputs)) {
            const inputFile = document.getElementById(inputId);
            if (inputFile && inputFile.files.length > 0) {
                document.getElementById(outputId).value = await convertFileToBase64(inputFile.files[0]);
            }
        }

        const formElement = document.getElementById('tenantForm');
        var ajaxUrl = $('#TenantId').val() ? '/Tenant/Update' : '/Tenant/Create';
        const formData = new FormData(formElement);
        Object.keys(fileInputs).forEach(key => formData.delete(key));

        try {
            var userId = localStorage.getItem('userId');
            formData.append('AppTId', userId);
            const response = await fetch(ajaxUrl, {
                method: 'POST',
                body: formData,
                headers: {
                    'Accept': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            });

            if (response.ok) {
                const result = await response.json();
                console.log(result);
                toastr.success('Operation successful');
                window.location.href = '/Tenant/Index';
            } else {
                console.error('Server responded with non-OK status');
                toastr.error('Operation failed. Server responded with an error.');
            }
        } catch (error) {
            console.error('Error submitting form:', error);
            toastr.error('Operation failed. Network error or server is not responding.');
        }
    }

    function convertFileToBase64(file) {
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => resolve(reader.result.split(',')[1]);
            reader.onerror = error => reject(error);
        });
    }

</script>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const pictureInput = document.getElementById('PictureUrl');
        const profileImage = document.querySelector('.img-account-profile2');

        pictureInput.addEventListener('change', function (event) {
            if (event.target.files && event.target.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    profileImage.src = e.target.result;
                };

                reader.readAsDataURL(event.target.files[0]);
            }
        });
    });



    document.addEventListener('DOMContentLoaded', function () {
        var gender = '@Model?.Gender';
        if (gender) {
            document.getElementById("Gender").value = gender;
        }
    });



    document.addEventListener('DOMContentLoaded', function () {
        var country = '@Model?.Country';
        if (country) {
            document.getElementById("Country").value = country;
        }
    }
                                        });


    function downloadFile(id) {
        window.location.href = '/Tenant/Download?id=' + id;
    }


</script>